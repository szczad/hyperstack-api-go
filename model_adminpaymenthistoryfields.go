/*
Infrahub-API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hyperstack

import (
	"encoding/json"
	"time"
)

// checks if the Adminpaymenthistoryfields type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Adminpaymenthistoryfields{}

// Adminpaymenthistoryfields struct for Adminpaymenthistoryfields
type Adminpaymenthistoryfields struct {
	Amount *float32 `json:"amount,omitempty"`
	Medium *string `json:"medium,omitempty"`
	Status *string `json:"status,omitempty"`
	TransactionId *string `json:"transaction_id,omitempty"`
	PaymentId *string `json:"payment_id,omitempty"`
	CreatedAt *time.Time `json:"created_at,omitempty"`
}

// NewAdminpaymenthistoryfields instantiates a new Adminpaymenthistoryfields object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdminpaymenthistoryfields() *Adminpaymenthistoryfields {
	this := Adminpaymenthistoryfields{}
	return &this
}

// NewAdminpaymenthistoryfieldsWithDefaults instantiates a new Adminpaymenthistoryfields object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdminpaymenthistoryfieldsWithDefaults() *Adminpaymenthistoryfields {
	this := Adminpaymenthistoryfields{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *Adminpaymenthistoryfields) GetAmount() float32 {
	if o == nil || IsNil(o.Amount) {
		var ret float32
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Adminpaymenthistoryfields) GetAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *Adminpaymenthistoryfields) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given float32 and assigns it to the Amount field.
func (o *Adminpaymenthistoryfields) SetAmount(v float32) {
	o.Amount = &v
}

// GetMedium returns the Medium field value if set, zero value otherwise.
func (o *Adminpaymenthistoryfields) GetMedium() string {
	if o == nil || IsNil(o.Medium) {
		var ret string
		return ret
	}
	return *o.Medium
}

// GetMediumOk returns a tuple with the Medium field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Adminpaymenthistoryfields) GetMediumOk() (*string, bool) {
	if o == nil || IsNil(o.Medium) {
		return nil, false
	}
	return o.Medium, true
}

// HasMedium returns a boolean if a field has been set.
func (o *Adminpaymenthistoryfields) HasMedium() bool {
	if o != nil && !IsNil(o.Medium) {
		return true
	}

	return false
}

// SetMedium gets a reference to the given string and assigns it to the Medium field.
func (o *Adminpaymenthistoryfields) SetMedium(v string) {
	o.Medium = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *Adminpaymenthistoryfields) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Adminpaymenthistoryfields) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *Adminpaymenthistoryfields) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *Adminpaymenthistoryfields) SetStatus(v string) {
	o.Status = &v
}

// GetTransactionId returns the TransactionId field value if set, zero value otherwise.
func (o *Adminpaymenthistoryfields) GetTransactionId() string {
	if o == nil || IsNil(o.TransactionId) {
		var ret string
		return ret
	}
	return *o.TransactionId
}

// GetTransactionIdOk returns a tuple with the TransactionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Adminpaymenthistoryfields) GetTransactionIdOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionId) {
		return nil, false
	}
	return o.TransactionId, true
}

// HasTransactionId returns a boolean if a field has been set.
func (o *Adminpaymenthistoryfields) HasTransactionId() bool {
	if o != nil && !IsNil(o.TransactionId) {
		return true
	}

	return false
}

// SetTransactionId gets a reference to the given string and assigns it to the TransactionId field.
func (o *Adminpaymenthistoryfields) SetTransactionId(v string) {
	o.TransactionId = &v
}

// GetPaymentId returns the PaymentId field value if set, zero value otherwise.
func (o *Adminpaymenthistoryfields) GetPaymentId() string {
	if o == nil || IsNil(o.PaymentId) {
		var ret string
		return ret
	}
	return *o.PaymentId
}

// GetPaymentIdOk returns a tuple with the PaymentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Adminpaymenthistoryfields) GetPaymentIdOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentId) {
		return nil, false
	}
	return o.PaymentId, true
}

// HasPaymentId returns a boolean if a field has been set.
func (o *Adminpaymenthistoryfields) HasPaymentId() bool {
	if o != nil && !IsNil(o.PaymentId) {
		return true
	}

	return false
}

// SetPaymentId gets a reference to the given string and assigns it to the PaymentId field.
func (o *Adminpaymenthistoryfields) SetPaymentId(v string) {
	o.PaymentId = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *Adminpaymenthistoryfields) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Adminpaymenthistoryfields) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *Adminpaymenthistoryfields) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *Adminpaymenthistoryfields) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

func (o Adminpaymenthistoryfields) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Adminpaymenthistoryfields) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.Medium) {
		toSerialize["medium"] = o.Medium
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.TransactionId) {
		toSerialize["transaction_id"] = o.TransactionId
	}
	if !IsNil(o.PaymentId) {
		toSerialize["payment_id"] = o.PaymentId
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	return toSerialize, nil
}

type NullableAdminpaymenthistoryfields struct {
	value *Adminpaymenthistoryfields
	isSet bool
}

func (v NullableAdminpaymenthistoryfields) Get() *Adminpaymenthistoryfields {
	return v.value
}

func (v *NullableAdminpaymenthistoryfields) Set(val *Adminpaymenthistoryfields) {
	v.value = val
	v.isSet = true
}

func (v NullableAdminpaymenthistoryfields) IsSet() bool {
	return v.isSet
}

func (v *NullableAdminpaymenthistoryfields) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdminpaymenthistoryfields(val *Adminpaymenthistoryfields) *NullableAdminpaymenthistoryfields {
	return &NullableAdminpaymenthistoryfields{value: val, isSet: true}
}

func (v NullableAdminpaymenthistoryfields) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdminpaymenthistoryfields) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


