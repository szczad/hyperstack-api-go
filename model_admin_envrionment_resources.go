/*
Infrahub-API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hyperstack

import (
	"encoding/json"
	"time"
)

// checks if the AdminEnvrionmentResources type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdminEnvrionmentResources{}

// AdminEnvrionmentResources struct for AdminEnvrionmentResources
type AdminEnvrionmentResources struct {
	Id *int32 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Region *string `json:"region,omitempty"`
	Instances []AdminInstanceResources `json:"instances,omitempty"`
	Volumes []AdminVolumeResource `json:"volumes,omitempty"`
	Containers []AdminContainerResource `json:"containers,omitempty"`
	Clusters []AdminClusterResource `json:"clusters,omitempty"`
	CreatedAt *time.Time `json:"created_at,omitempty"`
}

// NewAdminEnvrionmentResources instantiates a new AdminEnvrionmentResources object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdminEnvrionmentResources() *AdminEnvrionmentResources {
	this := AdminEnvrionmentResources{}
	return &this
}

// NewAdminEnvrionmentResourcesWithDefaults instantiates a new AdminEnvrionmentResources object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdminEnvrionmentResourcesWithDefaults() *AdminEnvrionmentResources {
	this := AdminEnvrionmentResources{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AdminEnvrionmentResources) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdminEnvrionmentResources) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AdminEnvrionmentResources) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *AdminEnvrionmentResources) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AdminEnvrionmentResources) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdminEnvrionmentResources) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AdminEnvrionmentResources) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AdminEnvrionmentResources) SetName(v string) {
	o.Name = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *AdminEnvrionmentResources) GetRegion() string {
	if o == nil || IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdminEnvrionmentResources) GetRegionOk() (*string, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *AdminEnvrionmentResources) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *AdminEnvrionmentResources) SetRegion(v string) {
	o.Region = &v
}

// GetInstances returns the Instances field value if set, zero value otherwise.
func (o *AdminEnvrionmentResources) GetInstances() []AdminInstanceResources {
	if o == nil || IsNil(o.Instances) {
		var ret []AdminInstanceResources
		return ret
	}
	return o.Instances
}

// GetInstancesOk returns a tuple with the Instances field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdminEnvrionmentResources) GetInstancesOk() ([]AdminInstanceResources, bool) {
	if o == nil || IsNil(o.Instances) {
		return nil, false
	}
	return o.Instances, true
}

// HasInstances returns a boolean if a field has been set.
func (o *AdminEnvrionmentResources) HasInstances() bool {
	if o != nil && !IsNil(o.Instances) {
		return true
	}

	return false
}

// SetInstances gets a reference to the given []AdminInstanceResources and assigns it to the Instances field.
func (o *AdminEnvrionmentResources) SetInstances(v []AdminInstanceResources) {
	o.Instances = v
}

// GetVolumes returns the Volumes field value if set, zero value otherwise.
func (o *AdminEnvrionmentResources) GetVolumes() []AdminVolumeResource {
	if o == nil || IsNil(o.Volumes) {
		var ret []AdminVolumeResource
		return ret
	}
	return o.Volumes
}

// GetVolumesOk returns a tuple with the Volumes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdminEnvrionmentResources) GetVolumesOk() ([]AdminVolumeResource, bool) {
	if o == nil || IsNil(o.Volumes) {
		return nil, false
	}
	return o.Volumes, true
}

// HasVolumes returns a boolean if a field has been set.
func (o *AdminEnvrionmentResources) HasVolumes() bool {
	if o != nil && !IsNil(o.Volumes) {
		return true
	}

	return false
}

// SetVolumes gets a reference to the given []AdminVolumeResource and assigns it to the Volumes field.
func (o *AdminEnvrionmentResources) SetVolumes(v []AdminVolumeResource) {
	o.Volumes = v
}

// GetContainers returns the Containers field value if set, zero value otherwise.
func (o *AdminEnvrionmentResources) GetContainers() []AdminContainerResource {
	if o == nil || IsNil(o.Containers) {
		var ret []AdminContainerResource
		return ret
	}
	return o.Containers
}

// GetContainersOk returns a tuple with the Containers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdminEnvrionmentResources) GetContainersOk() ([]AdminContainerResource, bool) {
	if o == nil || IsNil(o.Containers) {
		return nil, false
	}
	return o.Containers, true
}

// HasContainers returns a boolean if a field has been set.
func (o *AdminEnvrionmentResources) HasContainers() bool {
	if o != nil && !IsNil(o.Containers) {
		return true
	}

	return false
}

// SetContainers gets a reference to the given []AdminContainerResource and assigns it to the Containers field.
func (o *AdminEnvrionmentResources) SetContainers(v []AdminContainerResource) {
	o.Containers = v
}

// GetClusters returns the Clusters field value if set, zero value otherwise.
func (o *AdminEnvrionmentResources) GetClusters() []AdminClusterResource {
	if o == nil || IsNil(o.Clusters) {
		var ret []AdminClusterResource
		return ret
	}
	return o.Clusters
}

// GetClustersOk returns a tuple with the Clusters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdminEnvrionmentResources) GetClustersOk() ([]AdminClusterResource, bool) {
	if o == nil || IsNil(o.Clusters) {
		return nil, false
	}
	return o.Clusters, true
}

// HasClusters returns a boolean if a field has been set.
func (o *AdminEnvrionmentResources) HasClusters() bool {
	if o != nil && !IsNil(o.Clusters) {
		return true
	}

	return false
}

// SetClusters gets a reference to the given []AdminClusterResource and assigns it to the Clusters field.
func (o *AdminEnvrionmentResources) SetClusters(v []AdminClusterResource) {
	o.Clusters = v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *AdminEnvrionmentResources) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdminEnvrionmentResources) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *AdminEnvrionmentResources) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *AdminEnvrionmentResources) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

func (o AdminEnvrionmentResources) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdminEnvrionmentResources) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	if !IsNil(o.Instances) {
		toSerialize["instances"] = o.Instances
	}
	if !IsNil(o.Volumes) {
		toSerialize["volumes"] = o.Volumes
	}
	if !IsNil(o.Containers) {
		toSerialize["containers"] = o.Containers
	}
	if !IsNil(o.Clusters) {
		toSerialize["clusters"] = o.Clusters
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	return toSerialize, nil
}

type NullableAdminEnvrionmentResources struct {
	value *AdminEnvrionmentResources
	isSet bool
}

func (v NullableAdminEnvrionmentResources) Get() *AdminEnvrionmentResources {
	return v.value
}

func (v *NullableAdminEnvrionmentResources) Set(val *AdminEnvrionmentResources) {
	v.value = val
	v.isSet = true
}

func (v NullableAdminEnvrionmentResources) IsSet() bool {
	return v.isSet
}

func (v *NullableAdminEnvrionmentResources) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdminEnvrionmentResources(val *AdminEnvrionmentResources) *NullableAdminEnvrionmentResources {
	return &NullableAdminEnvrionmentResources{value: val, isSet: true}
}

func (v NullableAdminEnvrionmentResources) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdminEnvrionmentResources) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


