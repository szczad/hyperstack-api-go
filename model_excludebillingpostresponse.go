/*
Infrahub-API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hyperstack

import (
	"encoding/json"
)

// checks if the Excludebillingpostresponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Excludebillingpostresponse{}

// Excludebillingpostresponse struct for Excludebillingpostresponse
type Excludebillingpostresponse struct {
	Status *bool `json:"status,omitempty"`
	Message *string `json:"message,omitempty"`
	Data *Excludebillingpostpayload `json:"data,omitempty"`
}

// NewExcludebillingpostresponse instantiates a new Excludebillingpostresponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExcludebillingpostresponse() *Excludebillingpostresponse {
	this := Excludebillingpostresponse{}
	return &this
}

// NewExcludebillingpostresponseWithDefaults instantiates a new Excludebillingpostresponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExcludebillingpostresponseWithDefaults() *Excludebillingpostresponse {
	this := Excludebillingpostresponse{}
	return &this
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *Excludebillingpostresponse) GetStatus() bool {
	if o == nil || IsNil(o.Status) {
		var ret bool
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Excludebillingpostresponse) GetStatusOk() (*bool, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *Excludebillingpostresponse) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given bool and assigns it to the Status field.
func (o *Excludebillingpostresponse) SetStatus(v bool) {
	o.Status = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *Excludebillingpostresponse) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Excludebillingpostresponse) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *Excludebillingpostresponse) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *Excludebillingpostresponse) SetMessage(v string) {
	o.Message = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *Excludebillingpostresponse) GetData() Excludebillingpostpayload {
	if o == nil || IsNil(o.Data) {
		var ret Excludebillingpostpayload
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Excludebillingpostresponse) GetDataOk() (*Excludebillingpostpayload, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *Excludebillingpostresponse) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given Excludebillingpostpayload and assigns it to the Data field.
func (o *Excludebillingpostresponse) SetData(v Excludebillingpostpayload) {
	o.Data = &v
}

func (o Excludebillingpostresponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Excludebillingpostresponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	return toSerialize, nil
}

type NullableExcludebillingpostresponse struct {
	value *Excludebillingpostresponse
	isSet bool
}

func (v NullableExcludebillingpostresponse) Get() *Excludebillingpostresponse {
	return v.value
}

func (v *NullableExcludebillingpostresponse) Set(val *Excludebillingpostresponse) {
	v.value = val
	v.isSet = true
}

func (v NullableExcludebillingpostresponse) IsSet() bool {
	return v.isSet
}

func (v *NullableExcludebillingpostresponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExcludebillingpostresponse(val *Excludebillingpostresponse) *NullableExcludebillingpostresponse {
	return &NullableExcludebillingpostresponse{value: val, isSet: true}
}

func (v NullableExcludebillingpostresponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExcludebillingpostresponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


