/*
Infrahub-API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hyperstack

import (
	"encoding/json"
)

// checks if the AdminResource type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdminResource{}

// AdminResource struct for AdminResource
type AdminResource struct {
	Instance *AdminInstanceResources `json:"instance,omitempty"`
	Volume *AdminVolumeResource `json:"volume,omitempty"`
	Container *AdminContainerResource `json:"container,omitempty"`
	Cluster *AdminClusterResource `json:"cluster,omitempty"`
}

// NewAdminResource instantiates a new AdminResource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdminResource() *AdminResource {
	this := AdminResource{}
	return &this
}

// NewAdminResourceWithDefaults instantiates a new AdminResource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdminResourceWithDefaults() *AdminResource {
	this := AdminResource{}
	return &this
}

// GetInstance returns the Instance field value if set, zero value otherwise.
func (o *AdminResource) GetInstance() AdminInstanceResources {
	if o == nil || IsNil(o.Instance) {
		var ret AdminInstanceResources
		return ret
	}
	return *o.Instance
}

// GetInstanceOk returns a tuple with the Instance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdminResource) GetInstanceOk() (*AdminInstanceResources, bool) {
	if o == nil || IsNil(o.Instance) {
		return nil, false
	}
	return o.Instance, true
}

// HasInstance returns a boolean if a field has been set.
func (o *AdminResource) HasInstance() bool {
	if o != nil && !IsNil(o.Instance) {
		return true
	}

	return false
}

// SetInstance gets a reference to the given AdminInstanceResources and assigns it to the Instance field.
func (o *AdminResource) SetInstance(v AdminInstanceResources) {
	o.Instance = &v
}

// GetVolume returns the Volume field value if set, zero value otherwise.
func (o *AdminResource) GetVolume() AdminVolumeResource {
	if o == nil || IsNil(o.Volume) {
		var ret AdminVolumeResource
		return ret
	}
	return *o.Volume
}

// GetVolumeOk returns a tuple with the Volume field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdminResource) GetVolumeOk() (*AdminVolumeResource, bool) {
	if o == nil || IsNil(o.Volume) {
		return nil, false
	}
	return o.Volume, true
}

// HasVolume returns a boolean if a field has been set.
func (o *AdminResource) HasVolume() bool {
	if o != nil && !IsNil(o.Volume) {
		return true
	}

	return false
}

// SetVolume gets a reference to the given AdminVolumeResource and assigns it to the Volume field.
func (o *AdminResource) SetVolume(v AdminVolumeResource) {
	o.Volume = &v
}

// GetContainer returns the Container field value if set, zero value otherwise.
func (o *AdminResource) GetContainer() AdminContainerResource {
	if o == nil || IsNil(o.Container) {
		var ret AdminContainerResource
		return ret
	}
	return *o.Container
}

// GetContainerOk returns a tuple with the Container field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdminResource) GetContainerOk() (*AdminContainerResource, bool) {
	if o == nil || IsNil(o.Container) {
		return nil, false
	}
	return o.Container, true
}

// HasContainer returns a boolean if a field has been set.
func (o *AdminResource) HasContainer() bool {
	if o != nil && !IsNil(o.Container) {
		return true
	}

	return false
}

// SetContainer gets a reference to the given AdminContainerResource and assigns it to the Container field.
func (o *AdminResource) SetContainer(v AdminContainerResource) {
	o.Container = &v
}

// GetCluster returns the Cluster field value if set, zero value otherwise.
func (o *AdminResource) GetCluster() AdminClusterResource {
	if o == nil || IsNil(o.Cluster) {
		var ret AdminClusterResource
		return ret
	}
	return *o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdminResource) GetClusterOk() (*AdminClusterResource, bool) {
	if o == nil || IsNil(o.Cluster) {
		return nil, false
	}
	return o.Cluster, true
}

// HasCluster returns a boolean if a field has been set.
func (o *AdminResource) HasCluster() bool {
	if o != nil && !IsNil(o.Cluster) {
		return true
	}

	return false
}

// SetCluster gets a reference to the given AdminClusterResource and assigns it to the Cluster field.
func (o *AdminResource) SetCluster(v AdminClusterResource) {
	o.Cluster = &v
}

func (o AdminResource) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdminResource) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Instance) {
		toSerialize["instance"] = o.Instance
	}
	if !IsNil(o.Volume) {
		toSerialize["volume"] = o.Volume
	}
	if !IsNil(o.Container) {
		toSerialize["container"] = o.Container
	}
	if !IsNil(o.Cluster) {
		toSerialize["cluster"] = o.Cluster
	}
	return toSerialize, nil
}

type NullableAdminResource struct {
	value *AdminResource
	isSet bool
}

func (v NullableAdminResource) Get() *AdminResource {
	return v.value
}

func (v *NullableAdminResource) Set(val *AdminResource) {
	v.value = val
	v.isSet = true
}

func (v NullableAdminResource) IsSet() bool {
	return v.isSet
}

func (v *NullableAdminResource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdminResource(val *AdminResource) *NullableAdminResource {
	return &NullableAdminResource{value: val, isSet: true}
}

func (v NullableAdminResource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdminResource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


