/*
Infrahub-API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hyperstack

import (
	"encoding/json"
	"time"
)

// checks if the AdminClusterResource type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdminClusterResource{}

// AdminClusterResource struct for AdminClusterResource
type AdminClusterResource struct {
	Id *int32 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	KubernetesVersion *string `json:"kubernetes_version,omitempty"`
	Status *string `json:"status,omitempty"`
	MasterCount *int32 `json:"master_count,omitempty"`
	NodeCount *int32 `json:"node_count,omitempty"`
	NodeFlavor *AdminFlavorResource `json:"node_flavor,omitempty"`
	EnablePublicIp *bool `json:"enable_public_ip,omitempty"`
	CreatedAt *time.Time `json:"created_at,omitempty"`
}

// NewAdminClusterResource instantiates a new AdminClusterResource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdminClusterResource() *AdminClusterResource {
	this := AdminClusterResource{}
	return &this
}

// NewAdminClusterResourceWithDefaults instantiates a new AdminClusterResource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdminClusterResourceWithDefaults() *AdminClusterResource {
	this := AdminClusterResource{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AdminClusterResource) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdminClusterResource) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AdminClusterResource) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *AdminClusterResource) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AdminClusterResource) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdminClusterResource) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AdminClusterResource) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AdminClusterResource) SetName(v string) {
	o.Name = &v
}

// GetKubernetesVersion returns the KubernetesVersion field value if set, zero value otherwise.
func (o *AdminClusterResource) GetKubernetesVersion() string {
	if o == nil || IsNil(o.KubernetesVersion) {
		var ret string
		return ret
	}
	return *o.KubernetesVersion
}

// GetKubernetesVersionOk returns a tuple with the KubernetesVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdminClusterResource) GetKubernetesVersionOk() (*string, bool) {
	if o == nil || IsNil(o.KubernetesVersion) {
		return nil, false
	}
	return o.KubernetesVersion, true
}

// HasKubernetesVersion returns a boolean if a field has been set.
func (o *AdminClusterResource) HasKubernetesVersion() bool {
	if o != nil && !IsNil(o.KubernetesVersion) {
		return true
	}

	return false
}

// SetKubernetesVersion gets a reference to the given string and assigns it to the KubernetesVersion field.
func (o *AdminClusterResource) SetKubernetesVersion(v string) {
	o.KubernetesVersion = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *AdminClusterResource) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdminClusterResource) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *AdminClusterResource) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *AdminClusterResource) SetStatus(v string) {
	o.Status = &v
}

// GetMasterCount returns the MasterCount field value if set, zero value otherwise.
func (o *AdminClusterResource) GetMasterCount() int32 {
	if o == nil || IsNil(o.MasterCount) {
		var ret int32
		return ret
	}
	return *o.MasterCount
}

// GetMasterCountOk returns a tuple with the MasterCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdminClusterResource) GetMasterCountOk() (*int32, bool) {
	if o == nil || IsNil(o.MasterCount) {
		return nil, false
	}
	return o.MasterCount, true
}

// HasMasterCount returns a boolean if a field has been set.
func (o *AdminClusterResource) HasMasterCount() bool {
	if o != nil && !IsNil(o.MasterCount) {
		return true
	}

	return false
}

// SetMasterCount gets a reference to the given int32 and assigns it to the MasterCount field.
func (o *AdminClusterResource) SetMasterCount(v int32) {
	o.MasterCount = &v
}

// GetNodeCount returns the NodeCount field value if set, zero value otherwise.
func (o *AdminClusterResource) GetNodeCount() int32 {
	if o == nil || IsNil(o.NodeCount) {
		var ret int32
		return ret
	}
	return *o.NodeCount
}

// GetNodeCountOk returns a tuple with the NodeCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdminClusterResource) GetNodeCountOk() (*int32, bool) {
	if o == nil || IsNil(o.NodeCount) {
		return nil, false
	}
	return o.NodeCount, true
}

// HasNodeCount returns a boolean if a field has been set.
func (o *AdminClusterResource) HasNodeCount() bool {
	if o != nil && !IsNil(o.NodeCount) {
		return true
	}

	return false
}

// SetNodeCount gets a reference to the given int32 and assigns it to the NodeCount field.
func (o *AdminClusterResource) SetNodeCount(v int32) {
	o.NodeCount = &v
}

// GetNodeFlavor returns the NodeFlavor field value if set, zero value otherwise.
func (o *AdminClusterResource) GetNodeFlavor() AdminFlavorResource {
	if o == nil || IsNil(o.NodeFlavor) {
		var ret AdminFlavorResource
		return ret
	}
	return *o.NodeFlavor
}

// GetNodeFlavorOk returns a tuple with the NodeFlavor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdminClusterResource) GetNodeFlavorOk() (*AdminFlavorResource, bool) {
	if o == nil || IsNil(o.NodeFlavor) {
		return nil, false
	}
	return o.NodeFlavor, true
}

// HasNodeFlavor returns a boolean if a field has been set.
func (o *AdminClusterResource) HasNodeFlavor() bool {
	if o != nil && !IsNil(o.NodeFlavor) {
		return true
	}

	return false
}

// SetNodeFlavor gets a reference to the given AdminFlavorResource and assigns it to the NodeFlavor field.
func (o *AdminClusterResource) SetNodeFlavor(v AdminFlavorResource) {
	o.NodeFlavor = &v
}

// GetEnablePublicIp returns the EnablePublicIp field value if set, zero value otherwise.
func (o *AdminClusterResource) GetEnablePublicIp() bool {
	if o == nil || IsNil(o.EnablePublicIp) {
		var ret bool
		return ret
	}
	return *o.EnablePublicIp
}

// GetEnablePublicIpOk returns a tuple with the EnablePublicIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdminClusterResource) GetEnablePublicIpOk() (*bool, bool) {
	if o == nil || IsNil(o.EnablePublicIp) {
		return nil, false
	}
	return o.EnablePublicIp, true
}

// HasEnablePublicIp returns a boolean if a field has been set.
func (o *AdminClusterResource) HasEnablePublicIp() bool {
	if o != nil && !IsNil(o.EnablePublicIp) {
		return true
	}

	return false
}

// SetEnablePublicIp gets a reference to the given bool and assigns it to the EnablePublicIp field.
func (o *AdminClusterResource) SetEnablePublicIp(v bool) {
	o.EnablePublicIp = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *AdminClusterResource) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdminClusterResource) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *AdminClusterResource) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *AdminClusterResource) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

func (o AdminClusterResource) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdminClusterResource) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.KubernetesVersion) {
		toSerialize["kubernetes_version"] = o.KubernetesVersion
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.MasterCount) {
		toSerialize["master_count"] = o.MasterCount
	}
	if !IsNil(o.NodeCount) {
		toSerialize["node_count"] = o.NodeCount
	}
	if !IsNil(o.NodeFlavor) {
		toSerialize["node_flavor"] = o.NodeFlavor
	}
	if !IsNil(o.EnablePublicIp) {
		toSerialize["enable_public_ip"] = o.EnablePublicIp
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	return toSerialize, nil
}

type NullableAdminClusterResource struct {
	value *AdminClusterResource
	isSet bool
}

func (v NullableAdminClusterResource) Get() *AdminClusterResource {
	return v.value
}

func (v *NullableAdminClusterResource) Set(val *AdminClusterResource) {
	v.value = val
	v.isSet = true
}

func (v NullableAdminClusterResource) IsSet() bool {
	return v.isSet
}

func (v *NullableAdminClusterResource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdminClusterResource(val *AdminClusterResource) *NullableAdminClusterResource {
	return &NullableAdminClusterResource{value: val, isSet: true}
}

func (v NullableAdminClusterResource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdminClusterResource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


