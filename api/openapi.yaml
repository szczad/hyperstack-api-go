openapi: 3.0.1
info:
  title: Infrahub-API
  version: "1.0"
servers:
- url: https://infrahub-api.nexgencloud.com/v1
tags:
- description: Authentication APIs using authentik
  name: auth
- description: Organizations API
  name: organization
- description: API Key
  name: api key
- description: Invite APIs
  name: invite
- description: Permission APIs
  name: permission
- description: User Permission APIs
  name: user permission
- description: Callback Test
  name: internal
- description: Policy APIs
  name: policy
- description: RBAC Role APIs
  name: rbac role
- description: Assigning Member Role APIs
  name: assigning member role
- name: admin
- description: User Admin APIs
  name: User
- description: Dashboard APIs
  name: dashboard
- description: Stock APIs
  name: stock
- description: Environment APIs
  name: environment
- description: Virtual Machine Event APIs
  name: virtual machine events
- description: Virtual Machine APIs
  name: virtual machine
- description: Flavor APIs
  name: flavor
- description: Image APIs
  name: image
- description: Keypair APIs
  name: keypair
- description: VNC Console Link APIs
  name: vnc url
- description: Volume APIs
  name: volume
- description: Volume Attachment APIs
  name: volume attachment
- description: GPU APIs
  name: gpu
- description: Callback APIs
  name: callbacks
- description: Floating IP APIs
  name: floating ip
- description: Region APIs
  name: region
- description: Templates APIs
  name: template
- description: Deployment APIs
  name: deployment
- description: Security Rule APIs
  name: security-rules
- description: Profile APIs
  name: profile
- description: Compliance APIs
  name: compliance
- description: Firewalls APIs
  name: firewalls
- description: Firewall Attachments APIs
  name: firewall-attachment
- description: User Detail Choice APIs
  name: user detail choice
- description: Admin Images Organization APIs
  name: Admin Images
- description: Admin Flavors APIs
  name: Admin Flavors
- description: Admin VM APIs
  name: Admin Virtual Machines
- description: Admin Environments APIs
  name: Admin Environments
- description: Pricebook APIs
  name: Pricebook
- description: Discount APIs
  name: Discount
- description: Calculate APIs
  name: Calculate
- description: Admin APIs
  name: Admin
- description: Admin Contract APIs
  name: Admin Contract
- description: Customer Contract APIs
  name: Customer Contract
- description: Contract Event APIs
  name: Contract Event
- name: alive
- name: billing
- name: credit
- name: payment
- name: user
paths:
  /api-key:
    get:
      operationId: Get API Key
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetApiKeyResponseModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Get API Key
      tags:
      - api key
  /api-key/generate:
    post:
      operationId: Generate API Key
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateApiKeyResponseModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      summary: Generate API Key
      tags:
      - api key
  /api-key/verify: {}
  /auth/admin/credit-warning-mail/{org_id}: {}
  /auth/admin/data-usages-warning-mail/{org_id}: {}
  /auth/admin/hibernation-restoration-mail: {}
  /auth/admin/organizations: {}
  /auth/admin/organizations/summary: {}
  /auth/admin/organizations/{id}: {}
  /auth/admin/payment-confirmation-mail/{org_id}: {}
  /auth/admin/termination-warning-mail/{org_id}: {}
  /auth/admin/users: {}
  /auth/admin/users/{id}: {}
  /auth/admin/users/{user_id}/update: {}
  /auth/admin/version: {}
  /auth/admin/vm-status-mail: {}
  /auth/invites:
    get:
      operationId: List Invites
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetInvitesResponseModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: List Invites
      tags:
      - invite
    post:
      operationId: Invite an user to organization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InviteUserPayload'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InviteUserResponseModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Conflict
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Invite an user to organization
      tags:
      - invite
      x-codegen-request-body-name: payload
  /auth/invites/{id}:
    delete:
      operationId: Delete Invite
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponseModel'
          description: Invite deleted successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Delete Invite
      tags:
      - invite
  /auth/logout: {}
  /auth/me:
    get:
      operationId: Auth user information
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthUserInfoResponseModel'
          description: User Information
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Get me information
      tags:
      - auth
  /auth/organizations:
    get:
      operationId: Get organization info
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrganizationResponseModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Organization Info
      tags:
      - organization
  /auth/organizations/remove-member:
    post:
      operationId: Remove a member from organization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveMemberPayload'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveMemberFromOrganizationResponseModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Remove a member from organization
      tags:
      - organization
      x-codegen-request-body-name: payload
  /auth/organizations/update:
    put:
      operationId: Update organization info
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrganizationPayload'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateOrganizationResponseModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Update organization info
      tags:
      - organization
      x-codegen-request-body-name: payload
  /auth/permissions:
    get:
      operationId: List Permissions
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPermissionsResponseModel'
          description: Getting permissions success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: List Permissions
      tags:
      - permission
  /auth/permissions/{id}: {}
  /auth/policies:
    get:
      operationId: List Policies
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPoliciesResponseModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: List Policies
      tags:
      - policy
  /auth/policies/{id}: {}
  /auth/refresh: {}
  /auth/request-login: {}
  /auth/roles:
    get:
      operationId: List RBAC Roles
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRbacRolesResponseModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: List RBAC Roles
      tags:
      - rbac role
    post:
      operationId: Create RBAC Role
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUpdateRbacRolePayload'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RbacRoleDetailResponseModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Conflict
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Create RBAC Role
      tags:
      - rbac role
      x-codegen-request-body-name: payload
  /auth/roles/{id}:
    delete:
      operationId: Delete a RBAC Role
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponseModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Delete a RBAC Role
      tags:
      - rbac role
    get:
      operationId: Get a RBAC Role Detail
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RbacRoleDetailResponseModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Get a RBAC Role Detail
      tags:
      - rbac role
    put:
      operationId: Update a RBAC Role
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUpdateRbacRolePayload'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RbacRoleDetailResponseModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Update a RBAC Role
      tags:
      - rbac role
      x-codegen-request-body-name: payload
  /auth/send/welcome-email/{user_id}: {}
  /auth/sendgrid-webhook: {}
  /auth/token: {}
  /auth/users/me/permissions:
    get:
      operationId: List Current User Permissions
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserPermissionsResponseModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: List Current User Permissions
      tags:
      - user permission
  /auth/users/{id}/permissions:
    get:
      operationId: List User Permissions
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserPermissionsResponseModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Method Not Allowed
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: List User Permissions
      tags:
      - user permission
  /auth/users/{user_id}/assign-roles:
    put:
      operationId: Assign RBAC Roles
      parameters:
      - explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignRbacRolePayload'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RbacRoleDetailResponseModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Assign RBAC Roles
      tags:
      - assigning member role
      x-codegen-request-body-name: payload
  /auth/users/{user_id}/roles:
    delete:
      operationId: Remove role from a user
      parameters:
      - explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonResponseModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Remove role from a user
      tags:
      - assigning member role
  /internal/users/{id}/permissions: {}
  /core/admin/environments/bootstrap-enviroments: {}
  /core/admin/flavors: {}
  /core/admin/flavors/{flavor_id}: {}
  /core/admin/flavors/{flavor_id}/vms: {}
  /core/admin/images: {}
  /core/admin/images/{image_id}: {}
  /core/admin/keypairs: {}
  /core/admin/organizations/{id}/hibernate: {}
  /core/admin/resources: {}
  /core/admin/resources/count: {}
  /core/admin/resources/defaults: {}
  /core/admin/resources/sync: {}
  /core/admin/resources/{id}: {}
  /core/admin/version: {}
  /core/admin/virtual-machines: {}
  /core/admin/virtual-machines/delete-expired-contracted-vms: {}
  /core/admin/virtual-machines/summary: {}
  /core/admin/virtual-machines/{id}: {}
  /core/admin/virtual-machines/{id}/lock: {}
  /core/admin/virtual-machines/{id}/stop: {}
  /core/admin/virtual-machines/{virtual_machine_id}/events: {}
  /core/admin/virtual-machines/{virtual_machine_id}/hibernate: {}
  /core/admin/virtual-machines/{virtual_machine_id}/hibernate-restore: {}
  /core/compliance:
    get:
      description: "Returns a list of compliance objects each corresponding to available\
        \ GPU models. These compliance objects contain minimum and maximum values\
        \ for RAM in GB, number of vCPUs, and system disk capacity in GB. Use the\
        \ optional `gpu` model parameter in the query string to filter responses by\
        \ GPU model. For additional details on GPU compliance, [**click here**](https://infrahub-doc.nexgencloud.com/docs/hardware/flavors#adhering-to-gpu-compliance)."
      operationId: Retrieve compliance
      parameters:
      - description: This is for gpu model
        explode: true
        in: query
        name: gpu
        required: false
        schema: {}
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComplianceResponse'
          description: Compliance list retrieved successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Acceptable
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Retrieve GPU compliance
      tags:
      - compliance
    post:
      operationId: Create Compliance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompliancePayload'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUpdateComplianceResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Method Not Allowed
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Conflict
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Create compliance
      tags:
      - compliance
      x-codegen-request-body-name: payload
    put:
      operationId: Update a compliance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompliancePayload'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUpdateComplianceResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Method Not Allowed
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Update a compliance
      tags:
      - compliance
      x-codegen-request-body-name: payload
  /core/compliance/{gpu_model}:
    delete:
      operationId: Delete a compliance
      parameters:
      - explode: false
        in: path
        name: gpu_model
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Delete a compliance
      tags:
      - compliance
  /core/dashboard:
    get:
      description: "Returns hardware and pricing overview for your active resources,\
        \ including virtual machines, containers, and volumes. For additional information\
        \ on the Dashboard feature, [**click here**](https://infrahub-doc.nexgencloud.com/docs/features/dashboard)."
      operationId: Retrieve Dashboard
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardInfoResponse'
          description: Getting dashboard info success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Retrieve Dashboard
      tags:
      - dashboard
  /core/environments:
    get:
      description: "Returns a list of your existing environments, providing the following\
        \ details for each; environment ID, name, [**region**](https://infrahub-doc.nexgencloud.com/docs/features/regions),\
        \ and the date and time of creation. For more information on environments,\
        \ [**click here**](https://infrahub-doc.nexgencloud.com/docs/features/environments-available-features)."
      operationId: List environments
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Environments'
          description: Successful retrieval of environments list.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: List environments
      tags:
      - environment
    post:
      description: "Creates an environment—a container to organize your resources,\
        \ including SSH key pairs, virtual machines, and volumes. To create your environment,\
        \ provide your desired environment name, and [**region**](https://infrahub-doc.nexgencloud.com/docs/features/regions)\
        \ in the request body."
      operationId: Create environment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEnvironment'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Environment'
          description: Environment has been created successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Conflict
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Create environment
      tags:
      - environment
      x-codegen-request-body-name: payload
  /core/environments/{id}:
    delete:
      description: Deletes an environment permanently. Provide the environment ID
        in the path to remove the specified environment.
      operationId: Delete environment
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseModel'
          description: The environment has been successfully deleted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Delete environment
      tags:
      - environment
    get:
      description: Retrieves details about a specific environment. Provide the environment
        ID in the path and the new environment `name` in the request body to modify
        the specified environment.
      operationId: Retrieve environment
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Environment'
          description: Environment details retrieved successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Retrieve environment
      tags:
      - environment
    put:
      description: Updates the name of an existing environment. Provide the environment
        ID in the path and the new environment `name` in the request body to modify
        the specified environment.
      operationId: Update environment
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEnvironment'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Environment'
          description: Environment name successfully updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Update environment
      tags:
      - environment
      x-codegen-request-body-name: payload
  /core/firewalls:
    get:
      operationId: Retrieve Firewalls
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirewallsListResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Forbidden
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Retrieve Firewalls
      tags:
      - firewalls
    post:
      operationId: Create Firewall
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFirewallPayload'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirewallResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Conflict
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Create Firewall
      tags:
      - firewalls
      x-codegen-request-body-name: payload
  /core/firewalls/{firewall_id}/firewall-rules:
    post:
      operationId: Add Rules to Firewall
      parameters:
      - explode: false
        in: path
        name: firewall_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFirewallRulePayload'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirewallRule'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Forbidden
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Add Rules to Firewall
      tags:
      - firewalls
      x-codegen-request-body-name: payload
  /core/firewalls/{firewall_id}/firewall-rules/{firewall_rule_id}:
    delete:
      operationId: Delete Firewall Rules from Firewall
      parameters:
      - explode: false
        in: path
        name: firewall_id
        required: true
        schema:
          type: integer
        style: simple
      - explode: false
        in: path
        name: firewall_rule_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Exists
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Conflict
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Delete Firewall Rules from Firewall
      tags:
      - firewalls
  /core/firewalls/{firewall_id}/update-attachments:
    post:
      operationId: Attach Firewall to VMs
      parameters:
      - explode: false
        in: path
        name: firewall_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttachFirewallWithVM'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Conflict
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Attach Firewalls to VMs
      tags:
      - firewall-attachment
      x-codegen-request-body-name: payload
  /core/firewalls/{id}:
    delete:
      operationId: Delete Firewall
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Conflict
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Delete Firewall
      tags:
      - firewalls
    get:
      operationId: Details of Firewall by ID
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirewallDetailResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Details of Firewall by ID
      tags:
      - firewalls
  /core/flavors:
    get:
      description: "Returns a list of available virtual machine specification configurations,\
        \ referred to as **flavors**. Include a `region_name` in the query string\
        \ of the request to return only the flavors available in the specified region;\
        \ the default value will retrieve flavors available in all regions. For more\
        \ details on flavors, [**click here**](https://infrahub-doc.nexgencloud.com/docs/hardware/flavors)."
      operationId: List flavors
      parameters:
      - description: Region Name
        explode: true
        in: query
        name: region
        required: false
        schema: {}
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlavorListResponse'
          description: Successful retrieval of flavors list.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: List flavors
      tags:
      - flavor
  /core/gpus:
    get:
      description: Returns a list of all available GPUs that can be utilized in the
        creation of custom virtual machine configurations.
      operationId: List GPUs
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GPUList'
          description: Retrieval of GPUs list successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: List GPUs
      tags:
      - gpu
  /core/gpus/{id}: {}
  /core/image-logos: {}
  /core/images:
    get:
      description: "Returns a list of all available operating system (OS) images,\
        \ providing details about each image's corresponding virtual machine operating\
        \ system. Include the optional `region` parameter in the query string of the\
        \ request to specifically return OS images from the designated region. For\
        \ more information on OS images, [**click here**](https://infrahub-doc.nexgencloud.com/docs/virtual-machines/images)."
      operationId: List images
      parameters:
      - description: Region Name
        explode: true
        in: query
        name: region
        required: false
        schema: {}
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Images'
          description: Retrieval of images list successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Acceptable
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: List images
      tags:
      - image
  /core/internal/callbacks/test: {}
  /core/internal/virtual-machines: {}
  /core/internal/volumes: {}
  /core/keypair/{id}:
    delete:
      description: Permanently deletes a specified key pair. Include the key pair
        ID in the request path to remove the designated key pair.
      operationId: Delete key pair
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseModel'
          description: Keypair successfully deleted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Delete key pair
      tags:
      - keypair
    put:
      description: Updates the name of a specified key pair. Include the key pair
        ID in the request path and the new `name` of the key pair in the request body.
      operationId: Update key pair name
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateKeypairName'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateKeypairnameresponse'
          description: Keypair name updated successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Update key pair name
      tags:
      - keypair
      x-codegen-request-body-name: payload
  /core/keypairs:
    get:
      description: "Retrieves a list of your existing SSH key pairs, providing details\
        \ for each. For additional information on SSH key pairs, [**click here**](https://infrahub-doc.nexgencloud.com/docs/features/keypairs-available-features)."
      operationId: List key pairs
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Keypairs'
          description: Retrieval of key pairs list successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: List key pairs
      tags:
      - keypair
    post:
      description: "Imports a new key pair for secure shell (SSH) access to your resources.\
        \ To import a new key pair, include the key name, environment name, and public\
        \ key in the request body. For additional information on importing SSH key\
        \ pairs, [**click here**](https://infrahub-doc.nexgencloud.com/docs/getting-started/create-keypair#importing-an-ssh-key)."
      operationId: Import key pair
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportKeypairPayload'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportKeypairResponse'
          description: Keypair is imported successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Conflict
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Import key pair
      tags:
      - keypair
      x-codegen-request-body-name: payload
  /core/marketplace/deployments:
    get:
      operationId: List Deployments
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deployments'
          description: Getting deployments success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: List Deployments
      tags:
      - deployment
    post:
      operationId: Start Deployment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartDeploymentPayload'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartDeployment'
          description: Deployment created successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Conflict
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Start Deployment
      tags:
      - deployment
      x-codegen-request-body-name: payload
  /core/marketplace/deployments/{id}:
    delete:
      operationId: Delete Deployment
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Delete Deployment
      tags:
      - deployment
    get:
      operationId: Details of Deployment by ID
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartDeployment'
          description: Getting deployment detail success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Details of Deployment by ID
      tags:
      - deployment
  /core/marketplace/templates:
    get:
      description: "Returns a comprehensive list of templates, providing resource\
        \ configuration details for each. Optionally, specify the `visibility` as\
        \ `public` or `private` to retrieve templates with the desired visibility\
        \ status. To learn more about the templates feature, [**click here**](https://infrahub-doc.nexgencloud.com/docs/features/templates#view-a-list-of-templates)."
      operationId: List templates
      parameters:
      - description: Specify the `visibility` status as either `public` or `private`
          to filter and retrieve templates with the desired visibility.
        explode: true
        in: query
        name: visibility
        required: false
        schema: {}
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Templates'
          description: Templates list successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Acceptable
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: List templates
      tags:
      - template
    post:
      description: Creates a resource template for deployment.
      operationId: Create template
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Create_template_request'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
          description: Template added successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Create template
      tags:
      - template
  /core/marketplace/templates/{id}:
    delete:
      description: Permanently deletes a template. Supply the template ID in the path
        to delete the specified template.
      operationId: Delete template
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseModel'
          description: Template deleted successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Delete template
      tags:
      - template
    get:
      description: "Retrieves the resource configuration details for a specified template.\
        \ Provide the template ID in the path to retrieve details for the specified\
        \ template. For additional information on template configuration details,\
        \ [**click here**](https://infrahub-doc.nexgencloud.com/docs/features/templates#retrieve-the-details-for-a-template)."
      operationId: Retrieve template details
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
          description: Template details retrieved successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Retrieve template details
      tags:
      - template
    put:
      description: "Updates the details of a template. Modify the template name, description\
        \ and/or `is_public` status to change the public/private visibility of the\
        \ template."
      operationId: Update template
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTemplate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
          description: Template updated successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Update template
      tags:
      - template
      x-codegen-request-body-name: payload
  /core/profiles:
    get:
      description: "Returns a list of your existing provisioning profiles, providing\
        \ virtual machine configuration details for each. For additional information\
        \ about profiles, [**click here**](https://infrahub-doc.nexgencloud.com/docs/virtual-machines/provisioning-profiles#retrieve-a-list-of-profiles)."
      operationId: List profiles
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileListResponse'
          description: Getting profiles success.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: List profiles
      tags:
      - profile
    post:
      description: "Creates a provisioning profile to save the configuration of a\
        \ virtual machine for future use. Include the profile name, description, and\
        \ virtual machine configuration details in the request body. For more information\
        \ about virtual machine profiles, [**click here**](https://infrahub-doc.nexgencloud.com/docs/virtual-machines/provisioning-profiles)."
      operationId: Create profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProfilePayload'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateProfileResponse'
          description: Profile created successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Conflict
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Create profile
      tags:
      - profile
      x-codegen-request-body-name: payload
  /core/profiles/{id}:
    delete:
      description: Permanently deletes a provisioning profile. Supply the profile
        ID in the path to delete the specified profile.
      operationId: Delete profile
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseModel'
          description: Profile deleted successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Delete profile
      tags:
      - profile
    get:
      description: "Retrieves details for an existing provisioning profile by supplying\
        \ the profile ID in the request path. For more information about profiles,\
        \ [**click here**](https://infrahub-doc.nexgencloud.com/docs/virtual-machines/provisioning-profiles)."
      operationId: Retrieve profile details
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateProfileResponse'
          description: Profile details retrieved successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Retrieve profile details
      tags:
      - profile
  /core/regions:
    get:
      description: "Lists the currently available regions, each representing a distinct\
        \ geographic location housing a data center. For additional information on\
        \ regions, [**click here**](https://infrahub-doc.nexgencloud.com/docs/features/regions)."
      operationId: List regions
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Regions'
          description: Successful retrieval of regions list.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: List regions
      tags:
      - region
  /core/regions/{id}: {}
  /core/sg-rules-protocols:
    get:
      description: Returns a list of all available protocols that can be used in the
        creation of firewall rules for your virtual machines.
      operationId: List firewall rule protocols
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityRulesProtocolFields'
          description: Protocols list successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: List firewall rule protocols
      tags:
      - security-rules
  /core/stocks:
    get:
      description: "Returns information on current and upcoming GPU availability,\
        \ organized by region and GPU model. For additional information on GPU stocks,\
        \ [**click here**](https://infrahub-doc.nexgencloud.com/docs/hardware/gpu-stock-information)."
      operationId: Retrieve GPU stocks
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewStockRetriveResponse'
          description: GPU stocks retrieved successfully.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content: {}
          description: Stocks Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      tags:
      - stock
  /core/stocks/details: {}
  /core/stocks/upcoming: {}
  /core/stocks/upcoming/{id}: {}
  /core/stocks/upcoming/{node_id}/stock: {}
  /core/stocks/upcoming/{node_id}/stock/{stock_id}: {}
  /core/stocks/visibility: {}
  /core/stocks/visibility/add-users: {}
  /core/stocks/visibility/remove-users: {}
  /core/user/resources/defaults:
    get:
      operationId: Retrieve default flavors and images for user
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDefaultChoicesForUserResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Method Not Allowed
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Retrieve default flavors and images for user
      tags:
      - user detail choice
  /core/virtual-machines:
    get:
      description: "Returns a list of your existing virtual machines, providing configuration\
        \ details for each. The list is sorted by creation date, with the oldest virtual\
        \ machines displayed first."
      operationId: List virtual machines
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Instances'
          description: Successful retrieval of virtual machine list.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: List all virtual machines
      tags:
      - virtual machine
    post:
      description: "Creates one or more virtual machines with the specified custom\
        \ configuration and features provided in the request body. For more information\
        \ about the virtual machine features offered by Infrahub, [**click here**](https://infrahub-doc.nexgencloud.com/docs/virtual-machines/virtual-machine-features#create-a-virtual-machine-with-custom-features)."
      operationId: Create virtual machine
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateInstancesPayload'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Instances'
          description: Virtual machine(s) created successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Method Not Allowed
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Conflict
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Create virtual machine
      tags:
      - virtual machine
      x-codegen-request-body-name: payload
  /core/virtual-machines/contract/{contract_id}/virtual-machines:
    get:
      operationId: Retrieve virtual machines associated with a contract
      parameters:
      - explode: false
        in: path
        name: contract_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractInstancesResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Retrieve virtual machines associated with a contract
      tags:
      - virtual machine
  /core/virtual-machines/{id}:
    delete:
      description: Permanently deletes a virtual machine. Supply the virtual machine
        ID in the path to delete the specified virtual machine.
      operationId: Delete virtual machine
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseModel'
          description: Virtual machine deleted successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Conflict
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Delete virtual machine
      tags:
      - virtual machine
    get:
      description: "Retrieves the details of an existing virtual machine. Supply the\
        \ virtual machine ID in the path, and Infrahub will return the corresponding\
        \ Virtual Machine object."
      operationId: Retrieve virtual machine details
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Instance'
          description: Virtual machine details retrieved successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Retrieve virtual machine details
      tags:
      - virtual machine
  /core/virtual-machines/{id}/attach-callback:
    post:
      description: "Creates a callback URL for a specified virtual machine, enabling\
        \ the posting of action events executed on the virtual machine to the specified\
        \ URL. Provide the callback URL in the request body and the ID of the virtual\
        \ machine to which it is being attached in the path. For more details on virtual\
        \ machine callback URLs, [**click here**](https://infrahub-doc.nexgencloud.com/docs/features/webhooks-callbacks#attach-a-callback-url-to-an-existing-virtual-machine)."
      operationId: Attach callback to virtual machine
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttachCallbackPayload'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachCallbackResponse'
          description: Callback URL successfully attached to your virtual machine.
            Any action events on your virtual machine will be posted to the provided
            URL
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Attach callback to virtual machine
      tags:
      - callbacks
      x-codegen-request-body-name: payload
  /core/virtual-machines/{id}/attach-floatingip:
    post:
      description: "Initiates the creation of a public IP address and attaches it\
        \ to an existing virtual machine, making it accessible through the internet.\
        \ Include the virtual machine ID in the path to attach a public IP to the\
        \ specified VM. For more information on public IP addresses, [**click here**](https://infrahub-doc.nexgencloud.com/docs/virtual-machines/public-ip)."
      operationId: Attach public IP to virtual machine
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseModel'
          description: Public IP successfully attached to VM.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Insufficient balance to create the resource
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Attach public IP to virtual machine
      tags:
      - floating ip
  /core/virtual-machines/{id}/delete-callback:
    delete:
      description: "Permanently deletes the callback URL associated with a specified\
        \ virtual machine by providing the virtual machine ID in the request path.\
        \ For additional information on virtual machine callback URLs, [**click here**](https://infrahub-doc.nexgencloud.com/docs/features/webhooks-callbacks)."
      operationId: Delete virtual machine callback
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseModel'
          description: Virtual machine callback URL successfully deleted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Delete virtual machine callback
      tags:
      - callbacks
  /core/virtual-machines/{id}/detach-floatingip:
    post:
      description: "Removes a public IP address from an existing virtual machine,\
        \ disabling internet accessibility to the VM. Include the virtual machine\
        \ ID in the path to detach the public IP from the specified VM. For more information\
        \ on public IP addresses, [**click here**](https://infrahub-doc.nexgencloud.com/docs/virtual-machines/public-ip)."
      operationId: Detach public IP from virtual machine
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Detach public IP from virtual machine
      tags:
      - floating ip
  /core/virtual-machines/{id}/hard-reboot:
    get:
      description: "Initiates a hard reboot for a virtual machine, simulating the\
        \ process of unplugging and rebooting a physical machine. Provide the virtual\
        \ machine ID in the path to execute a hard reboot for the specified virtual\
        \ machine."
      operationId: Hard reboot virtual machine
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseModel'
          description: Hard reboot process has been successfully initiated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Hard reboot virtual machine
      tags:
      - virtual machine
  /core/virtual-machines/{id}/request-console:
    get:
      operationId: Request Console
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestConsole'
          description: Please wait a few seconds and visit the below link to access
            your VNC console URL
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Request Instance Console
      tags:
      - vnc url
  /core/virtual-machines/{id}/sg-rules:
    post:
      description: "Creates a firewall rule and associates it with a virtual machine.\
        \ Include the virtual machine ID in the path, and provide the firewall rule\
        \ configuration in the request body, as detailed below. For additional information\
        \ on firewall rules, [**click here**](https://infrahub-doc.nexgencloud.com/docs/virtual-machines/security-rules)."
      operationId: Add firewall rule to virtual machine
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSecurityRulePayload'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityGroupRule'
          description: The firewall rule has been successfully added to the virtual
            machine.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Conflict
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Add firewall rule to virtual machine
      tags:
      - virtual machine
      x-codegen-request-body-name: payload
  /core/virtual-machines/{id}/start:
    get:
      description: Initiates the startup of a virtual machine. Supply the virtual
        machine ID in the path to initiate the starting of the specified virtual machine.
      operationId: Start virtual machine
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseModel'
          description: Virtual machine started successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Start virtual machine
      tags:
      - virtual machine
  /core/virtual-machines/{id}/stop:
    get:
      description: Shuts down a virtual machine. Provide the virtual machine ID in
        the path to initiate the shutdown process for the specified virtual machine.
      operationId: Stop virtual machine
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseModel'
          description: Virtual machine shut down successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Stop virtual machine
      tags:
      - virtual machine
  /core/virtual-machines/{id}/update-callback:
    put:
      description: "Updates the callback URL for a specified virtual machine. Provide\
        \ the new callback URL in the request body, along with the ID of the associated\
        \ virtual machine in the path. For additional information on virtual machine\
        \ callback URLs, [**click here**](https://infrahub-doc.nexgencloud.com/docs/features/webhooks-callbacks)."
      operationId: Update virtual machine callback
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttachCallbackPayload'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachCallbackResponse'
          description: Virtual machine callback URL successfully updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Update virtual machine callback
      tags:
      - callbacks
      x-codegen-request-body-name: payload
  /core/virtual-machines/{virtual_machine_id}/attach-volumes:
    post:
      description: "Attaches one or more volumes to an existing virtual machine, expanding\
        \ its storage capacity by 2PB per attached volume. Include the virtual machine\
        \ ID in the path and the volume IDs in the request body to attach the specified\
        \ volumes to the designated virtual machine. For additional details on volume\
        \ attachment, [**click here**](https://infrahub-doc.nexgencloud.com/docs/features/volumes-available-features#attach-a-volume-to-a-virtual-machine-1)."
      operationId: Attach volumes to virtual machine
      parameters:
      - explode: false
        in: path
        name: virtual_machine_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttachVolumesPayload'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachVolumes'
          description: Volumes have been successfully attached to the virtual machine.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Method Not Allowed
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Attach volumes to virtual machine
      tags:
      - volume attachment
      x-codegen-request-body-name: payload
  /core/virtual-machines/{virtual_machine_id}/console/{job_id}:
    get:
      operationId: Get VNC Console Link
      parameters:
      - explode: false
        in: path
        name: virtual_machine_id
        required: true
        schema:
          type: integer
        style: simple
      - explode: false
        in: path
        name: job_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VNCURL'
          description: Get VNC Console Link Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Get VNC Console Link
      tags:
      - vnc url
  /core/virtual-machines/{virtual_machine_id}/detach-volumes:
    post:
      description: Detaches one or more volumes currently attached to an existing
        virtual machine. Include the virtual machine ID in the path and the volume
        IDs in the request body to detach the specified volumes from the designated
        virtual machine.
      operationId: Detach volumes from virtual machine
      parameters:
      - explode: false
        in: path
        name: virtual_machine_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DetachVolumesPayload'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetachVolumes'
          description: Volumes have been successfully detached from the virtual machine.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Method Not Allowed
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Detach volumes from virtual machine
      tags:
      - volume attachment
      x-codegen-request-body-name: payload
  /core/virtual-machines/{virtual_machine_id}/events:
    get:
      description: "Retrieves a list of all events in a virtual machine's history,\
        \ which records actions performed on the specified virtual machine. Include\
        \ the virtual machine ID in the path to retrieve the history of events. For\
        \ more details on virtual machine events history, [**click here**](https://infrahub-doc.nexgencloud.com/docs/virtual-machines/vm-performance-metrics-and-events-history#events-history)."
      operationId: List virtual machine events
      parameters:
      - explode: false
        in: path
        name: virtual_machine_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstanceEvents'
          description: Virtual machines event list successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: List virtual machine events
      tags:
      - virtual machine events
  /core/virtual-machines/{virtual_machine_id}/hibernate:
    get:
      description: "Initiates the hibernation of a virtual machine, saving its current\
        \ state to disk before powering off. Provide the virtual machine ID in the\
        \ path to specify the virtual machine to be hibernated."
      operationId: Hibernate virtual machine
      parameters:
      - explode: false
        in: path
        name: virtual_machine_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseModel'
          description: Hibernation request for the virtual machine was successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Hibernate virtual machine
      tags:
      - virtual machine
  /core/virtual-machines/{virtual_machine_id}/hibernate-restore:
    get:
      description: "Resumes a virtual machine from hibernation, bringing it back to\
        \ an active state. Provide the virtual machine ID in the path to specify the\
        \ virtual machine to be restored from hibernation."
      operationId: Restore virtual machine from hibernation
      parameters:
      - explode: false
        in: path
        name: virtual_machine_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseModel'
          description: The request to restore the virtual machine from hibernation
            was successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Restore virtual machine from hibernation
      tags:
      - virtual machine
  /core/virtual-machines/{virtual_machine_id}/label:
    put:
      operationId: Edit labels of an existing VM
      parameters:
      - explode: false
        in: path
        name: virtual_machine_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditlabelofanexistingVMPayload'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseModel'
          description: Labels edited successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Conflict
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Edit labels of an existing VM
      tags:
      - virtual machine
      x-codegen-request-body-name: payload
  /core/virtual-machines/{virtual_machine_id}/metrics:
    get:
      description: "Retrieves performance metrics data for a virtual machine. Provide\
        \ the virtual machine ID in the path to retrieve the following data for the\
        \ specified virtual machine: CPU usage, memory usage (RAM), `network.in`,\
        \ `network.out`, `disk.read`, and `disk.write`. The optional `duration` parameter\
        \ can be used to specify the period for retrieving performance metrics; the\
        \ default value will retrieve all available data. To learn more about virtual\
        \ machine performance metrics, [**click here**](https://infrahub-doc.nexgencloud.com/docs/virtual-machines/vm-performance-metrics-and-events-history#performance-metrics)."
      operationId: Retrieve virtual machine performance metrics
      parameters:
      - explode: false
        in: path
        name: virtual_machine_id
        required: true
        schema:
          type: integer
        style: simple
      - explode: true
        in: query
        name: duration
        required: false
        schema:
          enum:
          - 1h
          - 2h
          - 4h
          - 6h
          - 12h
          - 1d
          - 3d
          - 7d
          - 15d
          - 30d
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsFields'
          description: Virtual machine performance metrics have been successfully
            retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Acceptable
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Retrieve virtual machine performance metrics
      tags:
      - virtual machine
  /core/virtual-machines/{virtual_machine_id}/resize:
    post:
      description: "Updates the configuration specifications for an existing virtual\
        \ machine. Include the virtual machine ID in the path and provide the new\
        \ configuration, referred to as a `flavor`, in the body of the request. For\
        \ additional information resizing, [**click here**](https://infrahub-doc.nexgencloud.com/docs/hardware/flavors#modify-the-flavor-of-an-existing-virtual-machine)."
      operationId: Resize virtual machine
      parameters:
      - explode: false
        in: path
        name: virtual_machine_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstanceResizePayload'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseModel'
          description: The resizing of the virtual machine configuration was successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Method Not Allowed
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Resize virtual machine
      tags:
      - virtual machine
      x-codegen-request-body-name: payload
  /core/virtual-machines/{virtual_machine_id}/sg-rules/{sg_rule_id}:
    delete:
      description: Deletes a firewall rule associated with a virtual machine. Provide
        the virtual machine ID and the firewall rule ID in the path to remove the
        specified rule from the specified virtual machine.
      operationId: Delete firewall rule from virtual machine
      parameters:
      - explode: false
        in: path
        name: virtual_machine_id
        required: true
        schema:
          type: integer
        style: simple
      - explode: false
        in: path
        name: sg_rule_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseModel'
          description: The firewall rule has been successfully removed from the virtual
            machine.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Delete firewall rule from virtual machine
      tags:
      - virtual machine
  /core/virtual-machines/{vm_id}/attach-firewalls:
    post:
      description: Attach Firewalls to a VM
      operationId: Attach Firewalls to a VM
      parameters:
      - explode: false
        in: path
        name: vm_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttachFirewallsToVMPayload'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Attach Firewalls to a VM
      tags:
      - virtual machine
      x-codegen-request-body-name: payload
  /core/volume-types:
    get:
      description: Retrieves a list of available volume types that can be used in
        the creation of a new volume.
      operationId: List volume types
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeTypes'
          description: Successful retrieval of volume types list
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: List volume types
      tags:
      - volume
  /core/volumes:
    get:
      description: "Returns a list of your existing volumes, providing details for\
        \ each. For more information on volumes, [**click here**](https://infrahub-doc.nexgencloud.com/docs/features/volumes-available-features)."
      operationId: List volumes
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volumes'
          description: Successful retrieval of volumes list.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: List volumes
      tags:
      - volume
    post:
      description: "Creates a volume that can be attached to a virtual machine, expanding\
        \ its storage capacity. Specify the volume type and custom configuration in\
        \ the request body. For additional details on volumes, [**click here**](https://infrahub-doc.nexgencloud.com/docs/features/volumes-available-features)."
      operationId: Create volume
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateVolumePayload'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volume'
          description: Volume successfully created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Method Not Allowed
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Conflict
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Create volume
      tags:
      - volume
      x-codegen-request-body-name: payload
  /core/volumes/{id}:
    delete:
      description: Deletes a volume permanently. Provide the volume ID in the path
        to specify the volume to be deleted.
      operationId: Delete volume
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseModel'
          description: Volume successfully deleted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Delete volume
      tags:
      - volume
  /core/volumes/{id}/attach-callback:
    post:
      description: "Creates a callback URL for a specified volume, enabling the posting\
        \ of action events executed on the volume to the specified URL. Provide the\
        \ callback URL in the request body and the ID of the volume to which it is\
        \ being attached in the path. For more details on volume callback URLs, [**click\
        \ here**](https://infrahub-doc.nexgencloud.com/docs/features/webhooks-callbacks)."
      operationId: Attach callback to volume
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttachCallbackPayload'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachCallbackResponse'
          description: Callback URL successfully attached to your volume. Any action
            events on your volume will be posted to the provided URL
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Attach callback to volume
      tags:
      - callbacks
      x-codegen-request-body-name: payload
  /core/volumes/{id}/delete-callback:
    delete:
      description: "Permanently deletes the callback URL associated with a specified\
        \ volume by providing the volume ID in the request path. For additional information\
        \ on volume callback URLs, [**click here**](https://infrahub-doc.nexgencloud.com/docs/features/webhooks-callbacks)."
      operationId: Delete volume callback
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseModel'
          description: Volume callback URL successfully deleted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Delete volume callback
      tags:
      - callbacks
  /core/volumes/{id}/update-callback:
    put:
      description: "Updates the callback URL for a specified volume. Provide the new\
        \ callback URL in the request body, along with the ID of the associated volume\
        \ in the path. For additional information on volume callback URLs, [**click\
        \ here**](https://infrahub-doc.nexgencloud.com/docs/features/webhooks-callbacks)."
      operationId: Update volume callback
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttachCallbackPayload'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachCallbackResponse'
          description: Callback URL successfully updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Update volume callback
      tags:
      - callbacks
      x-codegen-request-body-name: payload
  /pricebook:
    get:
      operationId: Retrive Pricebook
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PricebookModel'
                type: array
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Method Not Allowed
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      tags:
      - Pricebook
  /pricebook/admin/contracts: {}
  /pricebook/admin/contracts/check-expire-delete-vms: {}
  /pricebook/admin/contracts/{contract_id}: {}
  /pricebook/admin/contracts/{contract_id}/events: {}
  /pricebook/admin/version: {}
  /pricebook/calculate: {}
  /pricebook/calculate/{id}: {}
  /pricebook/contracts:
    get:
      operationId: List Contracts for Customer
      parameters:
      - explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: per_page
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCustomerContractsListResponseModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Method Not Allowed
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: List Contracts for Customer
      tags:
      - Customer Contract
  /pricebook/contracts/{contract_id}:
    get:
      operationId: Details of Contract by ID for Customer
      parameters:
      - explode: false
        in: path
        name: contract_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerContractDetailResponseModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Method Not Allowed
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: Details of Contract by ID for Customer
      tags:
      - Customer Contract
  /pricebook/discounts/entities: {}
  /pricebook/discounts/entities/{plan_type}/{entity_id}: {}
  /pricebook/discounts/entities/{plan_type}/{entity_id}/update-status: {}
  /pricebook/discounts/flat-per-resource: {}
  /pricebook/discounts/flat-per-resource/{customer_id}: {}
  /billing/admin/add_organization: {}
  /billing/admin/billing/info/{organization_id}: {}
  /billing/admin/credit/{organization_id}: {}
  /billing/admin/exclude: {}
  /billing/admin/payment_history/{organization_id}: {}
  /billing/admin/recharge_history/{organization_id}: {}
  /billing/admin/threshold/{organization_id}: {}
  /billing/admin/usage/{organization_id}: {}
  /billing/admin/version: {}
  /billing/alive:
    get:
      operationId: get_alive
      responses:
        "200":
          content: {}
          description: Success
      summary: "GET: Alive"
      tags:
      - alive
  /billing/billing/last-day-cost:
    get:
      operationId: get_last_day_cost
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lastdaycostresponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: "GET: Last Day Cost"
      tags:
      - billing
  /billing/billing/usage:
    get:
      operationId: get_usage
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Billingmetricesresponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: "GET: Billing usage"
      tags:
      - billing
  /billing/payment/payment-details:
    get:
      operationId: get_details
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentDetailsResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: "GET: View payment details"
      tags:
      - payment
  /billing/payment/payment-initiate:
    post:
      operationId: post_payment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentInitiatePayload'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentInitiateResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: "POST: Initiate payment"
      tags:
      - payment
      x-codegen-request-body-name: payload
  /billing/user-credit/credit:
    get:
      operationId: Check balance as an organization
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Getcreditandthresholdinfoinresponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: "GET: View credit and threshold"
      tags:
      - credit
  /billing/user/info:
    get:
      operationId: get_user
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersInfoListResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: "GET: Fetch User Info"
      tags:
      - user
    post:
      operationId: post_user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Userinfopostpayload'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddUserInfoSuccessResponseModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: "POST: Insert user info"
      tags:
      - user
      x-codegen-request-body-name: payload
    put:
      operationId: Update user info
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Userinfopostpayload'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddUserInfoSuccessResponseModel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseModel'
          description: Not Found
        "500":
          content: {}
          description: Internal Server Error
      security:
      - accessToken: []
      - apiKey: []
      summary: "PUT: Update user info"
      tags:
      - user
      x-codegen-request-body-name: payload
components:
  responses:
    ParseError:
      content: {}
      description: When a mask can't be parsed
    MaskError:
      content: {}
      description: When any error occurs on mask
  schemas:
    AuthRequestLoginResponseModel:
      properties:
        status:
          type: boolean
        message:
          type: string
        data:
          $ref: '#/components/schemas/AuthRequestLoginFields'
      type: object
    AuthRequestLoginFields:
      properties:
        authorization_url:
          type: string
        session_id:
          type: string
      type: object
    ErrorResponseModel:
      example:
        error_reason: error_reason
        message: message
        status: false
      properties:
        status:
          default: false
          type: boolean
        message:
          type: string
        error_reason:
          type: string
      type: object
    GetTokenPayload:
      properties:
        session_id:
          type: string
        callback_code:
          type: string
      required:
      - callback_code
      - session_id
      type: object
    AuthGetTokenResponseModel:
      properties:
        status:
          type: boolean
        message:
          type: string
        token:
          $ref: '#/components/schemas/TokenFields'
        first_login:
          type: boolean
      type: object
    TokenFields:
      properties:
        access_token:
          type: string
        id_token:
          type: string
        refresh_token:
          type: string
      type: object
    RefreshTokenPayload:
      properties:
        id_token:
          type: string
        refresh_token:
          type: string
      required:
      - id_token
      - refresh_token
      type: object
    LogoutPayload:
      properties:
        refresh_token:
          type: string
      required:
      - refresh_token
      type: object
    AuthUserInfoResponseModel:
      example:
        message: message
        user:
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          email: email
          username: username
        status: true
      properties:
        status:
          type: boolean
        message:
          type: string
        user:
          $ref: '#/components/schemas/AuthUserFields'
      type: object
    AuthUserFields:
      example:
        name: name
        created_at: 2000-01-23T04:56:07.000+00:00
        email: email
        username: username
      properties:
        email:
          type: string
        name:
          type: string
        username:
          type: string
        created_at:
          format: date-time
          type: string
      type: object
    CommonResponseModel:
      example:
        message: message
        status: true
      properties:
        status:
          type: boolean
        message:
          type: string
      type: object
    GetOrganizationResponseModel:
      example:
        organization:
          total_volumes: 5
          total_containers: 2
          name: name
          total_clusters: 7
          created_at: 2000-01-23T04:56:07.000+00:00
          threshold: 1
          id: 0
          credit: 6
          total_instances: 5
          users:
          - joined_at: 2000-01-23T04:56:07.000+00:00
            sub: sub
            role: role
            last_login: 2000-01-23T04:56:07.000+00:00
            name: name
            rbac_roles:
            - name: name
            - name: name
            id: 9
            email: email
            username: username
          - joined_at: 2000-01-23T04:56:07.000+00:00
            sub: sub
            role: role
            last_login: 2000-01-23T04:56:07.000+00:00
            name: name
            rbac_roles:
            - name: name
            - name: name
            id: 9
            email: email
            username: username
        message: message
        status: true
      properties:
        status:
          type: boolean
        message:
          type: string
        organization:
          $ref: '#/components/schemas/OrganizationFields'
      type: object
    OrganizationFields:
      example:
        total_volumes: 5
        total_containers: 2
        name: name
        total_clusters: 7
        created_at: 2000-01-23T04:56:07.000+00:00
        threshold: 1
        id: 0
        credit: 6
        total_instances: 5
        users:
        - joined_at: 2000-01-23T04:56:07.000+00:00
          sub: sub
          role: role
          last_login: 2000-01-23T04:56:07.000+00:00
          name: name
          rbac_roles:
          - name: name
          - name: name
          id: 9
          email: email
          username: username
        - joined_at: 2000-01-23T04:56:07.000+00:00
          sub: sub
          role: role
          last_login: 2000-01-23T04:56:07.000+00:00
          name: name
          rbac_roles:
          - name: name
          - name: name
          id: 9
          email: email
          username: username
      properties:
        id:
          type: integer
        name:
          type: string
        credit:
          type: integer
        threshold:
          type: integer
        total_instances:
          type: integer
        total_volumes:
          type: integer
        total_containers:
          type: integer
        total_clusters:
          type: integer
        users:
          items:
            $ref: '#/components/schemas/OrganizationUserResponseModel'
          type: array
        created_at:
          format: date-time
          type: string
      required:
      - id
      - name
      type: object
    OrganizationUserResponseModel:
      example:
        joined_at: 2000-01-23T04:56:07.000+00:00
        sub: sub
        role: role
        last_login: 2000-01-23T04:56:07.000+00:00
        name: name
        rbac_roles:
        - name: name
        - name: name
        id: 9
        email: email
        username: username
      properties:
        id:
          type: integer
        sub:
          type: string
        email:
          type: string
        username:
          type: string
        name:
          type: string
        role:
          type: string
        rbac_roles:
          items:
            $ref: '#/components/schemas/RbacRoleField'
          type: array
        joined_at:
          format: date-time
          type: string
        last_login:
          format: date-time
          type: string
      type: object
    RbacRoleField:
      example:
        name: name
      properties:
        name:
          type: string
      type: object
    UpdateOrganizationPayload:
      example:
        name: name
      properties:
        name:
          type: string
      required:
      - name
      type: object
    UpdateOrganizationResponseModel:
      example:
        message: message
        status: true
      properties:
        status:
          type: boolean
        message:
          type: string
      type: object
    RemoveMemberPayload:
      example:
        email: email
      properties:
        email:
          type: string
      required:
      - email
      type: object
    RemoveMemberFromOrganizationResponseModel:
      example:
        message: message
        status: true
      properties:
        status:
          type: boolean
        message:
          type: string
      type: object
    GetApiKeyResponseModel:
      example:
        api_key:
          key: key
        message: message
        status: true
      properties:
        status:
          type: boolean
        message:
          type: string
        api_key:
          $ref: '#/components/schemas/ApiKeyFields'
      type: object
    ApiKeyFields:
      example:
        key: key
      properties:
        key:
          type: string
      type: object
    GenerateApiKeyResponseModel:
      example:
        api_key: api_key
        message: message
        status: true
      properties:
        status:
          type: boolean
        message:
          type: string
        api_key:
          type: string
      type: object
    VerifyApiKeyPayload:
      properties:
        api_key:
          type: string
      type: object
    VerifyApiKeyResponseModel:
      properties:
        status:
          type: boolean
        message:
          type: string
        api_key:
          $ref: '#/components/schemas/ApiKeyVerifyFields'
      type: object
    ApiKeyVerifyFields:
      properties:
        user_id:
          type: integer
        org_id:
          type: integer
        user_role:
          type: string
        sub:
          type: string
      type: object
    InviteUserPayload:
      example:
        email: email
      properties:
        email:
          type: string
      required:
      - email
      type: object
    GetInvitesResponseModel:
      example:
        invites:
        - created_at: 2000-01-23T04:56:07.000+00:00
          id: 0
          email: email
          status: status
        - created_at: 2000-01-23T04:56:07.000+00:00
          id: 0
          email: email
          status: status
        message: message
        status: true
      properties:
        status:
          type: boolean
        message:
          type: string
        invites:
          items:
            $ref: '#/components/schemas/InviteFields'
          type: array
      type: object
    InviteFields:
      example:
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 0
        email: email
        status: status
      properties:
        id:
          type: integer
        email:
          type: string
        status:
          type: string
        created_at:
          format: date-time
          type: string
      type: object
    InviteUserResponseModel:
      example:
        invite:
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 0
          email: email
          status: status
        message: message
        status: true
      properties:
        status:
          type: boolean
        message:
          type: string
        invite:
          $ref: '#/components/schemas/InviteFields'
      type: object
    CreateUpdatePermissionPayload:
      properties:
        resource:
          type: string
        permission:
          type: string
        method:
          type: string
        endpoint:
          type: string
      required:
      - endpoint
      - method
      - permission
      - resource
      type: object
    GetPermissionsResponseModel:
      example:
        permissions:
        - endpoint: endpoint
          method: method
          resource: resource
          created_at: 2000-01-23T04:56:07.000+00:00
          permission: permission
          id: 0
        - endpoint: endpoint
          method: method
          resource: resource
          created_at: 2000-01-23T04:56:07.000+00:00
          permission: permission
          id: 0
        message: message
        status: true
      properties:
        status:
          type: boolean
        message:
          type: string
        permissions:
          items:
            $ref: '#/components/schemas/PermissionFields'
          type: array
      type: object
    PermissionFields:
      example:
        endpoint: endpoint
        method: method
        resource: resource
        created_at: 2000-01-23T04:56:07.000+00:00
        permission: permission
        id: 0
      properties:
        id:
          type: integer
        resource:
          type: string
        permission:
          type: string
        method:
          type: string
        endpoint:
          type: string
        created_at:
          format: date-time
          type: string
      type: object
    CreateUpdatePermissionResponseModel:
      properties:
        status:
          type: boolean
        message:
          type: string
        permission:
          $ref: '#/components/schemas/PermissionFields'
      type: object
    GetUserPermissionsResponseModel:
      example:
        permissions:
        - resource: resource
          permission: permission
          id: 0
        - resource: resource
          permission: permission
          id: 0
        message: message
        status: true
      properties:
        status:
          type: boolean
        message:
          type: string
        permissions:
          items:
            $ref: '#/components/schemas/UserPermissionFields'
          type: array
      type: object
    UserPermissionFields:
      example:
        resource: resource
        permission: permission
        id: 0
      properties:
        id:
          type: integer
        resource:
          type: string
        permission:
          type: string
      type: object
    CreateUpdatePolicyPayload:
      properties:
        name:
          type: string
        description:
          type: string
        is_public:
          type: boolean
        permissions:
          items:
            type: integer
          type: array
      required:
      - description
      - is_public
      - name
      - permissions
      type: object
    GetPoliciesResponseModel:
      example:
        policies:
        - permissions:
          - resource: resource
            permission: permission
            id: 6
          - resource: resource
            permission: permission
            id: 6
          name: name
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 0
        - permissions:
          - resource: resource
            permission: permission
            id: 6
          - resource: resource
            permission: permission
            id: 6
          name: name
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 0
        message: message
        status: true
      properties:
        status:
          type: boolean
        message:
          type: string
        policies:
          items:
            $ref: '#/components/schemas/PolicyFields'
          type: array
      type: object
    PolicyFields:
      example:
        permissions:
        - resource: resource
          permission: permission
          id: 6
        - resource: resource
          permission: permission
          id: 6
        name: name
        description: description
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 0
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        permissions:
          items:
            $ref: '#/components/schemas/PolicyPermissionFields'
          type: array
        created_at:
          format: date-time
          type: string
      type: object
    PolicyPermissionFields:
      example:
        resource: resource
        permission: permission
        id: 6
      properties:
        id:
          type: integer
        resource:
          type: string
        permission:
          type: string
      type: object
    CreateUpdatePolicyResponseModel:
      properties:
        status:
          type: boolean
        message:
          type: string
        policy:
          $ref: '#/components/schemas/PolicyFields'
      type: object
    CreateUpdateRbacRolePayload:
      example:
        permissions:
        - 6
        - 6
        name: name
        policies:
        - 0
        - 0
        description: description
      properties:
        name:
          type: string
        description:
          type: string
        policies:
          items:
            type: integer
          type: array
        permissions:
          items:
            type: integer
          type: array
      required:
      - description
      - name
      type: object
    GetRbacRolesResponseModel:
      example:
        roles:
        - permissions:
          - resource: resource
            permission: permission
            id: 1
          - resource: resource
            permission: permission
            id: 1
          name: name
          policies:
          - name: name
            description: description
            id: 6
          - name: name
            description: description
            id: 6
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 0
        - permissions:
          - resource: resource
            permission: permission
            id: 1
          - resource: resource
            permission: permission
            id: 1
          name: name
          policies:
          - name: name
            description: description
            id: 6
          - name: name
            description: description
            id: 6
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 0
        message: message
        status: true
      properties:
        status:
          type: boolean
        message:
          type: string
        roles:
          items:
            $ref: '#/components/schemas/RbacRoleFields'
          type: array
      type: object
    RbacRoleFields:
      example:
        permissions:
        - resource: resource
          permission: permission
          id: 1
        - resource: resource
          permission: permission
          id: 1
        name: name
        policies:
        - name: name
          description: description
          id: 6
        - name: name
          description: description
          id: 6
        description: description
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 0
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        policies:
          items:
            $ref: '#/components/schemas/RolePolicyFields'
          type: array
        permissions:
          items:
            $ref: '#/components/schemas/RolePermissionFields'
          type: array
        created_at:
          format: date-time
          type: string
      type: object
    RolePolicyFields:
      example:
        name: name
        description: description
        id: 6
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
      type: object
    RolePermissionFields:
      example:
        resource: resource
        permission: permission
        id: 1
      properties:
        id:
          type: integer
        resource:
          type: string
        permission:
          type: string
      type: object
    RbacRoleDetailResponseModel:
      example:
        role:
          permissions:
          - resource: resource
            permission: permission
            id: 1
          - resource: resource
            permission: permission
            id: 1
          name: name
          policies:
          - name: name
            description: description
            id: 6
          - name: name
            description: description
            id: 6
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 0
        message: message
        status: true
      properties:
        status:
          type: boolean
        message:
          type: string
        role:
          $ref: '#/components/schemas/RbacRoleFields'
      type: object
    AssignRbacRolePayload:
      example:
        role_id: 0
      properties:
        role_id:
          type: integer
      required:
      - role_id
      type: object
    AdminOrganizationsResponseModel:
      properties:
        status:
          type: boolean
        message:
          type: string
        organizations:
          items:
            $ref: '#/components/schemas/OrganizationFields'
          type: array
        organization_count:
          type: integer
      type: object
    AdminOrganizationsSummaryResponseModel:
      properties:
        status:
          type: boolean
        message:
          type: string
        organizations:
          items:
            $ref: '#/components/schemas/AdminOrganizationSummaryFields'
          type: array
      type: object
    AdminOrganizationSummaryFields:
      properties:
        id:
          type: integer
        name:
          type: string
        created_at:
          format: date-time
          type: string
      required:
      - id
      - name
      type: object
    AdminOrganizationResponseModel:
      properties:
        status:
          type: boolean
        message:
          type: string
        organizations:
          $ref: '#/components/schemas/OrganizationFields'
      type: object
    AdminVersionResponseModel:
      properties:
        status:
          type: boolean
        message:
          type: string
        version:
          type: string
      type: object
    AdminHibernationRestorationPayloadModel:
      properties:
        org_id:
          type: integer
        vm_name:
          type: string
        vm_id:
          type: integer
        status:
          type: string
      required:
      - org_id
      - status
      - vm_id
      - vm_name
      type: object
    UserTransferPayload:
      properties:
        org_id:
          type: integer
        role:
          type: string
      required:
      - org_id
      - role
      type: object
    AdminUsersResponseModel:
      properties:
        status:
          type: boolean
        message:
          type: string
        users:
          items:
            $ref: '#/components/schemas/AdminUserFields'
          type: array
      type: object
    AdminUserFields:
      properties:
        id:
          type: integer
        username:
          type: string
        email:
          type: string
        org_id:
          type: integer
        org_name:
          type: string
        created_at:
          format: date-time
          type: string
        last_login:
          format: date-time
          type: string
      required:
      - email
      - id
      - org_id
      - org_name
      - username
      type: object
    AdminUserResponseModel:
      properties:
        status:
          type: boolean
        message:
          type: string
        user:
          $ref: '#/components/schemas/AdminUserFields'
      type: object
    DashboardInfoResponse:
      example:
        overview:
          container:
            cost_per_hour: 2.027123023002322
            gpus: 9
            count: 2
            vcpus: 7
            ram: 3
          volume:
            cost_per_hour: 1.2315135367772556
            using: 7
            count: 4
          instance:
            cost_per_hour: 5.637376656633329
            gpus: 1
            count: 0
            vcpus: 6
            ram: 5
        message: message
        status: true
      properties:
        status:
          type: boolean
        message:
          type: string
        overview:
          $ref: '#/components/schemas/OverviewInfo'
      type: object
    OverviewInfo:
      example:
        container:
          cost_per_hour: 2.027123023002322
          gpus: 9
          count: 2
          vcpus: 7
          ram: 3
        volume:
          cost_per_hour: 1.2315135367772556
          using: 7
          count: 4
        instance:
          cost_per_hour: 5.637376656633329
          gpus: 1
          count: 0
          vcpus: 6
          ram: 5
      properties:
        instance:
          $ref: '#/components/schemas/InstanceOverviewFields'
        container:
          $ref: '#/components/schemas/ContainerOverviewFields'
        volume:
          $ref: '#/components/schemas/VolumeOverviewFields'
      type: object
    InstanceOverviewFields:
      example:
        cost_per_hour: 5.637376656633329
        gpus: 1
        count: 0
        vcpus: 6
        ram: 5
      properties:
        count:
          type: integer
        vcpus:
          type: integer
        gpus:
          type: integer
        ram:
          type: integer
        cost_per_hour:
          type: number
      type: object
    ContainerOverviewFields:
      example:
        cost_per_hour: 2.027123023002322
        gpus: 9
        count: 2
        vcpus: 7
        ram: 3
      properties:
        count:
          type: integer
        vcpus:
          type: integer
        gpus:
          type: integer
        ram:
          type: integer
        cost_per_hour:
          type: number
      type: object
    VolumeOverviewFields:
      example:
        cost_per_hour: 1.2315135367772556
        using: 7
        count: 4
      properties:
        count:
          type: integer
        using:
          type: integer
        cost_per_hour:
          type: number
      type: object
    NewStockRetriveResponse:
      example:
        stocks:
        - models:
          - planned_7_days: planned_7_days
            planned_100_days: planned_100_days
            configurations:
              "8x": 5
              "4x": 1
              "2x": 6
              "1x": 0
              "10x": 5
            available: available
            model: model
            planned_30_days: planned_30_days
          - planned_7_days: planned_7_days
            planned_100_days: planned_100_days
            configurations:
              "8x": 5
              "4x": 1
              "2x": 6
              "1x": 0
              "10x": 5
            available: available
            model: model
            planned_30_days: planned_30_days
          stock-type: stock-type
          region: region
        - models:
          - planned_7_days: planned_7_days
            planned_100_days: planned_100_days
            configurations:
              "8x": 5
              "4x": 1
              "2x": 6
              "1x": 0
              "10x": 5
            available: available
            model: model
            planned_30_days: planned_30_days
          - planned_7_days: planned_7_days
            planned_100_days: planned_100_days
            configurations:
              "8x": 5
              "4x": 1
              "2x": 6
              "1x": 0
              "10x": 5
            available: available
            model: model
            planned_30_days: planned_30_days
          stock-type: stock-type
          region: region
      properties:
        stocks:
          items:
            $ref: '#/components/schemas/NewStockResponse'
          type: array
      type: object
    NewStockResponse:
      example:
        models:
        - planned_7_days: planned_7_days
          planned_100_days: planned_100_days
          configurations:
            "8x": 5
            "4x": 1
            "2x": 6
            "1x": 0
            "10x": 5
          available: available
          model: model
          planned_30_days: planned_30_days
        - planned_7_days: planned_7_days
          planned_100_days: planned_100_days
          configurations:
            "8x": 5
            "4x": 1
            "2x": 6
            "1x": 0
            "10x": 5
          available: available
          model: model
          planned_30_days: planned_30_days
        stock-type: stock-type
        region: region
      properties:
        region:
          type: string
        stock-type:
          type: string
        models:
          items:
            $ref: '#/components/schemas/NewModelResponse'
          type: array
      type: object
    NewModelResponse:
      example:
        planned_7_days: planned_7_days
        planned_100_days: planned_100_days
        configurations:
          "8x": 5
          "4x": 1
          "2x": 6
          "1x": 0
          "10x": 5
        available: available
        model: model
        planned_30_days: planned_30_days
      properties:
        model:
          type: string
        available:
          type: string
        planned_7_days:
          type: string
        planned_30_days:
          type: string
        planned_100_days:
          type: string
        configurations:
          $ref: '#/components/schemas/NewConfigurationsResponse'
      type: object
    NewConfigurationsResponse:
      example:
        "8x": 5
        "4x": 1
        "2x": 6
        "1x": 0
        "10x": 5
      properties:
        "1x":
          type: integer
        "2x":
          type: integer
        "4x":
          type: integer
        "8x":
          type: integer
        "10x":
          type: integer
      type: object
    StockVisibilityUserListResponse:
      properties:
        status:
          type: boolean
        message:
          type: string
        users:
          items:
            $ref: '#/components/schemas/SingleVisibilityUserResponse'
          type: array
      type: object
    SingleVisibilityUserResponse:
      properties:
        id:
          type: integer
        user_id:
          type: integer
        stock_visible:
          type: boolean
      required:
      - id
      - stock_visible
      - user_id
      type: object
    StockVisibilityUserPayload:
      properties:
        user_ids:
          items:
            type: integer
          type: array
      required:
      - user_ids
      type: object
    ResponseModel:
      example:
        message: message
        status: true
      properties:
        status:
          type: boolean
        message:
          type: string
      type: object
    NodeStockPayloadModel:
      properties:
        stocks:
          items:
            $ref: '#/components/schemas/NodePayloadModel'
          type: array
      type: object
    NodePayloadModel:
      properties:
        region:
          type: string
        nodes:
          items:
            $ref: '#/components/schemas/NodePowerUsageModel'
          type: array
      type: object
    NodePowerUsageModel:
      properties:
        openstack_id:
          type: string
        openstack_name:
          type: string
        nexgen_name:
          type: string
        status:
          type: string
        provision_date:
          format: date-time
          type: string
        sunset_date:
          format: date-time
          type: string
        flavors:
          items:
            type: string
          type: array
        projects:
          items:
            type: string
          type: array
        stocks:
          items:
            $ref: '#/components/schemas/NodeStocksPayload'
          type: array
        organizations:
          items:
            type: integer
          type: array
        power_usages:
          $ref: '#/components/schemas/PowerUsageModel'
      required:
      - openstack_id
      type: object
    NodeStocksPayload:
      properties:
        name:
          type: string
        type:
          type: string
        total:
          type: integer
        in_use:
          type: integer
      required:
      - in_use
      - total
      - type
      type: object
    PowerUsageModel:
      properties:
        value:
          type: number
        unit:
          type: string
      required:
      - unit
      - value
      type: object
    NodeStockResponseModel:
      properties:
        stocks:
          items:
            $ref: '#/components/schemas/NodeResponseModel'
          type: array
      type: object
    NodeResponseModel:
      properties:
        region:
          type: string
        nodes:
          items:
            $ref: '#/components/schemas/NodeModel'
          type: array
      type: object
    NodeModel:
      properties:
        openstack_id:
          type: string
        openstack_name:
          type: string
        nexgen_name:
          type: string
        status:
          type: string
        provision_date:
          format: date-time
          type: string
        sunset_date:
          format: date-time
          type: string
        flavors:
          items:
            type: string
          type: array
        projects:
          items:
            type: string
          type: array
        stocks:
          items:
            $ref: '#/components/schemas/NodeStocksPayload'
          type: array
        organizations:
          items:
            type: integer
          type: array
      required:
      - openstack_id
      type: object
    FutureNodesStockModel:
      properties:
        future_stocks:
          items:
            $ref: '#/components/schemas/FutureNodeResponseModel'
          type: array
      type: object
    FutureNodeResponseModel:
      properties:
        region:
          type: string
        nodes:
          items:
            $ref: '#/components/schemas/FutureNodeModel'
          type: array
      type: object
    FutureNodeModel:
      properties:
        id:
          readOnly: true
          type: integer
        openstack_name:
          type: string
        nexgen_name:
          type: string
        expected_provision_date:
          description: Date and time in the format YYYY-MM-DD HH:mm:ss
          format: date-time
          type: string
        stocks:
          items:
            $ref: '#/components/schemas/FutureNodeStockModel'
          type: array
      required:
      - expected_provision_date
      type: object
    FutureNodeStockModel:
      properties:
        id:
          readOnly: true
          type: integer
        name:
          type: string
        expected_amount:
          type: integer
      required:
      - expected_amount
      type: object
    NewStockUpdateResponseModel:
      properties:
        status:
          type: boolean
        message:
          type: string
      type: object
    FutureNodeUpdateModel:
      properties:
        id:
          readOnly: true
          type: integer
        region_id:
          type: integer
        openstack_name:
          type: string
        nexgen_name:
          type: string
        expected_provision_date:
          format: date-time
          type: string
      required:
      - expected_provision_date
      - nexgen_name
      - openstack_name
      type: object
    CreateEnvironment:
      example:
        name: name
        region: region
      properties:
        name:
          description: The name of the environment being created.
          maxLength: 50
          type: string
        region:
          description: "The geographic location of the data center where the environment\
            \ is being created. To learn more about regions, [**click here**](https://infrahub-doc.nexgencloud.com/docs/features/regions)."
          type: string
      required:
      - name
      - region
      type: object
    Environment:
      example:
        environment:
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 0
          region: region
        message: message
        status: true
      properties:
        status:
          type: boolean
        message:
          type: string
        environment:
          $ref: '#/components/schemas/EnvironmentFields'
      type: object
    EnvironmentFields:
      example:
        name: name
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 0
        region: region
      properties:
        id:
          type: integer
        name:
          type: string
        region:
          type: string
        created_at:
          format: date-time
          type: string
      type: object
    Environments:
      example:
        environments:
        - name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 0
          region: region
        - name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 0
          region: region
        message: message
        status: true
      properties:
        status:
          type: boolean
        message:
          type: string
        environments:
          items:
            $ref: '#/components/schemas/EnvironmentFields'
          type: array
      type: object
    UpdateEnvironment:
      example:
        name: name
      properties:
        name:
          description: The new name of the environment.
          maxLength: 50
          type: string
      required:
      - name
      type: object
    InstanceEvents:
      example:
        instance_events:
        - reason: reason
          instance_id: 0
          user_id: 6
          org_id: 1
          time: 2000-01-23T04:56:07.000+00:00
          type: type
          message: message
          object: object
        - reason: reason
          instance_id: 0
          user_id: 6
          org_id: 1
          time: 2000-01-23T04:56:07.000+00:00
          type: type
          message: message
          object: object
        message: message
        status: true
      properties:
        status:
          type: boolean
        message:
          type: string
        instance_events:
          items:
            $ref: '#/components/schemas/InstanceEventsFields'
          type: array
      type: object
    InstanceEventsFields:
      example:
        reason: reason
        instance_id: 0
        user_id: 6
        org_id: 1
        time: 2000-01-23T04:56:07.000+00:00
        type: type
        message: message
        object: object
      properties:
        instance_id:
          type: integer
        user_id:
          type: integer
        org_id:
          type: integer
        time:
          format: date-time
          type: string
        type:
          type: string
        reason:
          type: string
        object:
          type: string
        message:
          type: string
      type: object
    CreateInstancesPayload:
      example:
        create_bootable_volume: true
        profile:
          name: name
          description: description
        count: 5
        volume_name: volume_name
        user_data: user_data
        labels:
        - labels
        - labels
        flavor:
          disk: 1
          gpu_count: 5
          cpu: 0
          gpu: gpu
          ram: 6.027456183070403
        key_name: key_name
        callback_url: callback_url
        image_name: image_name
        flavor_name: flavor_name
        assign_floating_ip: true
        name: name
        security_rules:
        - protocol: any
          ethertype: ethertype
          remote_ip_prefix: remote_ip_prefix
          direction: direction
        - protocol: any
          ethertype: ethertype
          remote_ip_prefix: remote_ip_prefix
          direction: direction
        environment_name: environment_name
      properties:
        name:
          description: The name of the virtual machine being created.
          maxLength: 50
          type: string
        environment_name:
          description: "The name of the [environment](https://infrahub-doc.nexgencloud.com/docs/features/environments-available-features)\
            \ in which the virtual machine is to be created."
          type: string
        image_name:
          description: "The [operating system (OS) image](https://infrahub-doc.nexgencloud.com/docs/virtual-machines/images)\
            \ name designated for installation on the virtual machine."
          type: string
        volume_name:
          description: The names of the volume(s) to be attached to the virtual machine
            being created.
          type: string
        create_bootable_volume:
          description: "Indicates whether to create a bootable volume for the virtual\
            \ machine. When set to `true`, a bootable volume will be created; the\
            \ default value is `false`."
          type: boolean
        flavor_name:
          description: "The name of the GPU hardware configuration ([flavor](https://infrahub-doc.nexgencloud.com/docs/hardware/flavors))\
            \ for the virtual machines being created."
          type: string
        flavor:
          $ref: '#/components/schemas/FlavorObjectFields'
        key_name:
          description: "The name of the existing SSH key pair to be used for secure\
            \ access to the virtual machine. For additional information on SSH key\
            \ pairs, [**click here**](https://infrahub-doc.nexgencloud.com/docs/getting-started/create-keypair)."
          type: string
        user_data:
          description: "Optional initialization configuration commands to manage the\
            \ configuration of a virtual machine at launch using cloud-init scripts.\
            \ For more information about custom VM configuration using cloud-init,\
            \ [**click here**](https://infrahub-doc.nexgencloud.com/docs/virtual-machines/initialization-configuration)."
          type: string
        callback_url:
          description: "An optional URL where actions performed on the virtual machine\
            \ will be sent. For additional information on event callbacks, [**click\
            \ here**](https://infrahub-doc.nexgencloud.com/docs/features/webhooks-callbacks)."
          maxLength: 250
          type: string
        assign_floating_ip:
          description: "When this field is set to `true`, it attaches a [public IP\
            \ address](https://infrahub-doc.nexgencloud.com/docs/virtual-machines/public-ip)\
            \ to the virtual machine, enabling internet accessibility."
          type: boolean
        security_rules:
          items:
            $ref: '#/components/schemas/CreateSecurityRulePayload'
          type: array
        profile:
          $ref: '#/components/schemas/ProfileObjectFields'
        count:
          description: The number of virtual machines to be created.
          type: integer
        labels:
          items:
            type: string
          type: array
      required:
      - count
      - environment_name
      - flavor_name
      - key_name
      - name
      type: object
    FlavorObjectFields:
      example:
        disk: 1
        gpu_count: 5
        cpu: 0
        gpu: gpu
        ram: 6.027456183070403
      properties:
        cpu:
          type: integer
        ram:
          type: number
        disk:
          type: integer
        gpu:
          type: string
        gpu_count:
          type: integer
      type: object
    CreateSecurityRulePayload:
      example:
        protocol: any
        ethertype: ethertype
        remote_ip_prefix: remote_ip_prefix
        direction: direction
      properties:
        direction:
          description: The direction of traffic that the firewall rule applies to.
          type: string
        protocol:
          description: "The network protocol associated with the rule. Call the [`GET\
            \ /core/sg-rules-protocols`](https://infrahub-api-doc.nexgencloud.com/#get-/core/sg-rules-protocols)\
            \ endpoint to retrieve a list of permitted network protocols."
          enum:
          - any
          - ah
          - dccp
          - egp
          - esp
          - gre
          - hopopt
          - icmp
          - igmp
          - ip
          - ipip
          - ipv6-encap
          - ipv6-frag
          - ipv6-icmp
          - icmpv6
          - ipv6-nonxt
          - ipv6-opts
          - ipv6-route
          - ospf
          - pgm
          - rsvp
          - sctp
          - tcp
          - udp
          - udplite
          - vrrp
          example: any
          type: string
        ethertype:
          description: The Ethernet type associated with the rule.
          type: string
        remote_ip_prefix:
          description: The IP address range that is allowed to access the specified
            port. Use "0.0.0.0/0" to allow any IP address.
          type: string
      required:
      - direction
      - ethertype
      - protocol
      - remote_ip_prefix
      type: object
    ProfileObjectFields:
      example:
        name: name
        description: description
      properties:
        name:
          type: string
        description:
          type: string
      required:
      - name
      type: object
    Instances:
      example:
        instances:
        - image:
            name: name
          os: os
          contract_id: 1
          floating_ip_status: floating_ip_status
          keypair:
            name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          power_state: power_state
          labels:
          - labels
          - labels
          flavor:
            disk: 7
            gpu_count: 3
            name: name
            cpu: 5
            ephemeral: 9
            id: 5
            gpu: gpu
            ram: 2.3021358869347655
          vm_state: vm_state
          environment:
            org_id: 1
            name: name
            id: 6
            region: region
          floating_ip: floating_ip
          name: name
          id: 0
          fixed_ip: fixed_ip
          volume_attachments:
          - volume:
              volume_type: volume_type
              size: 4
              name: name
              description: description
              id: 2
            created_at: 2000-01-23T04:56:07.000+00:00
            device: device
            status: status
          - volume:
              volume_type: volume_type
              size: 4
              name: name
              description: description
              id: 2
            created_at: 2000-01-23T04:56:07.000+00:00
            device: device
            status: status
          locked: true
          security_rules:
          - protocol: protocol
            ethertype: ethertype
            port_range_max: 1
            remote_ip_prefix: remote_ip_prefix
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 7
            direction: direction
            port_range_min: 1
            status: status
          - protocol: protocol
            ethertype: ethertype
            port_range_max: 1
            remote_ip_prefix: remote_ip_prefix
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 7
            direction: direction
            port_range_min: 1
            status: status
          status: status
        - image:
            name: name
          os: os
          contract_id: 1
          floating_ip_status: floating_ip_status
          keypair:
            name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          power_state: power_state
          labels:
          - labels
          - labels
          flavor:
            disk: 7
            gpu_count: 3
            name: name
            cpu: 5
            ephemeral: 9
            id: 5
            gpu: gpu
            ram: 2.3021358869347655
          vm_state: vm_state
          environment:
            org_id: 1
            name: name
            id: 6
            region: region
          floating_ip: floating_ip
          name: name
          id: 0
          fixed_ip: fixed_ip
          volume_attachments:
          - volume:
              volume_type: volume_type
              size: 4
              name: name
              description: description
              id: 2
            created_at: 2000-01-23T04:56:07.000+00:00
            device: device
            status: status
          - volume:
              volume_type: volume_type
              size: 4
              name: name
              description: description
              id: 2
            created_at: 2000-01-23T04:56:07.000+00:00
            device: device
            status: status
          locked: true
          security_rules:
          - protocol: protocol
            ethertype: ethertype
            port_range_max: 1
            remote_ip_prefix: remote_ip_prefix
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 7
            direction: direction
            port_range_min: 1
            status: status
          - protocol: protocol
            ethertype: ethertype
            port_range_max: 1
            remote_ip_prefix: remote_ip_prefix
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 7
            direction: direction
            port_range_min: 1
            status: status
          status: status
        message: message
        status: true
      properties:
        status:
          type: boolean
        message:
          type: string
        instances:
          items:
            $ref: '#/components/schemas/InstanceFields'
          type: array
      type: object
    InstanceFields:
      example:
        image:
          name: name
        os: os
        contract_id: 1
        floating_ip_status: floating_ip_status
        keypair:
          name: name
        created_at: 2000-01-23T04:56:07.000+00:00
        power_state: power_state
        labels:
        - labels
        - labels
        flavor:
          disk: 7
          gpu_count: 3
          name: name
          cpu: 5
          ephemeral: 9
          id: 5
          gpu: gpu
          ram: 2.3021358869347655
        vm_state: vm_state
        environment:
          org_id: 1
          name: name
          id: 6
          region: region
        floating_ip: floating_ip
        name: name
        id: 0
        fixed_ip: fixed_ip
        volume_attachments:
        - volume:
            volume_type: volume_type
            size: 4
            name: name
            description: description
            id: 2
          created_at: 2000-01-23T04:56:07.000+00:00
          device: device
          status: status
        - volume:
            volume_type: volume_type
            size: 4
            name: name
            description: description
            id: 2
          created_at: 2000-01-23T04:56:07.000+00:00
          device: device
          status: status
        locked: true
        security_rules:
        - protocol: protocol
          ethertype: ethertype
          port_range_max: 1
          remote_ip_prefix: remote_ip_prefix
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 7
          direction: direction
          port_range_min: 1
          status: status
        - protocol: protocol
          ethertype: ethertype
          port_range_max: 1
          remote_ip_prefix: remote_ip_prefix
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 7
          direction: direction
          port_range_min: 1
          status: status
        status: status
      properties:
        id:
          type: integer
        name:
          type: string
        status:
          type: string
        environment:
          $ref: '#/components/schemas/InstanceEnvironmentFields'
        image:
          $ref: '#/components/schemas/InstanceImageFields'
        flavor:
          $ref: '#/components/schemas/InstanceFlavorFields'
        os:
          type: string
        keypair:
          $ref: '#/components/schemas/InstanceKeypairFields'
        volume_attachments:
          items:
            $ref: '#/components/schemas/VolumeAttachmentFields'
          type: array
        security_rules:
          items:
            $ref: '#/components/schemas/SecurityRulesFieldsforInstance'
          type: array
        power_state:
          type: string
        vm_state:
          type: string
        fixed_ip:
          type: string
        floating_ip:
          type: string
        floating_ip_status:
          type: string
        locked:
          type: boolean
        contract_id:
          type: integer
        created_at:
          format: date-time
          type: string
        labels:
          items:
            type: string
          type: array
      type: object
    InstanceEnvironmentFields:
      example:
        org_id: 1
        name: name
        id: 6
        region: region
      properties:
        id:
          type: integer
        name:
          type: string
        org_id:
          type: integer
        region:
          type: string
      type: object
    InstanceImageFields:
      example:
        name: name
      properties:
        name:
          type: string
      type: object
    InstanceFlavorFields:
      example:
        disk: 7
        gpu_count: 3
        name: name
        cpu: 5
        ephemeral: 9
        id: 5
        gpu: gpu
        ram: 2.3021358869347655
      properties:
        id:
          type: integer
        name:
          type: string
        cpu:
          type: integer
        ram:
          type: number
        disk:
          type: integer
        ephemeral:
          type: integer
        gpu:
          type: string
        gpu_count:
          type: integer
      type: object
    InstanceKeypairFields:
      example:
        name: name
      properties:
        name:
          type: string
      type: object
    VolumeAttachmentFields:
      example:
        volume:
          volume_type: volume_type
          size: 4
          name: name
          description: description
          id: 2
        created_at: 2000-01-23T04:56:07.000+00:00
        device: device
        status: status
      properties:
        volume:
          $ref: '#/components/schemas/VolumeFieldsforInstance'
        status:
          type: string
        device:
          type: string
        created_at:
          format: date-time
          type: string
      type: object
    VolumeFieldsforInstance:
      example:
        volume_type: volume_type
        size: 4
        name: name
        description: description
        id: 2
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        volume_type:
          type: string
        size:
          type: integer
      type: object
    SecurityRulesFieldsforInstance:
      example:
        protocol: protocol
        ethertype: ethertype
        port_range_max: 1
        remote_ip_prefix: remote_ip_prefix
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 7
        direction: direction
        port_range_min: 1
        status: status
      properties:
        id:
          type: integer
        direction:
          type: string
        protocol:
          type: string
        port_range_min:
          type: integer
        port_range_max:
          type: integer
        ethertype:
          type: string
        remote_ip_prefix:
          type: string
        status:
          type: string
        created_at:
          format: date-time
          type: string
      type: object
    Instance:
      example:
        instance:
          image:
            name: name
          os: os
          contract_id: 1
          floating_ip_status: floating_ip_status
          keypair:
            name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          power_state: power_state
          labels:
          - labels
          - labels
          flavor:
            disk: 7
            gpu_count: 3
            name: name
            cpu: 5
            ephemeral: 9
            id: 5
            gpu: gpu
            ram: 2.3021358869347655
          vm_state: vm_state
          environment:
            org_id: 1
            name: name
            id: 6
            region: region
          floating_ip: floating_ip
          name: name
          id: 0
          fixed_ip: fixed_ip
          volume_attachments:
          - volume:
              volume_type: volume_type
              size: 4
              name: name
              description: description
              id: 2
            created_at: 2000-01-23T04:56:07.000+00:00
            device: device
            status: status
          - volume:
              volume_type: volume_type
              size: 4
              name: name
              description: description
              id: 2
            created_at: 2000-01-23T04:56:07.000+00:00
            device: device
            status: status
          locked: true
          security_rules:
          - protocol: protocol
            ethertype: ethertype
            port_range_max: 1
            remote_ip_prefix: remote_ip_prefix
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 7
            direction: direction
            port_range_min: 1
            status: status
          - protocol: protocol
            ethertype: ethertype
            port_range_max: 1
            remote_ip_prefix: remote_ip_prefix
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 7
            direction: direction
            port_range_min: 1
            status: status
          status: status
        message: message
        status: true
      properties:
        status:
          type: boolean
        message:
          type: string
        instance:
          $ref: '#/components/schemas/InstanceFields'
      type: object
    SecurityGroupRule:
      example:
        message: message
        security_rule:
          protocol: protocol
          ethertype: ethertype
          port_range_max: 5
          remote_ip_prefix: remote_ip_prefix
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 1
          direction: direction
          port_range_min: 5
          status: status
        status: true
      properties:
        status:
          type: boolean
        message:
          type: string
        security_rule:
          $ref: '#/components/schemas/SecurityGroupRuleFields'
      type: object
    SecurityGroupRuleFields:
      example:
        protocol: protocol
        ethertype: ethertype
        port_range_max: 5
        remote_ip_prefix: remote_ip_prefix
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 1
        direction: direction
        port_range_min: 5
        status: status
      properties:
        id:
          type: integer
        direction:
          type: string
        protocol:
          type: string
        port_range_min:
          type: integer
        port_range_max:
          type: integer
        ethertype:
          type: string
        remote_ip_prefix:
          type: string
        status:
          type: string
        created_at:
          format: date-time
          type: string
      type: object
    MetricsFields:
      example:
        disk.read:
          unit: unit
          data:
          - - 2023-09-01T01:19:00+00:00
            - 60
            - 1041433070000000
          - - 2023-09-01T01:24:00+00:00
            - 60
            - 1041441320000000
          columns:
          - time
          - granularity
          - value
        memory.usages:
          unit: unit
          data:
          - - 2023-09-01T01:19:00+00:00
            - 60
            - 1041433070000000
          - - 2023-09-01T01:24:00+00:00
            - 60
            - 1041441320000000
          columns:
          - time
          - granularity
          - value
        cpu:
          unit: unit
          data:
          - - 2023-09-01T01:19:00+00:00
            - 60
            - 1041433070000000
          - - 2023-09-01T01:24:00+00:00
            - 60
            - 1041441320000000
          columns:
          - time
          - granularity
          - value
        disk.write:
          unit: unit
          data:
          - - 2023-09-01T01:19:00+00:00
            - 60
            - 1041433070000000
          - - 2023-09-01T01:24:00+00:00
            - 60
            - 1041441320000000
          columns:
          - time
          - granularity
          - value
        network.in:
          unit: unit
          data:
          - - 2023-09-01T01:19:00+00:00
            - 60
            - 1041433070000000
          - - 2023-09-01T01:24:00+00:00
            - 60
            - 1041441320000000
          columns:
          - time
          - granularity
          - value
        network.out:
          unit: unit
          data:
          - - 2023-09-01T01:19:00+00:00
            - 60
            - 1041433070000000
          - - 2023-09-01T01:24:00+00:00
            - 60
            - 1041441320000000
          columns:
          - time
          - granularity
          - value
      properties:
        cpu:
          $ref: '#/components/schemas/MetricItemFields'
        memory.usages:
          $ref: '#/components/schemas/MetricItemFields'
        network.in:
          $ref: '#/components/schemas/MetricItemFields'
        network.out:
          $ref: '#/components/schemas/MetricItemFields'
        disk.read:
          $ref: '#/components/schemas/MetricItemFields'
        disk.write:
          $ref: '#/components/schemas/MetricItemFields'
      type: object
    MetricItemFields:
      example:
        unit: unit
        data:
        - - 2023-09-01T01:19:00+00:00
          - 60
          - 1041433070000000
        - - 2023-09-01T01:24:00+00:00
          - 60
          - 1041441320000000
        columns:
        - time
        - granularity
        - value
      properties:
        unit:
          type: string
        columns:
          example:
          - time
          - granularity
          - value
          items:
            type: string
          type: array
        data:
          example:
          - - 2023-09-01T01:19:00+00:00
            - 60
            - 1041433070000000
          - - 2023-09-01T01:24:00+00:00
            - 60
            - 1041441320000000
          items:
            items:
              properties: {}
              type: object
            type: array
          type: array
      type: object
    InstanceResizePayload:
      example:
        flavor:
          disk: 1
          gpu_count: 5
          cpu: 0
          gpu: gpu
          ram: 6.027456183070403
        flavor_name: flavor_name
      properties:
        flavor_name:
          type: string
        flavor:
          $ref: '#/components/schemas/FlavorObjectFields'
      type: object
    EditlabelofanexistingVMPayload:
      example:
        labels:
        - labels
        - labels
      properties:
        labels:
          items:
            type: string
          type: array
      type: object
    ContractInstancesResponse:
      example:
        instances:
        - flavor_name: flavor_name
          gpu_count: 6
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 0
          status: status
        - flavor_name: flavor_name
          gpu_count: 6
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 0
          status: status
        message: message
        status: true
      properties:
        status:
          type: boolean
        message:
          type: string
        instances:
          items:
            $ref: '#/components/schemas/ContractInstanceFields'
          type: array
      type: object
    ContractInstanceFields:
      example:
        flavor_name: flavor_name
        gpu_count: 6
        name: name
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 0
        status: status
      properties:
        id:
          type: integer
        name:
          type: string
        status:
          type: string
        created_at:
          format: date-time
          type: string
        flavor_name:
          type: string
        gpu_count:
          type: integer
      type: object
    AttachFirewallsToVMPayload:
      example:
        firewalls:
        - 0
        - 0
      properties:
        firewalls:
          items:
            type: integer
          type: array
      required:
      - firewalls
      type: object
    FlavorPayload:
      properties:
        name:
          type: string
        region_name:
          type: string
        cpu:
          type: integer
        ram:
          type: number
        disk:
          type: integer
        gpu:
          type: string
        gpu_count:
          type: integer
        is_public:
          type: boolean
      required:
      - cpu
      - disk
      - gpu
      - gpu_count
      - is_public
      - name
      - ram
      - region_name
      type: object
    FlavorResponse:
      properties:
        status:
          type: boolean
        message:
          type: string
        flavor:
          $ref: '#/components/schemas/FlavorFields'
      type: object
    FlavorFields:
      example:
        disk: 5
        gpu_count: 2
        name: name
        cpu: 6
        ephemeral: 5
        created_at: 2000-01-23T04:56:07.000+00:00
        region_name: region_name
        id: 0
        stock_available: true
        gpu: gpu
        ram: 1.4658129805029452
      properties:
        id:
          type: integer
        name:
          type: string
        region_name:
          type: string
        cpu:
          type: integer
        ram:
          type: number
        disk:
          type: integer
        ephemeral:
          type: integer
        gpu:
          type: string
        gpu_count:
          type: integer
        stock_available:
          type: boolean
        created_at:
          format: date-time
          type: string
      type: object
    FlavorListResponse:
      example:
        data:
        - flavors:
          - disk: 5
            gpu_count: 2
            name: name
            cpu: 6
            ephemeral: 5
            created_at: 2000-01-23T04:56:07.000+00:00
            region_name: region_name
            id: 0
            stock_available: true
            gpu: gpu
            ram: 1.4658129805029452
          - disk: 5
            gpu_count: 2
            name: name
            cpu: 6
            ephemeral: 5
            created_at: 2000-01-23T04:56:07.000+00:00
            region_name: region_name
            id: 0
            stock_available: true
            gpu: gpu
            ram: 1.4658129805029452
          region_name: region_name
          gpu: gpu
        - flavors:
          - disk: 5
            gpu_count: 2
            name: name
            cpu: 6
            ephemeral: 5
            created_at: 2000-01-23T04:56:07.000+00:00
            region_name: region_name
            id: 0
            stock_available: true
            gpu: gpu
            ram: 1.4658129805029452
          - disk: 5
            gpu_count: 2
            name: name
            cpu: 6
            ephemeral: 5
            created_at: 2000-01-23T04:56:07.000+00:00
            region_name: region_name
            id: 0
            stock_available: true
            gpu: gpu
            ram: 1.4658129805029452
          region_name: region_name
          gpu: gpu
        message: message
        status: true
      properties:
        status:
          type: boolean
        message:
          type: string
        data:
          items:
            $ref: '#/components/schemas/FlavorItemGetResponse'
          type: array
      type: object
    FlavorItemGetResponse:
      example:
        flavors:
        - disk: 5
          gpu_count: 2
          name: name
          cpu: 6
          ephemeral: 5
          created_at: 2000-01-23T04:56:07.000+00:00
          region_name: region_name
          id: 0
          stock_available: true
          gpu: gpu
          ram: 1.4658129805029452
        - disk: 5
          gpu_count: 2
          name: name
          cpu: 6
          ephemeral: 5
          created_at: 2000-01-23T04:56:07.000+00:00
          region_name: region_name
          id: 0
          stock_available: true
          gpu: gpu
          ram: 1.4658129805029452
        region_name: region_name
        gpu: gpu
      properties:
        gpu:
          type: string
        region_name:
          type: string
        flavors:
          items:
            $ref: '#/components/schemas/FlavorFields'
          type: array
      type: object
    Images:
      example:
        images:
        - images:
          - size: 6
            name: name
            display_size: display_size
            is_public: true
            description: description
            region_name: region_name
            id: 0
            type: type
            version: version
            labels:
            - id: 1
              label: label
            - id: 1
              label: label
          - size: 6
            name: name
            display_size: display_size
            is_public: true
            description: description
            region_name: region_name
            id: 0
            type: type
            version: version
            labels:
            - id: 1
              label: label
            - id: 1
              label: label
          logo: logo
          region_name: region_name
          type: type
        - images:
          - size: 6
            name: name
            display_size: display_size
            is_public: true
            description: description
            region_name: region_name
            id: 0
            type: type
            version: version
            labels:
            - id: 1
              label: label
            - id: 1
              label: label
          - size: 6
            name: name
            display_size: display_size
            is_public: true
            description: description
            region_name: region_name
            id: 0
            type: type
            version: version
            labels:
            - id: 1
              label: label
            - id: 1
              label: label
          logo: logo
          region_name: region_name
          type: type
        message: message
        status: true
      properties:
        status:
          type: boolean
        message:
          type: string
        images:
          items:
            $ref: '#/components/schemas/ImageGetResponse'
          type: array
      type: object
    ImageGetResponse:
      example:
        images:
        - size: 6
          name: name
          display_size: display_size
          is_public: true
          description: description
          region_name: region_name
          id: 0
          type: type
          version: version
          labels:
          - id: 1
            label: label
          - id: 1
            label: label
        - size: 6
          name: name
          display_size: display_size
          is_public: true
          description: description
          region_name: region_name
          id: 0
          type: type
          version: version
          labels:
          - id: 1
            label: label
          - id: 1
            label: label
        logo: logo
        region_name: region_name
        type: type
      properties:
        region_name:
          type: string
        type:
          type: string
        logo:
          type: string
        images:
          items:
            $ref: '#/components/schemas/ImageFields'
          type: array
      type: object
    ImageFields:
      example:
        size: 6
        name: name
        display_size: display_size
        is_public: true
        description: description
        region_name: region_name
        id: 0
        type: type
        version: version
        labels:
        - id: 1
          label: label
        - id: 1
          label: label
      properties:
        id:
          type: integer
        name:
          type: string
        region_name:
          type: string
        type:
          type: string
        version:
          type: string
        size:
          format: int64
          type: integer
        display_size:
          type: string
        description:
          type: string
        labels:
          items:
            $ref: '#/components/schemas/LableResonse'
          type: array
        is_public:
          type: boolean
      type: object
    LableResonse:
      example:
        id: 1
        label: label
      properties:
        id:
          type: integer
        label:
          type: string
      type: object
    ImageLogos:
      properties:
        status:
          type: boolean
        message:
          type: string
        logos:
          items:
            $ref: '#/components/schemas/LogoGetResponse'
          type: array
      type: object
    LogoGetResponse:
      properties:
        id:
          type: integer
        type:
          type: string
        url:
          type: string
      type: object
    ImportKeypairPayload:
      example:
        public_key: public_key
        name: name
        environment_name: environment_name
      properties:
        name:
          description: The name of the key pair that is being created.
          maxLength: 50
          type: string
        environment_name:
          description: The name of the environment where the key pair is being created.
          type: string
        public_key:
          description: The public key that is being used to import an SSH key pair.
          type: string
      required:
      - environment_name
      - name
      - public_key
      type: object
    ImportKeypairResponse:
      example:
        keypair:
          public_key: public_key
          environment: environment
          name: name
          fingerprint: fingerprint
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 0
        message: message
        status: true
      properties:
        status:
          type: boolean
        message:
          type: string
        keypair:
          $ref: '#/components/schemas/KeypairFields'
      type: object
    KeypairFields:
      example:
        public_key: public_key
        environment: environment
        name: name
        fingerprint: fingerprint
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 0
      properties:
        id:
          type: integer
        name:
          type: string
        environment:
          type: string
        public_key:
          type: string
        fingerprint:
          type: string
        created_at:
          format: date-time
          type: string
      type: object
    Keypairs:
      example:
        Keypairs:
        - public_key: public_key
          environment: environment
          name: name
          fingerprint: fingerprint
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 0
        - public_key: public_key
          environment: environment
          name: name
          fingerprint: fingerprint
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 0
        message: message
        status: true
      properties:
        status:
          type: boolean
        message:
          type: string
        Keypairs:
          items:
            $ref: '#/components/schemas/KeypairFields'
          type: array
      type: object
    UpdateKeypairName:
      example:
        name: name
      properties:
        name:
          description: The new key pair name.
          maxLength: 50
          type: string
      required:
      - name
      type: object
    UpdateKeypairnameresponse:
      example:
        keypair:
          public_key: public_key
          environment: environment
          name: name
          fingerprint: fingerprint
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 0
        message: message
        status: true
      properties:
        status:
          type: boolean
        message:
          type: string
        keypair:
          $ref: '#/components/schemas/KeypairFields'
      type: object
    RequestConsole:
      example:
        message: message
        url: url
        status: true
      properties:
        status:
          type: boolean
        message:
          type: string
        url:
          type: string
      type: object
    VNCURL:
      example:
        message: message
        status: true
        vnc_url:
          id: 0
          vnc_url: vnc_url
      properties:
        status:
          type: boolean
        message:
          type: string
        vnc_url:
          $ref: '#/components/schemas/VNCURLFields'
      type: object
    VNCURLFields:
      example:
        id: 0
        vnc_url: vnc_url
      properties:
        id:
          type: integer
        vnc_url:
          type: string
      type: object
    CreateVolumePayload:
      example:
        callback_url: callback_url
        volume_type: volume_type
        size: 0
        name: name
        description: description
        image_id: 6
        environment_name: environment_name
      properties:
        name:
          description: The name of the volume being created.
          maxLength: 50
          type: string
        environment_name:
          description: "The name of the [environment](https://infrahub-doc.nexgencloud.com/docs/features/environments-available-features)\
            \ within which the volume is being created."
          type: string
        description:
          description: A brief description or comment about the volume.
          type: string
        volume_type:
          description: "Specifies the type of volume being created, which determines\
            \ the storage technology it will use. Call the \"[List volume types](https://infrahub-api-doc.nexgencloud.com/#get-/core/volumes)\"\
            \ endpoint to retrieve a list of available volume model types."
          type: string
        size:
          description: The size of the volume in GB. 1048576GB storage capacity per
            volume.
          type: integer
        image_id:
          description: "The ID of the operating system image that will be associated\
            \ with the volume. By providing an `image_id` in the create volume request,\
            \ you will create a bootable volume."
          type: integer
        callback_url:
          description: A URL that can be attached to the volume you are creating.
            This `callback_url` will post any action events that occur to your volume
            to the provided URL.
          maxLength: 250
          type: string
      required:
      - description
      - environment_name
      - name
      - size
      - volume_type
      type: object
    Volume:
      example:
        volume:
          callback_url: callback_url
          environment:
            name: name
          volume_type: volume_type
          size: 6
          updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 0
          image_id: 1
          bootable: true
          status: status
        message: message
        status: true
      properties:
        status:
          type: boolean
        message:
          type: string
        volume:
          $ref: '#/components/schemas/VolumeFields'
      type: object
    VolumeFields:
      example:
        callback_url: callback_url
        environment:
          name: name
        volume_type: volume_type
        size: 6
        updated_at: 2000-01-23T04:56:07.000+00:00
        name: name
        description: description
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 0
        image_id: 1
        bootable: true
        status: status
      properties:
        id:
          type: integer
        name:
          type: string
        environment:
          $ref: '#/components/schemas/EnvironmentFieldsforVolume'
        description:
          type: string
        volume_type:
          type: string
        size:
          format: int64
          type: integer
        status:
          type: string
        bootable:
          type: boolean
        image_id:
          type: integer
        callback_url:
          type: string
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
      type: object
    EnvironmentFieldsforVolume:
      example:
        name: name
      properties:
        name:
          type: string
      type: object
    Volumes:
      example:
        volumes:
        - callback_url: callback_url
          environment:
            name: name
          volume_type: volume_type
          size: 6
          updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 0
          image_id: 1
          bootable: true
          status: status
        - callback_url: callback_url
          environment:
            name: name
          volume_type: volume_type
          size: 6
          updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 0
          image_id: 1
          bootable: true
          status: status
        message: message
        status: true
      properties:
        status:
          type: boolean
        message:
          type: string
        volumes:
          items:
            $ref: '#/components/schemas/VolumeFields'
          type: array
      type: object
    VolumeTypes:
      example:
        message: message
        status: true
        volume_types:
        - volume_types
        - volume_types
      properties:
        status:
          type: boolean
        message:
          type: string
        volume_types:
          items:
            type: string
          type: array
      type: object
    AttachVolumesPayload:
      example:
        volume_ids:
        - 0
        - 0
      properties:
        volume_ids:
          items:
            type: integer
          type: array
      type: object
    AttachVolumes:
      example:
        message: message
        volume_attachments:
        - instance_id: 6
          volume_id: 1
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 0
          status: status
        - instance_id: 6
          volume_id: 1
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 0
          status: status
        status: true
      properties:
        status:
          type: boolean
        message:
          type: string
        volume_attachments:
          items:
            $ref: '#/components/schemas/AttachVolumeFields'
          type: array
      type: object
    AttachVolumeFields:
      example:
        instance_id: 6
        volume_id: 1
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 0
        status: status
      properties:
        id:
          type: integer
        instance_id:
          type: integer
        volume_id:
          type: integer
        status:
          type: string
        created_at:
          format: date-time
          type: string
      type: object
    DetachVolumesPayload:
      example:
        volume_ids:
        - 0
        - 0
      properties:
        volume_ids:
          items:
            type: integer
          type: array
      type: object
    DetachVolumes:
      example:
        message: message
        volume_attachments:
        - instance_id: 6
          volume_id: 1
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 0
          status: status
        - instance_id: 6
          volume_id: 1
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 0
          status: status
        status: true
      properties:
        status:
          type: boolean
        message:
          type: string
        volume_attachments:
          items:
            $ref: '#/components/schemas/AttachVolumeFields'
          type: array
      type: object
    CreateGPU:
      properties:
        name:
          type: string
        regions:
          items:
            type: string
          type: array
        example_metadata:
          description: A valid JSON string.
          example: "{\"key\": \"value\"}"
          type: string
      required:
      - name
      type: object
    GPU:
      properties:
        status:
          type: boolean
        message:
          type: string
        gpu:
          $ref: '#/components/schemas/GPUFields'
      type: object
    GPUFields:
      example:
        regions:
        - name: name
          id: 6
        - name: name
          id: 6
        updated_at: 2000-01-23T04:56:07.000+00:00
        name: name
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 0
        example_metadata: example_metadata
      properties:
        id:
          type: integer
        name:
          type: string
        regions:
          items:
            $ref: '#/components/schemas/GPURegionFields'
          type: array
        example_metadata:
          type: string
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
      type: object
    GPURegionFields:
      example:
        name: name
        id: 6
      properties:
        id:
          type: integer
        name:
          type: string
      type: object
    GPUList:
      example:
        gpu_list:
        - regions:
          - name: name
            id: 6
          - name: name
            id: 6
          updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 0
          example_metadata: example_metadata
        - regions:
          - name: name
            id: 6
          - name: name
            id: 6
          updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 0
          example_metadata: example_metadata
        message: message
        status: true
      properties:
        status:
          type: boolean
        message:
          type: string
        gpu_list:
          items:
            $ref: '#/components/schemas/GPUFields'
          type: array
      type: object
    UpdateGPU:
      properties:
        name:
          type: string
        regions:
          items:
            type: string
          type: array
        example_metadata:
          description: A valid JSON string.
          example: "{\"key\": \"value\"}"
          type: string
      type: object
    AttachCallbackPayload:
      example:
        url: url
      properties:
        url:
          type: string
      required:
      - url
      type: object
    AttachCallbackResponse:
      example:
        message: message
        url: url
        status: true
      properties:
        status:
          type: boolean
        message:
          type: string
        url:
          type: string
      type: object
    InternalInstancesResponse:
      properties:
        status:
          type: boolean
        message:
          type: string
        instances:
          items:
            $ref: '#/components/schemas/InternalInstanceFields'
          type: array
      type: object
    InternalInstanceFields:
      properties:
        id:
          type: integer
        name:
          type: string
        openstack_id:
          type: string
        status:
          type: string
        environment:
          $ref: '#/components/schemas/InternalEnvironmentFields'
        image:
          $ref: '#/components/schemas/InternalInstanceImageFields'
        flavor:
          $ref: '#/components/schemas/InternalInstanceFlavorFields'
        keypair:
          $ref: '#/components/schemas/InternalInstanceKeypairFields'
        volume_attachments:
          items:
            $ref: '#/components/schemas/InternalVolumeAttachmentFields'
          type: array
        boot_source:
          type: string
        power_state:
          type: string
        vm_state:
          type: string
        fixed_ip:
          type: string
        floating_ip:
          type: string
        floating_ip_status:
          type: string
        user_data:
          type: string
        security_rules:
          items:
            $ref: '#/components/schemas/InternalSecurityRulesFieldsForInstance'
          type: array
        callback_url:
          type: string
        created_at:
          format: date-time
          type: string
      type: object
    InternalEnvironmentFields:
      properties:
        id:
          type: integer
        name:
          type: string
        region:
          type: string
        created_at:
          format: date-time
          type: string
      type: object
    InternalInstanceImageFields:
      properties:
        id:
          type: integer
        name:
          type: string
        region_name:
          type: string
        type:
          type: string
        version:
          type: string
      type: object
    InternalInstanceFlavorFields:
      properties:
        id:
          type: integer
        name:
          type: string
        region_name:
          type: string
        cpu:
          type: integer
        ram:
          type: integer
        disk:
          type: integer
        gpu:
          type: string
        gpu_count:
          type: integer
        created_at:
          format: date-time
          type: string
      type: object
    InternalInstanceKeypairFields:
      properties:
        id:
          type: integer
        name:
          type: string
        environment:
          type: string
        public_key:
          type: string
        fingerprint:
          type: string
        created_at:
          format: date-time
          type: string
      type: object
    InternalVolumeAttachmentFields:
      properties:
        volume:
          $ref: '#/components/schemas/InternalVolumeFields'
        status:
          type: string
        device:
          type: string
        created_at:
          format: date-time
          type: string
      type: object
    InternalVolumeFields:
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        volume_type:
          type: string
        size:
          type: string
      type: object
    InternalSecurityRulesFieldsForInstance:
      properties:
        id:
          type: integer
        direction:
          type: string
        protocol:
          type: string
        port_range_min:
          type: integer
        port_range_max:
          type: integer
        ethertype:
          type: string
        remote_ip_prefix:
          type: string
        status:
          type: string
        created_at:
          format: date-time
          type: string
      type: object
    InternalVolumesResponse:
      properties:
        status:
          type: boolean
        message:
          type: string
        volumes:
          items:
            $ref: '#/components/schemas/InternalVolumeFields'
          type: array
      type: object
    RegionPayload:
      properties:
        name:
          type: string
        description:
          type: string
      required:
      - name
      type: object
    RegionResponse:
      properties:
        status:
          type: boolean
        message:
          type: string
        region:
          $ref: '#/components/schemas/RegionFields'
      type: object
    RegionFields:
      example:
        name: name
        description: description
        id: 0
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
      type: object
    Regions:
      example:
        regions:
        - name: name
          description: description
          id: 0
        - name: name
          description: description
          id: 0
        message: message
        status: true
      properties:
        status:
          type: boolean
        message:
          type: string
        regions:
          items:
            $ref: '#/components/schemas/RegionFields'
          type: array
      type: object
    Template:
      example:
        template:
          name: name
          is_public: true
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 0
          content: content
        message: message
        status: true
      properties:
        status:
          type: boolean
        message:
          type: string
        template:
          $ref: '#/components/schemas/TemplateFields'
      type: object
    TemplateFields:
      example:
        name: name
        is_public: true
        description: description
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 0
        content: content
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        content:
          type: string
        is_public:
          type: boolean
        created_at:
          format: date-time
          type: string
      type: object
    Templates:
      example:
        templates:
        - name: name
          is_public: true
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 0
          content: content
        - name: name
          is_public: true
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 0
          content: content
        message: message
        status: true
      properties:
        status:
          type: boolean
        message:
          type: string
        templates:
          items:
            $ref: '#/components/schemas/TemplateFields'
          type: array
      type: object
    UpdateTemplate:
      example:
        name: name
        is_public: true
        description: description
      properties:
        name:
          type: string
        description:
          type: string
        is_public:
          type: boolean
      type: object
    StartDeploymentPayload:
      example:
        variables:
          key: variables
        name: name
        description: description
        template_id: 0
      properties:
        name:
          type: string
        description:
          type: string
        template_id:
          type: integer
        variables:
          additionalProperties:
            type: string
          type: object
      required:
      - description
      - name
      - template_id
      type: object
    StartDeployment:
      example:
        message: message
        status: true
        deployment:
          template: template
          variables: variables
          name: name
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 0
          status: status
      properties:
        status:
          type: boolean
        message:
          type: string
        deployment:
          $ref: '#/components/schemas/DeploymentFieldsforstartdeployments'
      type: object
    DeploymentFieldsforstartdeployments:
      example:
        template: template
        variables: variables
        name: name
        description: description
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 0
        status: status
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        template:
          type: string
        status:
          type: string
        variables:
          type: string
        created_at:
          format: date-time
          type: string
      type: object
    Deployments:
      example:
        deployments:
        - template: template
          name: name
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 0
          status: status
        - template: template
          name: name
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 0
          status: status
        message: message
        status: true
      properties:
        status:
          type: boolean
        message:
          type: string
        deployments:
          items:
            $ref: '#/components/schemas/DeploymentFields'
          type: array
      type: object
    DeploymentFields:
      example:
        template: template
        name: name
        description: description
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 0
        status: status
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        template:
          type: string
        status:
          type: string
        created_at:
          format: date-time
          type: string
      type: object
    SecurityRulesProtocolFields:
      example:
        message: message
        protocols:
        - protocols
        - protocols
        status: true
      properties:
        status:
          type: boolean
        message:
          type: string
        protocols:
          items:
            type: string
          type: array
      type: object
    CreateProfilePayload:
      example:
        data:
          key: data
        name: name
        description: description
      properties:
        name:
          description: The name of the profile being created.
          maxLength: 50
          type: string
        description:
          description: The optional description for the profile being created.
          maxLength: 150
          type: string
        data:
          additionalProperties:
            type: string
          description: The data object which contains the configuration of the virtual
            machine profile being created.
          type: object
      required:
      - data
      - name
      type: object
    CreateProfileResponse:
      example:
        profile:
          data: data
          name: name
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 0
        message: message
        status: true
      properties:
        status:
          type: boolean
        message:
          type: string
        profile:
          $ref: '#/components/schemas/ProfileFields'
      type: object
    ProfileFields:
      example:
        data: data
        name: name
        description: description
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 0
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        data:
          type: string
        created_at:
          format: date-time
          type: string
      type: object
    ProfileListResponse:
      example:
        profiles:
        - data: data
          name: name
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 0
        - data: data
          name: name
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 0
        message: message
        status: true
      properties:
        status:
          type: boolean
        message:
          type: string
        profiles:
          items:
            $ref: '#/components/schemas/ProfileFields'
          type: array
      type: object
    InstanceAdmin:
      properties:
        status:
          type: boolean
        message:
          type: string
        instance:
          $ref: '#/components/schemas/InstanceAdminFields'
      type: object
    InstanceAdminFields:
      properties:
        id:
          type: integer
        name:
          type: string
        status:
          type: string
        environment:
          $ref: '#/components/schemas/InstanceEnvironmentFields'
        image:
          $ref: '#/components/schemas/InstanceImageFields'
        flavor:
          $ref: '#/components/schemas/InstanceFlavorFields'
        os:
          type: string
        keypair:
          $ref: '#/components/schemas/InstanceKeypairFields'
        volume_attachments:
          items:
            $ref: '#/components/schemas/VolumeAttachmentFields'
          type: array
        security_rules:
          items:
            $ref: '#/components/schemas/SecurityRulesFieldsforInstance'
          type: array
        power_state:
          type: string
        vm_state:
          type: string
        fixed_ip:
          type: string
        floating_ip:
          type: string
        floating_ip_status:
          type: string
        locked:
          type: boolean
        contract_id:
          type: integer
        created_at:
          format: date-time
          type: string
        labels:
          items:
            type: string
          type: array
        openstack_id:
          type: string
        host:
          type: string
      type: object
    InstancesAdmin:
      properties:
        status:
          type: boolean
        message:
          type: string
        instances:
          items:
            $ref: '#/components/schemas/InstanceAdminFields'
          type: array
        instance_count:
          type: integer
      type: object
    AdminOrganizationResourceList:
      properties:
        status:
          type: boolean
        message:
          type: string
        organizations:
          items:
            $ref: '#/components/schemas/AdminOrganizationResources'
          type: array
      type: object
    AdminOrganizationResources:
      properties:
        organization_id:
          type: integer
        environments:
          items:
            $ref: '#/components/schemas/AdminEnvrionmentResources'
          type: array
      type: object
    AdminEnvrionmentResources:
      properties:
        id:
          type: integer
        name:
          type: string
        region:
          type: string
        instances:
          items:
            $ref: '#/components/schemas/AdminInstanceResources'
          type: array
        volumes:
          items:
            $ref: '#/components/schemas/AdminVolumeResource'
          type: array
        containers:
          items:
            $ref: '#/components/schemas/AdminContainerResource'
          type: array
        clusters:
          items:
            $ref: '#/components/schemas/AdminClusterResource'
          type: array
        created_at:
          format: date-time
          type: string
      type: object
    AdminInstanceResources:
      properties:
        id:
          type: integer
        name:
          type: string
        openstack_id:
          type: string
        host:
          type: string
        status:
          type: string
        flavor:
          $ref: '#/components/schemas/AdminFlavorResource'
        image_id:
          type: integer
        volume_id:
          type: integer
        keypair_name:
          type: string
        fixed_ip:
          type: string
        floating_ip:
          type: string
        contract_id:
          type: integer
        floating_ip_status:
          type: string
        created_at:
          format: date-time
          type: string
      type: object
    AdminFlavorResource:
      properties:
        id:
          type: integer
        openstack_id:
          type: string
        name:
          type: string
        region_name:
          type: string
        cpu:
          type: integer
        ram:
          type: number
        disk:
          type: integer
        gpu:
          type: string
        status:
          type: string
        gpu_count:
          type: integer
        stock_available:
          type: boolean
        nodes:
          items:
            $ref: '#/components/schemas/AdminNodeResource'
          type: array
        vms:
          items:
            type: integer
          type: array
        is_public:
          type: boolean
        is_custom:
          type: boolean
        ephemeral:
          type: integer
        description:
          type: string
        created_at:
          format: date-time
          type: string
      type: object
    AdminNodeResource:
      properties:
        id:
          type: integer
        openstack_id:
          type: string
        name:
          type: string
        available:
          type: integer
        status:
          type: string
        provision_date:
          format: date-time
          type: string
        organizations:
          items:
            type: integer
          type: array
      type: object
    AdminVolumeResource:
      properties:
        id:
          type: integer
        name:
          type: string
        openstack_id:
          type: string
        type:
          type: string
        size:
          type: integer
        status:
          type: string
        bootable:
          type: boolean
        created_at:
          format: date-time
          type: string
      type: object
    AdminContainerResource:
      properties:
        id:
          type: integer
        name:
          type: string
        flavor:
          $ref: '#/components/schemas/AdminFlavorResource'
        status:
          type: string
        image:
          type: string
        fixed_ip:
          type: string
        floating_ip:
          type: string
        created_at:
          format: date-time
          type: string
      type: object
    AdminClusterResource:
      properties:
        id:
          type: integer
        name:
          type: string
        kubernetes_version:
          type: string
        status:
          type: string
        master_count:
          type: integer
        node_count:
          type: integer
        node_flavor:
          $ref: '#/components/schemas/AdminFlavorResource'
        enable_public_ip:
          type: boolean
        created_at:
          format: date-time
          type: string
      type: object
    AdminOrganizationResourceResponse:
      properties:
        status:
          type: boolean
        message:
          type: string
        organization:
          $ref: '#/components/schemas/AdminOrganizationResources'
      type: object
    AdminGetVersionResponse:
      properties:
        status:
          type: boolean
        message:
          type: string
        version:
          type: string
      type: object
    AdminCountResourcesOrganizations:
      properties:
        resources:
          items:
            $ref: '#/components/schemas/AdminCountResourcesOrganization'
          type: array
      type: object
    AdminCountResourcesOrganization:
      properties:
        organization_id:
          type: integer
        total_instances:
          type: integer
        total_volumes:
          type: integer
        total_containers:
          type: integer
        total_clusters:
          type: integer
      type: object
    InstancesSummaryAdmin:
      properties:
        status:
          type: boolean
        message:
          type: string
        instances:
          items:
            $ref: '#/components/schemas/InstancesSummaryFields'
          type: array
      type: object
    InstancesSummaryFields:
      properties:
        id:
          type: integer
        name:
          type: string
        environment:
          type: string
        org_id:
          type: integer
        environment_id:
          type: integer
        image:
          type: string
        image_id:
          type: integer
        flavor:
          type: string
        flavor_id:
          type: integer
        keypair:
          type: string
        keypair_id:
          type: integer
        fixed_ip:
          type: string
        floating_ip:
          type: string
        floating_ip_status:
          type: string
        status:
          type: string
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
      type: object
    CompliancePayload:
      example:
        gpu_model: gpu_model
        base_value: 0
        variation_min: 6
        variation_unit: 5
        resource_type: resource_type
        variation_max: 1
      properties:
        gpu_model:
          type: string
        resource_type:
          type: string
        base_value:
          type: integer
        variation_min:
          type: integer
        variation_max:
          type: integer
        variation_unit:
          type: integer
      required:
      - base_value
      - gpu_model
      - resource_type
      - variation_max
      - variation_min
      - variation_unit
      type: object
    CreateUpdateComplianceResponse:
      example:
        compliance:
          gpu_model: gpu_model
          base_value: 6
          variation_min: 1
          variation_unit: 5
          resource_type: resource_type
          id: 0
          variation_max: 5
        message: message
        status: true
      properties:
        status:
          type: boolean
        message:
          type: string
        compliance:
          $ref: '#/components/schemas/ComplianceModelFields'
      type: object
    ComplianceModelFields:
      example:
        gpu_model: gpu_model
        base_value: 6
        variation_min: 1
        variation_unit: 5
        resource_type: resource_type
        id: 0
        variation_max: 5
      properties:
        id:
          type: integer
        gpu_model:
          type: string
        resource_type:
          type: string
        base_value:
          type: integer
        variation_min:
          type: integer
        variation_max:
          type: integer
        variation_unit:
          type: integer
      type: object
    ComplianceResponse:
      example:
        compliance:
          gpu_model: gpu_model
          cpu:
          - 0
          - 0
          hdd:
          - 1
          - 1
          ram:
          - 6
          - 6
        message: message
        status: true
      properties:
        status:
          type: boolean
        message:
          type: string
        compliance:
          $ref: '#/components/schemas/ComplianceFields'
      type: object
    ComplianceFields:
      example:
        gpu_model: gpu_model
        cpu:
        - 0
        - 0
        hdd:
        - 1
        - 1
        ram:
        - 6
        - 6
      properties:
        gpu_model:
          type: string
        cpu:
          items:
            type: integer
          type: array
        ram:
          items:
            type: integer
          type: array
        hdd:
          items:
            type: integer
          type: array
      type: object
    CreateFirewallPayload:
      example:
        environment_id: 0
        name: name
        description: description
      properties:
        name:
          type: string
        description:
          type: string
        environment_id:
          type: integer
      required:
      - environment_id
      - name
      type: object
    FirewallResponse:
      example:
        firewall:
          environment:
            name: name
            id: 6
            region: region
          name: name
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 0
          status: status
        message: message
        status: true
      properties:
        status:
          type: boolean
        message:
          type: string
        firewall:
          $ref: '#/components/schemas/FirewallFields'
      type: object
    FirewallFields:
      example:
        environment:
          name: name
          id: 6
          region: region
        name: name
        description: description
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 0
        status: status
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        environment:
          $ref: '#/components/schemas/FirewallEnvironmentFields'
        status:
          type: string
        created_at:
          format: date-time
          type: string
      type: object
    FirewallEnvironmentFields:
      example:
        name: name
        id: 6
        region: region
      properties:
        id:
          type: integer
        name:
          type: string
        region:
          type: string
      type: object
    FirewallsListResponse:
      example:
        firewalls:
        - environment:
            name: name
            id: 6
            region: region
          attachments:
          - vm:
              flavor: flavor
              environment: environment
              name: name
              created_at: 2000-01-23T04:56:07.000+00:00
              id: 7
              status: status
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 2
            status: status
          - vm:
              flavor: flavor
              environment: environment
              name: name
              created_at: 2000-01-23T04:56:07.000+00:00
              id: 7
              status: status
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 2
            status: status
          name: name
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          rules:
          - protocol: protocol
            ethertype: ethertype
            port_range_max: 5
            remote_ip_prefix: remote_ip_prefix
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 1
            direction: direction
            port_range_min: 5
            status: status
          - protocol: protocol
            ethertype: ethertype
            port_range_max: 5
            remote_ip_prefix: remote_ip_prefix
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 1
            direction: direction
            port_range_min: 5
            status: status
          id: 0
          status: status
        - environment:
            name: name
            id: 6
            region: region
          attachments:
          - vm:
              flavor: flavor
              environment: environment
              name: name
              created_at: 2000-01-23T04:56:07.000+00:00
              id: 7
              status: status
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 2
            status: status
          - vm:
              flavor: flavor
              environment: environment
              name: name
              created_at: 2000-01-23T04:56:07.000+00:00
              id: 7
              status: status
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 2
            status: status
          name: name
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          rules:
          - protocol: protocol
            ethertype: ethertype
            port_range_max: 5
            remote_ip_prefix: remote_ip_prefix
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 1
            direction: direction
            port_range_min: 5
            status: status
          - protocol: protocol
            ethertype: ethertype
            port_range_max: 5
            remote_ip_prefix: remote_ip_prefix
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 1
            direction: direction
            port_range_min: 5
            status: status
          id: 0
          status: status
        message: message
        status: true
      properties:
        status:
          type: boolean
        message:
          type: string
        firewalls:
          items:
            $ref: '#/components/schemas/FirewallDetailFields'
          type: array
      type: object
    FirewallDetailFields:
      example:
        environment:
          name: name
          id: 6
          region: region
        attachments:
        - vm:
            flavor: flavor
            environment: environment
            name: name
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 7
            status: status
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 2
          status: status
        - vm:
            flavor: flavor
            environment: environment
            name: name
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 7
            status: status
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 2
          status: status
        name: name
        description: description
        created_at: 2000-01-23T04:56:07.000+00:00
        rules:
        - protocol: protocol
          ethertype: ethertype
          port_range_max: 5
          remote_ip_prefix: remote_ip_prefix
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 1
          direction: direction
          port_range_min: 5
          status: status
        - protocol: protocol
          ethertype: ethertype
          port_range_max: 5
          remote_ip_prefix: remote_ip_prefix
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 1
          direction: direction
          port_range_min: 5
          status: status
        id: 0
        status: status
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        environment:
          $ref: '#/components/schemas/FirewallEnvironmentFields'
        status:
          type: string
        created_at:
          format: date-time
          type: string
        rules:
          items:
            $ref: '#/components/schemas/SecurityGroupRuleFields'
          type: array
        attachments:
          items:
            $ref: '#/components/schemas/FirewallAttachmentModel'
          type: array
      type: object
    FirewallAttachmentModel:
      example:
        vm:
          flavor: flavor
          environment: environment
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 7
          status: status
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 2
        status: status
      properties:
        id:
          type: integer
        status:
          type: string
        vm:
          $ref: '#/components/schemas/FirewallAttachmentVMModel'
        created_at:
          format: date-time
          type: string
      type: object
    FirewallAttachmentVMModel:
      example:
        flavor: flavor
        environment: environment
        name: name
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 7
        status: status
      properties:
        id:
          type: integer
        name:
          type: string
        flavor:
          type: string
        environment:
          type: string
        status:
          type: string
        created_at:
          format: date-time
          type: string
      type: object
    CreateFirewallRulePayload:
      example:
        protocol: protocol
        ethertype: ethertype
        port_range_max: 6
        remote_ip_prefix: remote_ip_prefix
        direction: direction
        port_range_min: 0
      properties:
        direction:
          type: string
        protocol:
          type: string
        port_range_min:
          type: integer
        port_range_max:
          type: integer
        ethertype:
          type: string
        remote_ip_prefix:
          type: string
      required:
      - direction
      - ethertype
      - protocol
      - remote_ip_prefix
      type: object
    FirewallRule:
      example:
        firewall_rule:
          protocol: protocol
          ethertype: ethertype
          port_range_max: 5
          remote_ip_prefix: remote_ip_prefix
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 1
          direction: direction
          port_range_min: 5
          status: status
        message: message
        status: true
      properties:
        status:
          type: boolean
        message:
          type: string
        firewall_rule:
          $ref: '#/components/schemas/SecurityGroupRuleFields'
      type: object
    FirewallDetailResponse:
      example:
        firewall:
          environment:
            name: name
            id: 6
            region: region
          attachments:
          - vm:
              flavor: flavor
              environment: environment
              name: name
              created_at: 2000-01-23T04:56:07.000+00:00
              id: 7
              status: status
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 2
            status: status
          - vm:
              flavor: flavor
              environment: environment
              name: name
              created_at: 2000-01-23T04:56:07.000+00:00
              id: 7
              status: status
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 2
            status: status
          name: name
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          rules:
          - protocol: protocol
            ethertype: ethertype
            port_range_max: 5
            remote_ip_prefix: remote_ip_prefix
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 1
            direction: direction
            port_range_min: 5
            status: status
          - protocol: protocol
            ethertype: ethertype
            port_range_max: 5
            remote_ip_prefix: remote_ip_prefix
            created_at: 2000-01-23T04:56:07.000+00:00
            id: 1
            direction: direction
            port_range_min: 5
            status: status
          id: 0
          status: status
        message: message
        status: true
      properties:
        status:
          type: boolean
        message:
          type: string
        firewall:
          $ref: '#/components/schemas/FirewallDetailFields'
      type: object
    AttachFirewallWithVM:
      example:
        vms:
        - 0
        - 0
      properties:
        vms:
          items:
            type: integer
          type: array
      required:
      - vms
      type: object
    SetDefaultsPayload:
      properties:
        flavors:
          items:
            type: integer
          type: array
        images:
          items:
            type: integer
          type: array
      required:
      - flavors
      - images
      type: object
    UserDefaultChoicesForAdminResponse:
      properties:
        status:
          type: boolean
        message:
          type: string
        user_default_choices:
          items:
            $ref: '#/components/schemas/UserDefaultChoiceForAdminFields'
          type: array
      type: object
    UserDefaultChoiceForAdminFields:
      properties:
        id:
          type: integer
        region_name:
          type: string
        flavor_id:
          type: integer
        image_id:
          type: integer
      type: object
    UserDefaultChoicesForUserResponse:
      example:
        user_default_choices:
        - flavor_id: 5
          environment_id: 6
          region_id: 0
          keypair_id: 1
          image_id: 5
        - flavor_id: 5
          environment_id: 6
          region_id: 0
          keypair_id: 1
          image_id: 5
        message: message
        status: true
      properties:
        status:
          type: boolean
        message:
          type: string
        user_default_choices:
          items:
            $ref: '#/components/schemas/UserDefaultChoiceForUserFields'
          type: array
      type: object
    UserDefaultChoiceForUserFields:
      example:
        flavor_id: 5
        environment_id: 6
        region_id: 0
        keypair_id: 1
        image_id: 5
      properties:
        region_id:
          type: integer
        environment_id:
          type: integer
        keypair_id:
          type: integer
        flavor_id:
          type: integer
        image_id:
          type: integer
      type: object
    AdminAddUpdateImageOrganizationPayload:
      properties:
        name:
          type: string
        openstack_id:
          type: string
        region_id:
          type: integer
        type:
          type: string
        version:
          type: string
        size:
          type: integer
        is_public:
          type: boolean
        description:
          type: string
        labels:
          items:
            type: string
          type: array
        organizations:
          items:
            type: integer
          type: array
      required:
      - is_public
      - name
      - openstack_id
      - organizations
      - region_id
      - size
      - type
      - version
      type: object
    AdminImageAdminResponse:
      properties:
        status:
          type: boolean
        message:
          type: string
        image:
          $ref: '#/components/schemas/AdminImageAdminResponseImage'
      type: object
    AdminImageAdminResponseImage:
      properties:
        id:
          type: integer
        name:
          type: string
        openstack_id:
          type: string
        region_id:
          type: integer
        region_name:
          type: string
        type:
          type: string
        version:
          type: string
        size:
          type: integer
        is_public:
          type: boolean
        description:
          type: string
        labels:
          items:
            $ref: '#/components/schemas/LableResonse'
          type: array
        created_at:
          format: date-time
          type: string
        organizations:
          items:
            type: integer
          type: array
      required:
      - organizations
      type: object
    AdminImageListAdminResponse:
      properties:
        status:
          type: boolean
        message:
          type: string
        data:
          items:
            $ref: '#/components/schemas/AdminImageAdminFields'
          type: array
      type: object
    AdminImageAdminFields:
      properties:
        id:
          type: integer
        name:
          type: string
        openstack_id:
          type: string
        region_id:
          type: integer
        region_name:
          type: string
        type:
          type: string
        version:
          type: string
        size:
          type: integer
        is_public:
          type: boolean
        description:
          type: string
        labels:
          items:
            $ref: '#/components/schemas/LableResonse'
          type: array
        created_at:
          format: date-time
          type: string
      type: object
    AddUpdateFlavorOrganizationPayload:
      properties:
        name:
          type: string
        description:
          type: string
        openstack_id:
          type: string
        region_id:
          type: integer
        cpu:
          type: integer
        ram:
          type: number
        disk:
          type: integer
        ephemeral:
          type: integer
        gpu_id:
          type: integer
        gpu_count:
          type: integer
        is_public:
          type: boolean
        organizations:
          items:
            type: integer
          type: array
      required:
      - cpu
      - disk
      - gpu_count
      - gpu_id
      - is_public
      - name
      - openstack_id
      - organizations
      - ram
      - region_id
      type: object
    FlavorAdminResponse:
      properties:
        status:
          type: boolean
        message:
          type: string
        flavor:
          $ref: '#/components/schemas/FlavorAdminResponseFlavors'
      type: object
    FlavorAdminResponseFlavors:
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        openstack_id:
          type: string
        region_id:
          type: integer
        region:
          type: string
        cpu:
          type: integer
        ram:
          type: number
        disk:
          type: integer
        ephemeral:
          type: integer
        gpu:
          type: string
        gpu_count:
          type: integer
        order:
          type: integer
        is_public:
          type: boolean
        is_custom:
          type: boolean
        status:
          type: string
        organizations:
          items:
            type: integer
          type: array
        flavors:
          items:
            type: string
          type: array
        projects:
          items:
            type: string
          type: array
        created_at:
          format: date-time
          type: string
      required:
      - organizations
      type: object
    AdminFlavorResourcesList:
      properties:
        status:
          type: boolean
        message:
          type: string
        flavors:
          items:
            $ref: '#/components/schemas/AdminFlavorResource'
          type: array
      type: object
    FlavorDetailResponse:
      properties:
        status:
          type: boolean
        message:
          type: string
        flavor:
          $ref: '#/components/schemas/AdminFlavorDetailFields'
      type: object
    AdminFlavorDetailFields:
      properties:
        id:
          type: integer
        openstack_id:
          type: string
        name:
          type: string
        region_name:
          type: string
        cpu:
          type: integer
        ram:
          type: number
        disk:
          type: integer
        gpu:
          type: string
        status:
          type: string
        gpu_count:
          type: integer
        stock_available:
          type: boolean
        nodes:
          items:
            $ref: '#/components/schemas/AdminFlavorDetailNodeFields'
          type: array
        vms:
          items:
            type: integer
          type: array
        is_public:
          type: boolean
        is_custom:
          type: boolean
        org_ids:
          items:
            type: integer
          type: array
        ephemeral:
          type: integer
        description:
          type: string
        created_at:
          format: date-time
          type: string
      type: object
    AdminFlavorDetailNodeFields:
      properties:
        id:
          type: integer
        openstack_id:
          type: string
        name:
          type: string
        available:
          type: integer
        status:
          type: string
        provision_date:
          format: date-time
          type: string
        projects:
          items:
            type: string
          type: array
      type: object
    FlavorVMsResponse:
      properties:
        status:
          type: boolean
        message:
          type: string
        flavor_vms:
          items:
            $ref: '#/components/schemas/FlavorVMFields'
          type: array
      type: object
    FlavorVMFields:
      properties:
        id:
          type: integer
        openstack_id:
          type: string
        name:
          type: string
        host:
          type: string
        org_id:
          type: integer
        status:
          type: string
        created_at:
          format: date-time
          type: string
      type: object
    AdminBootstrapEnvironmentPayload:
      properties:
        org_id:
          type: integer
      required:
      - org_id
      type: object
    PricebookModel:
      example:
        start_time: 2000-01-23T04:56:07.000+00:00
        original_value: 1.4658129805029452
        discount_applied: true
        name: name
        end_time: 2000-01-23T04:56:07.000+00:00
        id: 0
        value: 6.027456183070403
      properties:
        id:
          type: integer
        name:
          type: string
        value:
          type: number
        original_value:
          type: number
        discount_applied:
          type: boolean
        start_time:
          format: date-time
          type: string
        end_time:
          format: date-time
          type: string
      type: object
    CreateDiscountsPayload:
      properties:
        customers:
          items:
            $ref: '#/components/schemas/CustomerPayload'
          type: array
        discount_resources:
          items:
            $ref: '#/components/schemas/ResourcePayload'
          type: array
        start_date:
          format: date-time
          type: string
        end_date:
          format: date-time
          type: string
        discount_status:
          type: string
      required:
      - customers
      - discount_resources
      - discount_status
      type: object
    CustomerPayload:
      properties:
        id:
          type: integer
        plan_type:
          type: string
      required:
      - id
      - plan_type
      type: object
    ResourcePayload:
      properties:
        resource_id:
          type: integer
        discount_percent:
          type: number
        discount_type:
          type: string
        discount_amount:
          type: number
        resource_count:
          type: integer
      required:
      - discount_type
      - resource_id
      type: object
    GetAllDiscountForAllOrganizationResponse:
      properties:
        status:
          type: boolean
        message:
          type: string
        discount_plans:
          items:
            $ref: '#/components/schemas/GetAllDiscountsFields'
          type: array
      type: object
    GetAllDiscountsFields:
      properties:
        org_id:
          type: integer
        org_name:
          type: string
        start_date:
          format: date-time
          type: string
        end_date:
          format: date-time
          type: string
        discount_status:
          type: string
        discount_resources:
          items:
            $ref: '#/components/schemas/DiscountResourceFields'
          type: array
      type: object
    DiscountResourceFields:
      properties:
        resource_id:
          type: integer
        discount_percent:
          type: number
      type: object
    CreateDiscountResponse:
      properties:
        status:
          type: boolean
        message:
          type: string
        discount_plan:
          $ref: '#/components/schemas/InsertDiscountPlanFields'
      type: object
    InsertDiscountPlanFields:
      properties:
        customers:
          items:
            $ref: '#/components/schemas/CustomerFields'
          type: array
        discount_resources:
          items:
            $ref: '#/components/schemas/DiscountResourceFields'
          type: array
        start_date:
          format: date-time
          type: string
        end_date:
          format: date-time
          type: string
        discount_status:
          type: string
      type: object
    CustomerFields:
      properties:
        id:
          type: integer
        plan_type:
          type: string
      type: object
    UpdateDiscountsPayload:
      properties:
        discount_resources:
          items:
            $ref: '#/components/schemas/ResourcePayload'
          type: array
        start_date:
          format: date-time
          type: string
        end_date:
          format: date-time
          type: string
        discount_status:
          type: string
      required:
      - discount_resources
      - discount_status
      type: object
    GetEntityDiscountDetailResponse:
      properties:
        status:
          type: boolean
        message:
          type: string
        organization:
          items:
            $ref: '#/components/schemas/DiscountPlanFields'
          type: array
        virtual-machine:
          items:
            $ref: '#/components/schemas/DiscountPlanFields'
          type: array
      type: object
    DiscountPlanFields:
      example:
        discount_status: discount_status
        discount_code: discount_code
        discount_amount: 9.301444243932576
        resource_id: 5
        id: 5
        resource_name: resource_name
        discount_type: discount_type
        discount_percent: 7.061401241503109
        resource_count: 2
      properties:
        id:
          type: integer
        resource_id:
          type: integer
        resource_name:
          type: string
        resource_count:
          type: integer
        discount_type:
          type: string
        discount_code:
          type: string
        discount_percent:
          type: number
        discount_amount:
          type: number
        discount_status:
          type: string
      type: object
    SuccessResponseModel:
      properties:
        status:
          default: false
          type: boolean
        message:
          type: string
      type: object
    UpdateDiscountsStatusPayload:
      properties:
        discount_status:
          type: string
      required:
      - discount_status
      type: object
    GetDiscountResponse:
      properties:
        status:
          type: boolean
        message:
          type: string
        discount_entites:
          items:
            $ref: '#/components/schemas/DiscountFields'
          type: array
      type: object
    DiscountFields:
      properties:
        org_id:
          type: integer
        org_name:
          type: string
        plan_type:
          type: string
        vm_id:
          type: integer
        vm_name:
          type: string
        end_date:
          format: date-time
          type: string
        discount_status:
          type: string
      type: object
    GetDiscountDetailResponse:
      properties:
        status:
          type: boolean
        message:
          type: string
        discounts_entity:
          $ref: '#/components/schemas/DiscountEntityModel'
      type: object
    DiscountEntityModel:
      properties:
        entity:
          type: string
        data:
          items:
            $ref: '#/components/schemas/DiscountPlanFields'
          type: array
      type: object
    BillingResponse:
      properties:
        type:
          type: string
        calculated_bills:
          items:
            $ref: '#/components/schemas/OrganizationObjectResponse'
          type: array
      type: object
    OrganizationObjectResponse:
      properties:
        org_id:
          type: integer
        resources:
          items:
            $ref: '#/components/schemas/InfrahubResourceObjectResponse'
          type: array
      type: object
    InfrahubResourceObjectResponse:
      properties:
        type:
          type: string
        name:
          type: string
        infrahub_id:
          type: integer
        status:
          type: string
        host:
          type: string
        resources:
          items:
            $ref: '#/components/schemas/PricebookResourceObjectResponse'
          type: array
        price:
          type: number
        actual_price:
          type: number
        host_price:
          type: number
        actual_host_price:
          type: number
        nexgen_price:
          type: number
        nexgen_actual_price:
          type: number
      type: object
    PricebookResourceObjectResponse:
      properties:
        type:
          type: string
        name:
          type: string
        amount:
          type: integer
        rate:
          type: number
        discounted_rate:
          type: number
        price:
          type: number
        actual_price:
          type: number
        host_price:
          type: number
        host_original_price:
          type: number
        nexgen_price:
          type: number
        nexgen_original_price:
          type: number
      type: object
    GetVersionResponse:
      properties:
        status:
          type: boolean
        message:
          type: string
        version:
          type: string
      type: object
    CreateContractPayload:
      properties:
        org_id:
          type: integer
        description:
          type: string
        discount_resources:
          items:
            $ref: '#/components/schemas/ResourcePayload'
          type: array
        start_date:
          format: date-time
          type: string
        end_date:
          format: date-time
          type: string
        expiration_policy:
          type: integer
      required:
      - discount_resources
      - expiration_policy
      - org_id
      type: object
    GetContractsListResponseModel:
      properties:
        status:
          type: boolean
        message:
          type: string
        contracts:
          items:
            $ref: '#/components/schemas/AdminContractFields'
          type: array
        count:
          type: integer
      type: object
    AdminContractFields:
      properties:
        id:
          type: integer
        org_name:
          type: string
        description:
          type: string
        start_date:
          format: date-time
          type: string
        end_date:
          format: date-time
          type: string
        expiration_policy:
          type: integer
        status:
          type: string
        gpu_name:
          type: string
        percent:
          type: number
        amount:
          type: number
        discount_type:
          type: string
        resource_count:
          type: integer
        created_at:
          format: date-time
          type: string
      type: object
    AdminCreateContractResponseModel:
      properties:
        status:
          type: boolean
        message:
          type: string
        contract:
          $ref: '#/components/schemas/CreateContarctFields'
      type: object
    CreateContarctFields:
      properties:
        id:
          type: integer
        org_id:
          type: integer
        description:
          type: string
        start_date:
          format: date-time
          type: string
        end_date:
          format: date-time
          type: string
        expiration_policy:
          type: integer
        discount_plans:
          items:
            $ref: '#/components/schemas/DiscountPlanFields'
          type: array
        created_at:
          format: date-time
          type: string
      type: object
    UpdateContractPayload:
      properties:
        description:
          type: string
        discount_resources:
          items:
            $ref: '#/components/schemas/ResourcePayload'
          type: array
        start_date:
          format: date-time
          type: string
        end_date:
          format: date-time
          type: string
        expiration_policy:
          type: integer
      required:
      - discount_resources
      - expiration_policy
      type: object
    GetContractDetailResponseModel:
      properties:
        status:
          type: boolean
        message:
          type: string
        contract:
          $ref: '#/components/schemas/AdminGetContractDetailFields'
        discount_plans:
          items:
            $ref: '#/components/schemas/DiscountPlanFields'
          type: array
      type: object
    AdminGetContractDetailFields:
      properties:
        id:
          type: integer
        org_id:
          type: integer
        description:
          type: string
        start_date:
          format: date-time
          type: string
        end_date:
          format: date-time
          type: string
        expiration_policy:
          type: integer
        created_at:
          format: date-time
          type: string
      type: object
    GetCustomerContractsListResponseModel:
      example:
        count: 3
        message: message
        contracts:
        - end_date: 2000-01-23T04:56:07.000+00:00
          discounts:
          - discount_status: discount_status
            discount_code: discount_code
            discount_amount: 9.301444243932576
            resource_id: 5
            id: 5
            resource_name: resource_name
            discount_type: discount_type
            discount_percent: 7.061401241503109
            resource_count: 2
          - discount_status: discount_status
            discount_code: discount_code
            discount_amount: 9.301444243932576
            resource_id: 5
            id: 5
            resource_name: resource_name
            discount_type: discount_type
            discount_percent: 7.061401241503109
            resource_count: 2
          org_id: 6
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 0
          expiration_policy: 1
          start_date: 2000-01-23T04:56:07.000+00:00
          status: status
        - end_date: 2000-01-23T04:56:07.000+00:00
          discounts:
          - discount_status: discount_status
            discount_code: discount_code
            discount_amount: 9.301444243932576
            resource_id: 5
            id: 5
            resource_name: resource_name
            discount_type: discount_type
            discount_percent: 7.061401241503109
            resource_count: 2
          - discount_status: discount_status
            discount_code: discount_code
            discount_amount: 9.301444243932576
            resource_id: 5
            id: 5
            resource_name: resource_name
            discount_type: discount_type
            discount_percent: 7.061401241503109
            resource_count: 2
          org_id: 6
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 0
          expiration_policy: 1
          start_date: 2000-01-23T04:56:07.000+00:00
          status: status
        status: true
      properties:
        status:
          type: boolean
        message:
          type: string
        contracts:
          items:
            $ref: '#/components/schemas/CustomerContractFields'
          type: array
        count:
          type: integer
      type: object
    CustomerContractFields:
      example:
        end_date: 2000-01-23T04:56:07.000+00:00
        discounts:
        - discount_status: discount_status
          discount_code: discount_code
          discount_amount: 9.301444243932576
          resource_id: 5
          id: 5
          resource_name: resource_name
          discount_type: discount_type
          discount_percent: 7.061401241503109
          resource_count: 2
        - discount_status: discount_status
          discount_code: discount_code
          discount_amount: 9.301444243932576
          resource_id: 5
          id: 5
          resource_name: resource_name
          discount_type: discount_type
          discount_percent: 7.061401241503109
          resource_count: 2
        org_id: 6
        description: description
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 0
        expiration_policy: 1
        start_date: 2000-01-23T04:56:07.000+00:00
        status: status
      properties:
        id:
          type: integer
        org_id:
          type: integer
        description:
          type: string
        start_date:
          format: date-time
          type: string
        end_date:
          format: date-time
          type: string
        expiration_policy:
          type: integer
        status:
          type: string
        discounts:
          items:
            $ref: '#/components/schemas/DiscountPlanFields'
          type: array
        created_at:
          format: date-time
          type: string
      type: object
    CustomerContractDetailResponseModel:
      example:
        message: message
        contracts:
          end_date: 2000-01-23T04:56:07.000+00:00
          discounts:
          - discount_status: discount_status
            discount_code: discount_code
            discount_amount: 9.301444243932576
            resource_id: 5
            id: 5
            resource_name: resource_name
            discount_type: discount_type
            discount_percent: 7.061401241503109
            resource_count: 2
          - discount_status: discount_status
            discount_code: discount_code
            discount_amount: 9.301444243932576
            resource_id: 5
            id: 5
            resource_name: resource_name
            discount_type: discount_type
            discount_percent: 7.061401241503109
            resource_count: 2
          org_id: 6
          description: description
          created_at: 2000-01-23T04:56:07.000+00:00
          id: 0
          expiration_policy: 1
          start_date: 2000-01-23T04:56:07.000+00:00
          status: status
        status: true
      properties:
        status:
          type: boolean
        message:
          type: string
        contracts:
          $ref: '#/components/schemas/CustomerContractFields'
      type: object
    GetContractEventsResponseModel:
      properties:
        status:
          type: boolean
        message:
          type: string
        contract_events:
          items:
            $ref: '#/components/schemas/AdminContractEventFields'
          type: array
        count:
          type: integer
      type: object
    AdminContractEventFields:
      properties:
        id:
          type: integer
        user_id:
          type: integer
        org_id:
          type: integer
        time:
          format: date-time
          type: string
        type:
          type: string
        reason:
          type: string
        message:
          type: string
        created_at:
          format: date-time
          type: string
      type: object
    Adminaddorganizationpayload:
      properties:
        organization_id:
          type: integer
      required:
      - organization_id
      type: object
    Admincreditpostpayload:
      properties:
        credit:
          type: number
      type: object
    Getcreditandthresholdinfoinresponse:
      example:
        data:
          can_create_instance: true
          threshold: 6.027456183070403
          credit: 0.8008281904610115
        message: message
        status: true
      properties:
        message:
          type: string
        status:
          type: boolean
        data:
          $ref: '#/components/schemas/Getcreditandthresholdinfo'
      type: object
    Getcreditandthresholdinfo:
      example:
        can_create_instance: true
        threshold: 6.027456183070403
        credit: 0.8008281904610115
      properties:
        credit:
          type: number
        threshold:
          type: number
        can_create_instance:
          type: boolean
      type: object
    Adminthresholdpostpayload:
      properties:
        threshold:
          type: number
      type: object
    Adminrechargehistoryresponse:
      properties:
        message:
          type: string
        status:
          type: boolean
        data:
          items:
            $ref: '#/components/schemas/Adminrechargehistoryfields'
          type: array
      type: object
    Adminrechargehistoryfields:
      properties:
        credit:
          type: number
        threshold:
          type: number
        prev_balance:
          type: number
        curr_balance:
          type: number
        medium:
          type: string
        created_at:
          format: date-time
          type: string
      type: object
    Billingmetricesresponse:
      example:
        data:
        - create_time: 2000-01-23T04:56:07.000+00:00
          organization_id: 6
          total_up_time: 5.962133916683182
          resource_type: resource_type
          name: name
          terminate_time: 2000-01-23T04:56:07.000+00:00
          exclude_billing: true
          resource_id: 0
          active: true
          bill_per_minute: 1.4658129805029452
          total_bill: 5.637376656633329
        - create_time: 2000-01-23T04:56:07.000+00:00
          organization_id: 6
          total_up_time: 5.962133916683182
          resource_type: resource_type
          name: name
          terminate_time: 2000-01-23T04:56:07.000+00:00
          exclude_billing: true
          resource_id: 0
          active: true
          bill_per_minute: 1.4658129805029452
          total_bill: 5.637376656633329
        message: message
        status: true
      properties:
        message:
          type: string
        status:
          type: boolean
        data:
          items:
            $ref: '#/components/schemas/Billingmetricesfields'
          type: array
      type: object
    Billingmetricesfields:
      example:
        create_time: 2000-01-23T04:56:07.000+00:00
        organization_id: 6
        total_up_time: 5.962133916683182
        resource_type: resource_type
        name: name
        terminate_time: 2000-01-23T04:56:07.000+00:00
        exclude_billing: true
        resource_id: 0
        active: true
        bill_per_minute: 1.4658129805029452
        total_bill: 5.637376656633329
      properties:
        resource_id:
          type: integer
        resource_type:
          type: string
        name:
          type: string
        organization_id:
          type: integer
        bill_per_minute:
          type: number
        create_time:
          format: date-time
          type: string
        terminate_time:
          format: date-time
          type: string
        total_up_time:
          type: number
        total_bill:
          type: number
        active:
          type: boolean
        exclude_billing:
          type: boolean
      type: object
    Excludebillingpostpayload:
      properties:
        resource_id:
          type: integer
        exclude:
          type: boolean
      required:
      - exclude
      - resource_id
      type: object
    Excludebillingpostresponse:
      properties:
        status:
          type: boolean
        message:
          type: string
        data:
          $ref: '#/components/schemas/Excludebillingpostpayload'
      type: object
    Billingimmuneresourcesresponse:
      properties:
        status:
          type: boolean
        message:
          type: string
        data:
          items:
            $ref: '#/components/schemas/Billingimmuneresources'
          type: array
      type: object
    Billingimmuneresources:
      properties:
        resource_id:
          type: integer
        resource_type:
          type: string
        organization_id:
          type: integer
      type: object
    Adminpaymenthistoryresponse:
      properties:
        message:
          type: string
        status:
          type: boolean
        payments:
          items:
            $ref: '#/components/schemas/Adminpaymenthistoryfields'
          type: array
      type: object
    Adminpaymenthistoryfields:
      properties:
        amount:
          type: number
        medium:
          type: string
        status:
          type: string
        transaction_id:
          type: string
        payment_id:
          type: string
        created_at:
          format: date-time
          type: string
      type: object
    UsersInfoListResponse:
      example:
        users_info:
          country: country
          business: true
          vat_number: vat_number
          created_at: 2000-01-23T04:56:07.000+00:00
          zip_code: zip_code
          phone: phone
          organization_id: 6
          company_name: company_name
          name: name
          id: 0
          state: state
          billing_address1: billing_address1
          email: email
          billing_address2: billing_address2
        message: message
        status: true
      properties:
        status:
          type: boolean
        message:
          type: string
        users_info:
          $ref: '#/components/schemas/UsersInfoFields'
      type: object
    UsersInfoFields:
      example:
        country: country
        business: true
        vat_number: vat_number
        created_at: 2000-01-23T04:56:07.000+00:00
        zip_code: zip_code
        phone: phone
        organization_id: 6
        company_name: company_name
        name: name
        id: 0
        state: state
        billing_address1: billing_address1
        email: email
        billing_address2: billing_address2
      properties:
        id:
          type: integer
        organization_id:
          type: integer
        name:
          type: string
        email:
          type: string
        business:
          type: boolean
        company_name:
          type: string
        vat_number:
          type: string
        phone:
          type: string
        billing_address1:
          type: string
        billing_address2:
          type: string
        zip_code:
          type: string
        country:
          type: string
        state:
          type: string
        created_at:
          format: date-time
          type: string
      type: object
    Lastdaycostresponse:
      example:
        data:
          instances_cost: 0.8008281904610115
          total_cost: 5.962133916683182
          clusters_cost: 1.4658129805029452
          volumes_cost: 6.027456183070403
        message: message
        status: true
      properties:
        message:
          type: string
        status:
          type: boolean
        data:
          $ref: '#/components/schemas/Lastdaycostfields'
      type: object
    Lastdaycostfields:
      example:
        instances_cost: 0.8008281904610115
        total_cost: 5.962133916683182
        clusters_cost: 1.4658129805029452
        volumes_cost: 6.027456183070403
      properties:
        instances_cost:
          type: number
        volumes_cost:
          type: number
        clusters_cost:
          type: number
        total_cost:
          type: number
      type: object
    PaymentInitiatePayload:
      example:
        amount: 0.8008281904610115
      properties:
        amount:
          type: number
      type: object
    PaymentInitiateResponse:
      example:
        data:
          payment_id: payment_id
        message: message
        status: true
      properties:
        message:
          type: string
        status:
          type: boolean
        data:
          $ref: '#/components/schemas/PaymentInitiateFields'
      type: object
    PaymentInitiateFields:
      example:
        payment_id: payment_id
      properties:
        payment_id:
          type: string
      type: object
    PaymentDetailsResponse:
      example:
        data:
          transaction_id: transaction_id
          amount: 0.8008281904610115
          updated_at: updated_at
          payment_id: payment_id
          description: description
          currency: currency
          paid_from: paid_from
          gateway_response: gateway_response
          status: status
        message: message
        status: true
      properties:
        message:
          type: string
        status:
          type: boolean
        data:
          $ref: '#/components/schemas/PaymentDetailsFields'
      type: object
    PaymentDetailsFields:
      example:
        transaction_id: transaction_id
        amount: 0.8008281904610115
        updated_at: updated_at
        payment_id: payment_id
        description: description
        currency: currency
        paid_from: paid_from
        gateway_response: gateway_response
        status: status
      properties:
        amount:
          type: number
        currency:
          type: string
        paid_from:
          type: string
        status:
          type: string
        gateway_response:
          type: string
        description:
          type: string
        transaction_id:
          type: string
        payment_id:
          type: string
        updated_at:
          type: string
      type: object
    Userinfopostpayload:
      example:
        country: country
        business: true
        phone: phone
        vat_number: vat_number
        company_name: company_name
        name: name
        state: state
        billing_address1: billing_address1
        email: email
        billing_address2: billing_address2
        zip_code: zip_code
      properties:
        business:
          type: boolean
        name:
          type: string
        email:
          type: string
        company_name:
          type: string
        vat_number:
          type: string
        phone:
          type: string
        billing_address1:
          type: string
        billing_address2:
          type: string
        zip_code:
          type: string
        country:
          type: string
        state:
          type: string
      required:
      - business
      - country
      - zip_code
      type: object
    AddUserInfoSuccessResponseModel:
      example:
        data:
          country: country
          business: true
          vat_number: vat_number
          created_at: 2000-01-23T04:56:07.000+00:00
          zip_code: zip_code
          phone: phone
          organization_id: 6
          company_name: company_name
          name: name
          id: 0
          state: state
          billing_address1: billing_address1
          email: email
          billing_address2: billing_address2
        message: message
        status: true
      properties:
        status:
          type: boolean
        message:
          type: string
        data:
          $ref: '#/components/schemas/UsersInfoFields'
      type: object
    Create_template_request:
      properties:
        name:
          description: name is required
          type: string
        description:
          description: description is required
          type: string
        is_public:
          description: is_public is required
          type: string
        content:
          description: YAML file is required
          format: binary
          type: string
      required:
      - content
      - description
      - is_public
      - name
      type: object
  securitySchemes:
    accessToken:
      description: Bearer Token
      in: header
      name: Authorization
      type: apiKey
    apiKey:
      description: Send it as api_key in header
      in: header
      name: api_key
      type: apiKey
x-original-swagger-version: "2.0"
