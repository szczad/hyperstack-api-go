/*
Infrahub-API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hyperstack

import (
	"encoding/json"
	"time"
)

// checks if the AdminNodeResource type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdminNodeResource{}

// AdminNodeResource struct for AdminNodeResource
type AdminNodeResource struct {
	Id *int32 `json:"id,omitempty"`
	OpenstackId *string `json:"openstack_id,omitempty"`
	Name *string `json:"name,omitempty"`
	Available *int32 `json:"available,omitempty"`
	Status *string `json:"status,omitempty"`
	ProvisionDate *time.Time `json:"provision_date,omitempty"`
	Organizations []int32 `json:"organizations,omitempty"`
}

// NewAdminNodeResource instantiates a new AdminNodeResource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdminNodeResource() *AdminNodeResource {
	this := AdminNodeResource{}
	return &this
}

// NewAdminNodeResourceWithDefaults instantiates a new AdminNodeResource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdminNodeResourceWithDefaults() *AdminNodeResource {
	this := AdminNodeResource{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AdminNodeResource) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdminNodeResource) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AdminNodeResource) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *AdminNodeResource) SetId(v int32) {
	o.Id = &v
}

// GetOpenstackId returns the OpenstackId field value if set, zero value otherwise.
func (o *AdminNodeResource) GetOpenstackId() string {
	if o == nil || IsNil(o.OpenstackId) {
		var ret string
		return ret
	}
	return *o.OpenstackId
}

// GetOpenstackIdOk returns a tuple with the OpenstackId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdminNodeResource) GetOpenstackIdOk() (*string, bool) {
	if o == nil || IsNil(o.OpenstackId) {
		return nil, false
	}
	return o.OpenstackId, true
}

// HasOpenstackId returns a boolean if a field has been set.
func (o *AdminNodeResource) HasOpenstackId() bool {
	if o != nil && !IsNil(o.OpenstackId) {
		return true
	}

	return false
}

// SetOpenstackId gets a reference to the given string and assigns it to the OpenstackId field.
func (o *AdminNodeResource) SetOpenstackId(v string) {
	o.OpenstackId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AdminNodeResource) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdminNodeResource) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AdminNodeResource) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AdminNodeResource) SetName(v string) {
	o.Name = &v
}

// GetAvailable returns the Available field value if set, zero value otherwise.
func (o *AdminNodeResource) GetAvailable() int32 {
	if o == nil || IsNil(o.Available) {
		var ret int32
		return ret
	}
	return *o.Available
}

// GetAvailableOk returns a tuple with the Available field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdminNodeResource) GetAvailableOk() (*int32, bool) {
	if o == nil || IsNil(o.Available) {
		return nil, false
	}
	return o.Available, true
}

// HasAvailable returns a boolean if a field has been set.
func (o *AdminNodeResource) HasAvailable() bool {
	if o != nil && !IsNil(o.Available) {
		return true
	}

	return false
}

// SetAvailable gets a reference to the given int32 and assigns it to the Available field.
func (o *AdminNodeResource) SetAvailable(v int32) {
	o.Available = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *AdminNodeResource) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdminNodeResource) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *AdminNodeResource) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *AdminNodeResource) SetStatus(v string) {
	o.Status = &v
}

// GetProvisionDate returns the ProvisionDate field value if set, zero value otherwise.
func (o *AdminNodeResource) GetProvisionDate() time.Time {
	if o == nil || IsNil(o.ProvisionDate) {
		var ret time.Time
		return ret
	}
	return *o.ProvisionDate
}

// GetProvisionDateOk returns a tuple with the ProvisionDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdminNodeResource) GetProvisionDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ProvisionDate) {
		return nil, false
	}
	return o.ProvisionDate, true
}

// HasProvisionDate returns a boolean if a field has been set.
func (o *AdminNodeResource) HasProvisionDate() bool {
	if o != nil && !IsNil(o.ProvisionDate) {
		return true
	}

	return false
}

// SetProvisionDate gets a reference to the given time.Time and assigns it to the ProvisionDate field.
func (o *AdminNodeResource) SetProvisionDate(v time.Time) {
	o.ProvisionDate = &v
}

// GetOrganizations returns the Organizations field value if set, zero value otherwise.
func (o *AdminNodeResource) GetOrganizations() []int32 {
	if o == nil || IsNil(o.Organizations) {
		var ret []int32
		return ret
	}
	return o.Organizations
}

// GetOrganizationsOk returns a tuple with the Organizations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdminNodeResource) GetOrganizationsOk() ([]int32, bool) {
	if o == nil || IsNil(o.Organizations) {
		return nil, false
	}
	return o.Organizations, true
}

// HasOrganizations returns a boolean if a field has been set.
func (o *AdminNodeResource) HasOrganizations() bool {
	if o != nil && !IsNil(o.Organizations) {
		return true
	}

	return false
}

// SetOrganizations gets a reference to the given []int32 and assigns it to the Organizations field.
func (o *AdminNodeResource) SetOrganizations(v []int32) {
	o.Organizations = v
}

func (o AdminNodeResource) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdminNodeResource) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.OpenstackId) {
		toSerialize["openstack_id"] = o.OpenstackId
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Available) {
		toSerialize["available"] = o.Available
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.ProvisionDate) {
		toSerialize["provision_date"] = o.ProvisionDate
	}
	if !IsNil(o.Organizations) {
		toSerialize["organizations"] = o.Organizations
	}
	return toSerialize, nil
}

type NullableAdminNodeResource struct {
	value *AdminNodeResource
	isSet bool
}

func (v NullableAdminNodeResource) Get() *AdminNodeResource {
	return v.value
}

func (v *NullableAdminNodeResource) Set(val *AdminNodeResource) {
	v.value = val
	v.isSet = true
}

func (v NullableAdminNodeResource) IsSet() bool {
	return v.isSet
}

func (v *NullableAdminNodeResource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdminNodeResource(val *AdminNodeResource) *NullableAdminNodeResource {
	return &NullableAdminNodeResource{value: val, isSet: true}
}

func (v NullableAdminNodeResource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdminNodeResource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


