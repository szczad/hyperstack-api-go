/*
Infrahub-API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hyperstack

import (
	"encoding/json"
)

// checks if the AdminCountResourcesOrganizations type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdminCountResourcesOrganizations{}

// AdminCountResourcesOrganizations struct for AdminCountResourcesOrganizations
type AdminCountResourcesOrganizations struct {
	Resources []AdminCountResourcesOrganization `json:"resources,omitempty"`
}

// NewAdminCountResourcesOrganizations instantiates a new AdminCountResourcesOrganizations object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdminCountResourcesOrganizations() *AdminCountResourcesOrganizations {
	this := AdminCountResourcesOrganizations{}
	return &this
}

// NewAdminCountResourcesOrganizationsWithDefaults instantiates a new AdminCountResourcesOrganizations object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdminCountResourcesOrganizationsWithDefaults() *AdminCountResourcesOrganizations {
	this := AdminCountResourcesOrganizations{}
	return &this
}

// GetResources returns the Resources field value if set, zero value otherwise.
func (o *AdminCountResourcesOrganizations) GetResources() []AdminCountResourcesOrganization {
	if o == nil || IsNil(o.Resources) {
		var ret []AdminCountResourcesOrganization
		return ret
	}
	return o.Resources
}

// GetResourcesOk returns a tuple with the Resources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdminCountResourcesOrganizations) GetResourcesOk() ([]AdminCountResourcesOrganization, bool) {
	if o == nil || IsNil(o.Resources) {
		return nil, false
	}
	return o.Resources, true
}

// HasResources returns a boolean if a field has been set.
func (o *AdminCountResourcesOrganizations) HasResources() bool {
	if o != nil && !IsNil(o.Resources) {
		return true
	}

	return false
}

// SetResources gets a reference to the given []AdminCountResourcesOrganization and assigns it to the Resources field.
func (o *AdminCountResourcesOrganizations) SetResources(v []AdminCountResourcesOrganization) {
	o.Resources = v
}

func (o AdminCountResourcesOrganizations) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdminCountResourcesOrganizations) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Resources) {
		toSerialize["resources"] = o.Resources
	}
	return toSerialize, nil
}

type NullableAdminCountResourcesOrganizations struct {
	value *AdminCountResourcesOrganizations
	isSet bool
}

func (v NullableAdminCountResourcesOrganizations) Get() *AdminCountResourcesOrganizations {
	return v.value
}

func (v *NullableAdminCountResourcesOrganizations) Set(val *AdminCountResourcesOrganizations) {
	v.value = val
	v.isSet = true
}

func (v NullableAdminCountResourcesOrganizations) IsSet() bool {
	return v.isSet
}

func (v *NullableAdminCountResourcesOrganizations) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdminCountResourcesOrganizations(val *AdminCountResourcesOrganizations) *NullableAdminCountResourcesOrganizations {
	return &NullableAdminCountResourcesOrganizations{value: val, isSet: true}
}

func (v NullableAdminCountResourcesOrganizations) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdminCountResourcesOrganizations) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


