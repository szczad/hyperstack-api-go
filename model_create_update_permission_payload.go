/*
Infrahub-API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hyperstack

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateUpdatePermissionPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateUpdatePermissionPayload{}

// CreateUpdatePermissionPayload struct for CreateUpdatePermissionPayload
type CreateUpdatePermissionPayload struct {
	Resource string `json:"resource"`
	Permission string `json:"permission"`
	Method string `json:"method"`
	Endpoint string `json:"endpoint"`
}

type _CreateUpdatePermissionPayload CreateUpdatePermissionPayload

// NewCreateUpdatePermissionPayload instantiates a new CreateUpdatePermissionPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateUpdatePermissionPayload(resource string, permission string, method string, endpoint string) *CreateUpdatePermissionPayload {
	this := CreateUpdatePermissionPayload{}
	this.Resource = resource
	this.Permission = permission
	this.Method = method
	this.Endpoint = endpoint
	return &this
}

// NewCreateUpdatePermissionPayloadWithDefaults instantiates a new CreateUpdatePermissionPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateUpdatePermissionPayloadWithDefaults() *CreateUpdatePermissionPayload {
	this := CreateUpdatePermissionPayload{}
	return &this
}

// GetResource returns the Resource field value
func (o *CreateUpdatePermissionPayload) GetResource() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Resource
}

// GetResourceOk returns a tuple with the Resource field value
// and a boolean to check if the value has been set.
func (o *CreateUpdatePermissionPayload) GetResourceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Resource, true
}

// SetResource sets field value
func (o *CreateUpdatePermissionPayload) SetResource(v string) {
	o.Resource = v
}

// GetPermission returns the Permission field value
func (o *CreateUpdatePermissionPayload) GetPermission() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Permission
}

// GetPermissionOk returns a tuple with the Permission field value
// and a boolean to check if the value has been set.
func (o *CreateUpdatePermissionPayload) GetPermissionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Permission, true
}

// SetPermission sets field value
func (o *CreateUpdatePermissionPayload) SetPermission(v string) {
	o.Permission = v
}

// GetMethod returns the Method field value
func (o *CreateUpdatePermissionPayload) GetMethod() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Method
}

// GetMethodOk returns a tuple with the Method field value
// and a boolean to check if the value has been set.
func (o *CreateUpdatePermissionPayload) GetMethodOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Method, true
}

// SetMethod sets field value
func (o *CreateUpdatePermissionPayload) SetMethod(v string) {
	o.Method = v
}

// GetEndpoint returns the Endpoint field value
func (o *CreateUpdatePermissionPayload) GetEndpoint() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Endpoint
}

// GetEndpointOk returns a tuple with the Endpoint field value
// and a boolean to check if the value has been set.
func (o *CreateUpdatePermissionPayload) GetEndpointOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Endpoint, true
}

// SetEndpoint sets field value
func (o *CreateUpdatePermissionPayload) SetEndpoint(v string) {
	o.Endpoint = v
}

func (o CreateUpdatePermissionPayload) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateUpdatePermissionPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["resource"] = o.Resource
	toSerialize["permission"] = o.Permission
	toSerialize["method"] = o.Method
	toSerialize["endpoint"] = o.Endpoint
	return toSerialize, nil
}

func (o *CreateUpdatePermissionPayload) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"resource",
		"permission",
		"method",
		"endpoint",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateUpdatePermissionPayload := _CreateUpdatePermissionPayload{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateUpdatePermissionPayload)

	if err != nil {
		return err
	}

	*o = CreateUpdatePermissionPayload(varCreateUpdatePermissionPayload)

	return err
}

type NullableCreateUpdatePermissionPayload struct {
	value *CreateUpdatePermissionPayload
	isSet bool
}

func (v NullableCreateUpdatePermissionPayload) Get() *CreateUpdatePermissionPayload {
	return v.value
}

func (v *NullableCreateUpdatePermissionPayload) Set(val *CreateUpdatePermissionPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateUpdatePermissionPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateUpdatePermissionPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateUpdatePermissionPayload(val *CreateUpdatePermissionPayload) *NullableCreateUpdatePermissionPayload {
	return &NullableCreateUpdatePermissionPayload{value: val, isSet: true}
}

func (v NullableCreateUpdatePermissionPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateUpdatePermissionPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


