/*
Infrahub-API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hyperstack

import (
	"encoding/json"
	"time"
)

// checks if the InstanceAdminFields type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InstanceAdminFields{}

// InstanceAdminFields struct for InstanceAdminFields
type InstanceAdminFields struct {
	Id *int32 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Status *string `json:"status,omitempty"`
	Environment *InstanceEnvironmentFields `json:"environment,omitempty"`
	Image *InstanceImageFields `json:"image,omitempty"`
	Flavor *InstanceFlavorFields `json:"flavor,omitempty"`
	Os *string `json:"os,omitempty"`
	Keypair *InstanceKeypairFields `json:"keypair,omitempty"`
	VolumeAttachments []VolumeAttachmentFields `json:"volume_attachments,omitempty"`
	SecurityRules []SecurityRulesFieldsforInstance `json:"security_rules,omitempty"`
	PowerState *string `json:"power_state,omitempty"`
	VmState *string `json:"vm_state,omitempty"`
	FixedIp *string `json:"fixed_ip,omitempty"`
	FloatingIp *string `json:"floating_ip,omitempty"`
	FloatingIpStatus *string `json:"floating_ip_status,omitempty"`
	Locked *bool `json:"locked,omitempty"`
	ContractId *int32 `json:"contract_id,omitempty"`
	CreatedAt *time.Time `json:"created_at,omitempty"`
	Labels []string `json:"labels,omitempty"`
	OpenstackId *string `json:"openstack_id,omitempty"`
	Host *string `json:"host,omitempty"`
}

// NewInstanceAdminFields instantiates a new InstanceAdminFields object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInstanceAdminFields() *InstanceAdminFields {
	this := InstanceAdminFields{}
	return &this
}

// NewInstanceAdminFieldsWithDefaults instantiates a new InstanceAdminFields object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInstanceAdminFieldsWithDefaults() *InstanceAdminFields {
	this := InstanceAdminFields{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *InstanceAdminFields) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceAdminFields) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *InstanceAdminFields) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *InstanceAdminFields) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *InstanceAdminFields) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceAdminFields) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *InstanceAdminFields) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *InstanceAdminFields) SetName(v string) {
	o.Name = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *InstanceAdminFields) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceAdminFields) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *InstanceAdminFields) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *InstanceAdminFields) SetStatus(v string) {
	o.Status = &v
}

// GetEnvironment returns the Environment field value if set, zero value otherwise.
func (o *InstanceAdminFields) GetEnvironment() InstanceEnvironmentFields {
	if o == nil || IsNil(o.Environment) {
		var ret InstanceEnvironmentFields
		return ret
	}
	return *o.Environment
}

// GetEnvironmentOk returns a tuple with the Environment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceAdminFields) GetEnvironmentOk() (*InstanceEnvironmentFields, bool) {
	if o == nil || IsNil(o.Environment) {
		return nil, false
	}
	return o.Environment, true
}

// HasEnvironment returns a boolean if a field has been set.
func (o *InstanceAdminFields) HasEnvironment() bool {
	if o != nil && !IsNil(o.Environment) {
		return true
	}

	return false
}

// SetEnvironment gets a reference to the given InstanceEnvironmentFields and assigns it to the Environment field.
func (o *InstanceAdminFields) SetEnvironment(v InstanceEnvironmentFields) {
	o.Environment = &v
}

// GetImage returns the Image field value if set, zero value otherwise.
func (o *InstanceAdminFields) GetImage() InstanceImageFields {
	if o == nil || IsNil(o.Image) {
		var ret InstanceImageFields
		return ret
	}
	return *o.Image
}

// GetImageOk returns a tuple with the Image field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceAdminFields) GetImageOk() (*InstanceImageFields, bool) {
	if o == nil || IsNil(o.Image) {
		return nil, false
	}
	return o.Image, true
}

// HasImage returns a boolean if a field has been set.
func (o *InstanceAdminFields) HasImage() bool {
	if o != nil && !IsNil(o.Image) {
		return true
	}

	return false
}

// SetImage gets a reference to the given InstanceImageFields and assigns it to the Image field.
func (o *InstanceAdminFields) SetImage(v InstanceImageFields) {
	o.Image = &v
}

// GetFlavor returns the Flavor field value if set, zero value otherwise.
func (o *InstanceAdminFields) GetFlavor() InstanceFlavorFields {
	if o == nil || IsNil(o.Flavor) {
		var ret InstanceFlavorFields
		return ret
	}
	return *o.Flavor
}

// GetFlavorOk returns a tuple with the Flavor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceAdminFields) GetFlavorOk() (*InstanceFlavorFields, bool) {
	if o == nil || IsNil(o.Flavor) {
		return nil, false
	}
	return o.Flavor, true
}

// HasFlavor returns a boolean if a field has been set.
func (o *InstanceAdminFields) HasFlavor() bool {
	if o != nil && !IsNil(o.Flavor) {
		return true
	}

	return false
}

// SetFlavor gets a reference to the given InstanceFlavorFields and assigns it to the Flavor field.
func (o *InstanceAdminFields) SetFlavor(v InstanceFlavorFields) {
	o.Flavor = &v
}

// GetOs returns the Os field value if set, zero value otherwise.
func (o *InstanceAdminFields) GetOs() string {
	if o == nil || IsNil(o.Os) {
		var ret string
		return ret
	}
	return *o.Os
}

// GetOsOk returns a tuple with the Os field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceAdminFields) GetOsOk() (*string, bool) {
	if o == nil || IsNil(o.Os) {
		return nil, false
	}
	return o.Os, true
}

// HasOs returns a boolean if a field has been set.
func (o *InstanceAdminFields) HasOs() bool {
	if o != nil && !IsNil(o.Os) {
		return true
	}

	return false
}

// SetOs gets a reference to the given string and assigns it to the Os field.
func (o *InstanceAdminFields) SetOs(v string) {
	o.Os = &v
}

// GetKeypair returns the Keypair field value if set, zero value otherwise.
func (o *InstanceAdminFields) GetKeypair() InstanceKeypairFields {
	if o == nil || IsNil(o.Keypair) {
		var ret InstanceKeypairFields
		return ret
	}
	return *o.Keypair
}

// GetKeypairOk returns a tuple with the Keypair field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceAdminFields) GetKeypairOk() (*InstanceKeypairFields, bool) {
	if o == nil || IsNil(o.Keypair) {
		return nil, false
	}
	return o.Keypair, true
}

// HasKeypair returns a boolean if a field has been set.
func (o *InstanceAdminFields) HasKeypair() bool {
	if o != nil && !IsNil(o.Keypair) {
		return true
	}

	return false
}

// SetKeypair gets a reference to the given InstanceKeypairFields and assigns it to the Keypair field.
func (o *InstanceAdminFields) SetKeypair(v InstanceKeypairFields) {
	o.Keypair = &v
}

// GetVolumeAttachments returns the VolumeAttachments field value if set, zero value otherwise.
func (o *InstanceAdminFields) GetVolumeAttachments() []VolumeAttachmentFields {
	if o == nil || IsNil(o.VolumeAttachments) {
		var ret []VolumeAttachmentFields
		return ret
	}
	return o.VolumeAttachments
}

// GetVolumeAttachmentsOk returns a tuple with the VolumeAttachments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceAdminFields) GetVolumeAttachmentsOk() ([]VolumeAttachmentFields, bool) {
	if o == nil || IsNil(o.VolumeAttachments) {
		return nil, false
	}
	return o.VolumeAttachments, true
}

// HasVolumeAttachments returns a boolean if a field has been set.
func (o *InstanceAdminFields) HasVolumeAttachments() bool {
	if o != nil && !IsNil(o.VolumeAttachments) {
		return true
	}

	return false
}

// SetVolumeAttachments gets a reference to the given []VolumeAttachmentFields and assigns it to the VolumeAttachments field.
func (o *InstanceAdminFields) SetVolumeAttachments(v []VolumeAttachmentFields) {
	o.VolumeAttachments = v
}

// GetSecurityRules returns the SecurityRules field value if set, zero value otherwise.
func (o *InstanceAdminFields) GetSecurityRules() []SecurityRulesFieldsforInstance {
	if o == nil || IsNil(o.SecurityRules) {
		var ret []SecurityRulesFieldsforInstance
		return ret
	}
	return o.SecurityRules
}

// GetSecurityRulesOk returns a tuple with the SecurityRules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceAdminFields) GetSecurityRulesOk() ([]SecurityRulesFieldsforInstance, bool) {
	if o == nil || IsNil(o.SecurityRules) {
		return nil, false
	}
	return o.SecurityRules, true
}

// HasSecurityRules returns a boolean if a field has been set.
func (o *InstanceAdminFields) HasSecurityRules() bool {
	if o != nil && !IsNil(o.SecurityRules) {
		return true
	}

	return false
}

// SetSecurityRules gets a reference to the given []SecurityRulesFieldsforInstance and assigns it to the SecurityRules field.
func (o *InstanceAdminFields) SetSecurityRules(v []SecurityRulesFieldsforInstance) {
	o.SecurityRules = v
}

// GetPowerState returns the PowerState field value if set, zero value otherwise.
func (o *InstanceAdminFields) GetPowerState() string {
	if o == nil || IsNil(o.PowerState) {
		var ret string
		return ret
	}
	return *o.PowerState
}

// GetPowerStateOk returns a tuple with the PowerState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceAdminFields) GetPowerStateOk() (*string, bool) {
	if o == nil || IsNil(o.PowerState) {
		return nil, false
	}
	return o.PowerState, true
}

// HasPowerState returns a boolean if a field has been set.
func (o *InstanceAdminFields) HasPowerState() bool {
	if o != nil && !IsNil(o.PowerState) {
		return true
	}

	return false
}

// SetPowerState gets a reference to the given string and assigns it to the PowerState field.
func (o *InstanceAdminFields) SetPowerState(v string) {
	o.PowerState = &v
}

// GetVmState returns the VmState field value if set, zero value otherwise.
func (o *InstanceAdminFields) GetVmState() string {
	if o == nil || IsNil(o.VmState) {
		var ret string
		return ret
	}
	return *o.VmState
}

// GetVmStateOk returns a tuple with the VmState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceAdminFields) GetVmStateOk() (*string, bool) {
	if o == nil || IsNil(o.VmState) {
		return nil, false
	}
	return o.VmState, true
}

// HasVmState returns a boolean if a field has been set.
func (o *InstanceAdminFields) HasVmState() bool {
	if o != nil && !IsNil(o.VmState) {
		return true
	}

	return false
}

// SetVmState gets a reference to the given string and assigns it to the VmState field.
func (o *InstanceAdminFields) SetVmState(v string) {
	o.VmState = &v
}

// GetFixedIp returns the FixedIp field value if set, zero value otherwise.
func (o *InstanceAdminFields) GetFixedIp() string {
	if o == nil || IsNil(o.FixedIp) {
		var ret string
		return ret
	}
	return *o.FixedIp
}

// GetFixedIpOk returns a tuple with the FixedIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceAdminFields) GetFixedIpOk() (*string, bool) {
	if o == nil || IsNil(o.FixedIp) {
		return nil, false
	}
	return o.FixedIp, true
}

// HasFixedIp returns a boolean if a field has been set.
func (o *InstanceAdminFields) HasFixedIp() bool {
	if o != nil && !IsNil(o.FixedIp) {
		return true
	}

	return false
}

// SetFixedIp gets a reference to the given string and assigns it to the FixedIp field.
func (o *InstanceAdminFields) SetFixedIp(v string) {
	o.FixedIp = &v
}

// GetFloatingIp returns the FloatingIp field value if set, zero value otherwise.
func (o *InstanceAdminFields) GetFloatingIp() string {
	if o == nil || IsNil(o.FloatingIp) {
		var ret string
		return ret
	}
	return *o.FloatingIp
}

// GetFloatingIpOk returns a tuple with the FloatingIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceAdminFields) GetFloatingIpOk() (*string, bool) {
	if o == nil || IsNil(o.FloatingIp) {
		return nil, false
	}
	return o.FloatingIp, true
}

// HasFloatingIp returns a boolean if a field has been set.
func (o *InstanceAdminFields) HasFloatingIp() bool {
	if o != nil && !IsNil(o.FloatingIp) {
		return true
	}

	return false
}

// SetFloatingIp gets a reference to the given string and assigns it to the FloatingIp field.
func (o *InstanceAdminFields) SetFloatingIp(v string) {
	o.FloatingIp = &v
}

// GetFloatingIpStatus returns the FloatingIpStatus field value if set, zero value otherwise.
func (o *InstanceAdminFields) GetFloatingIpStatus() string {
	if o == nil || IsNil(o.FloatingIpStatus) {
		var ret string
		return ret
	}
	return *o.FloatingIpStatus
}

// GetFloatingIpStatusOk returns a tuple with the FloatingIpStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceAdminFields) GetFloatingIpStatusOk() (*string, bool) {
	if o == nil || IsNil(o.FloatingIpStatus) {
		return nil, false
	}
	return o.FloatingIpStatus, true
}

// HasFloatingIpStatus returns a boolean if a field has been set.
func (o *InstanceAdminFields) HasFloatingIpStatus() bool {
	if o != nil && !IsNil(o.FloatingIpStatus) {
		return true
	}

	return false
}

// SetFloatingIpStatus gets a reference to the given string and assigns it to the FloatingIpStatus field.
func (o *InstanceAdminFields) SetFloatingIpStatus(v string) {
	o.FloatingIpStatus = &v
}

// GetLocked returns the Locked field value if set, zero value otherwise.
func (o *InstanceAdminFields) GetLocked() bool {
	if o == nil || IsNil(o.Locked) {
		var ret bool
		return ret
	}
	return *o.Locked
}

// GetLockedOk returns a tuple with the Locked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceAdminFields) GetLockedOk() (*bool, bool) {
	if o == nil || IsNil(o.Locked) {
		return nil, false
	}
	return o.Locked, true
}

// HasLocked returns a boolean if a field has been set.
func (o *InstanceAdminFields) HasLocked() bool {
	if o != nil && !IsNil(o.Locked) {
		return true
	}

	return false
}

// SetLocked gets a reference to the given bool and assigns it to the Locked field.
func (o *InstanceAdminFields) SetLocked(v bool) {
	o.Locked = &v
}

// GetContractId returns the ContractId field value if set, zero value otherwise.
func (o *InstanceAdminFields) GetContractId() int32 {
	if o == nil || IsNil(o.ContractId) {
		var ret int32
		return ret
	}
	return *o.ContractId
}

// GetContractIdOk returns a tuple with the ContractId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceAdminFields) GetContractIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ContractId) {
		return nil, false
	}
	return o.ContractId, true
}

// HasContractId returns a boolean if a field has been set.
func (o *InstanceAdminFields) HasContractId() bool {
	if o != nil && !IsNil(o.ContractId) {
		return true
	}

	return false
}

// SetContractId gets a reference to the given int32 and assigns it to the ContractId field.
func (o *InstanceAdminFields) SetContractId(v int32) {
	o.ContractId = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *InstanceAdminFields) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceAdminFields) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *InstanceAdminFields) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *InstanceAdminFields) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *InstanceAdminFields) GetLabels() []string {
	if o == nil || IsNil(o.Labels) {
		var ret []string
		return ret
	}
	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceAdminFields) GetLabelsOk() ([]string, bool) {
	if o == nil || IsNil(o.Labels) {
		return nil, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *InstanceAdminFields) HasLabels() bool {
	if o != nil && !IsNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given []string and assigns it to the Labels field.
func (o *InstanceAdminFields) SetLabels(v []string) {
	o.Labels = v
}

// GetOpenstackId returns the OpenstackId field value if set, zero value otherwise.
func (o *InstanceAdminFields) GetOpenstackId() string {
	if o == nil || IsNil(o.OpenstackId) {
		var ret string
		return ret
	}
	return *o.OpenstackId
}

// GetOpenstackIdOk returns a tuple with the OpenstackId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceAdminFields) GetOpenstackIdOk() (*string, bool) {
	if o == nil || IsNil(o.OpenstackId) {
		return nil, false
	}
	return o.OpenstackId, true
}

// HasOpenstackId returns a boolean if a field has been set.
func (o *InstanceAdminFields) HasOpenstackId() bool {
	if o != nil && !IsNil(o.OpenstackId) {
		return true
	}

	return false
}

// SetOpenstackId gets a reference to the given string and assigns it to the OpenstackId field.
func (o *InstanceAdminFields) SetOpenstackId(v string) {
	o.OpenstackId = &v
}

// GetHost returns the Host field value if set, zero value otherwise.
func (o *InstanceAdminFields) GetHost() string {
	if o == nil || IsNil(o.Host) {
		var ret string
		return ret
	}
	return *o.Host
}

// GetHostOk returns a tuple with the Host field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceAdminFields) GetHostOk() (*string, bool) {
	if o == nil || IsNil(o.Host) {
		return nil, false
	}
	return o.Host, true
}

// HasHost returns a boolean if a field has been set.
func (o *InstanceAdminFields) HasHost() bool {
	if o != nil && !IsNil(o.Host) {
		return true
	}

	return false
}

// SetHost gets a reference to the given string and assigns it to the Host field.
func (o *InstanceAdminFields) SetHost(v string) {
	o.Host = &v
}

func (o InstanceAdminFields) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InstanceAdminFields) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Environment) {
		toSerialize["environment"] = o.Environment
	}
	if !IsNil(o.Image) {
		toSerialize["image"] = o.Image
	}
	if !IsNil(o.Flavor) {
		toSerialize["flavor"] = o.Flavor
	}
	if !IsNil(o.Os) {
		toSerialize["os"] = o.Os
	}
	if !IsNil(o.Keypair) {
		toSerialize["keypair"] = o.Keypair
	}
	if !IsNil(o.VolumeAttachments) {
		toSerialize["volume_attachments"] = o.VolumeAttachments
	}
	if !IsNil(o.SecurityRules) {
		toSerialize["security_rules"] = o.SecurityRules
	}
	if !IsNil(o.PowerState) {
		toSerialize["power_state"] = o.PowerState
	}
	if !IsNil(o.VmState) {
		toSerialize["vm_state"] = o.VmState
	}
	if !IsNil(o.FixedIp) {
		toSerialize["fixed_ip"] = o.FixedIp
	}
	if !IsNil(o.FloatingIp) {
		toSerialize["floating_ip"] = o.FloatingIp
	}
	if !IsNil(o.FloatingIpStatus) {
		toSerialize["floating_ip_status"] = o.FloatingIpStatus
	}
	if !IsNil(o.Locked) {
		toSerialize["locked"] = o.Locked
	}
	if !IsNil(o.ContractId) {
		toSerialize["contract_id"] = o.ContractId
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.Labels) {
		toSerialize["labels"] = o.Labels
	}
	if !IsNil(o.OpenstackId) {
		toSerialize["openstack_id"] = o.OpenstackId
	}
	if !IsNil(o.Host) {
		toSerialize["host"] = o.Host
	}
	return toSerialize, nil
}

type NullableInstanceAdminFields struct {
	value *InstanceAdminFields
	isSet bool
}

func (v NullableInstanceAdminFields) Get() *InstanceAdminFields {
	return v.value
}

func (v *NullableInstanceAdminFields) Set(val *InstanceAdminFields) {
	v.value = val
	v.isSet = true
}

func (v NullableInstanceAdminFields) IsSet() bool {
	return v.isSet
}

func (v *NullableInstanceAdminFields) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInstanceAdminFields(val *InstanceAdminFields) *NullableInstanceAdminFields {
	return &NullableInstanceAdminFields{value: val, isSet: true}
}

func (v NullableInstanceAdminFields) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInstanceAdminFields) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


