/*
Infrahub-API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hyperstack

import (
	"encoding/json"
)

// checks if the ComplianceFields type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ComplianceFields{}

// ComplianceFields struct for ComplianceFields
type ComplianceFields struct {
	GpuModel *string `json:"gpu_model,omitempty"`
	Cpu []int32 `json:"cpu,omitempty"`
	Ram []int32 `json:"ram,omitempty"`
	Hdd []int32 `json:"hdd,omitempty"`
}

// NewComplianceFields instantiates a new ComplianceFields object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewComplianceFields() *ComplianceFields {
	this := ComplianceFields{}
	return &this
}

// NewComplianceFieldsWithDefaults instantiates a new ComplianceFields object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewComplianceFieldsWithDefaults() *ComplianceFields {
	this := ComplianceFields{}
	return &this
}

// GetGpuModel returns the GpuModel field value if set, zero value otherwise.
func (o *ComplianceFields) GetGpuModel() string {
	if o == nil || IsNil(o.GpuModel) {
		var ret string
		return ret
	}
	return *o.GpuModel
}

// GetGpuModelOk returns a tuple with the GpuModel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComplianceFields) GetGpuModelOk() (*string, bool) {
	if o == nil || IsNil(o.GpuModel) {
		return nil, false
	}
	return o.GpuModel, true
}

// HasGpuModel returns a boolean if a field has been set.
func (o *ComplianceFields) HasGpuModel() bool {
	if o != nil && !IsNil(o.GpuModel) {
		return true
	}

	return false
}

// SetGpuModel gets a reference to the given string and assigns it to the GpuModel field.
func (o *ComplianceFields) SetGpuModel(v string) {
	o.GpuModel = &v
}

// GetCpu returns the Cpu field value if set, zero value otherwise.
func (o *ComplianceFields) GetCpu() []int32 {
	if o == nil || IsNil(o.Cpu) {
		var ret []int32
		return ret
	}
	return o.Cpu
}

// GetCpuOk returns a tuple with the Cpu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComplianceFields) GetCpuOk() ([]int32, bool) {
	if o == nil || IsNil(o.Cpu) {
		return nil, false
	}
	return o.Cpu, true
}

// HasCpu returns a boolean if a field has been set.
func (o *ComplianceFields) HasCpu() bool {
	if o != nil && !IsNil(o.Cpu) {
		return true
	}

	return false
}

// SetCpu gets a reference to the given []int32 and assigns it to the Cpu field.
func (o *ComplianceFields) SetCpu(v []int32) {
	o.Cpu = v
}

// GetRam returns the Ram field value if set, zero value otherwise.
func (o *ComplianceFields) GetRam() []int32 {
	if o == nil || IsNil(o.Ram) {
		var ret []int32
		return ret
	}
	return o.Ram
}

// GetRamOk returns a tuple with the Ram field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComplianceFields) GetRamOk() ([]int32, bool) {
	if o == nil || IsNil(o.Ram) {
		return nil, false
	}
	return o.Ram, true
}

// HasRam returns a boolean if a field has been set.
func (o *ComplianceFields) HasRam() bool {
	if o != nil && !IsNil(o.Ram) {
		return true
	}

	return false
}

// SetRam gets a reference to the given []int32 and assigns it to the Ram field.
func (o *ComplianceFields) SetRam(v []int32) {
	o.Ram = v
}

// GetHdd returns the Hdd field value if set, zero value otherwise.
func (o *ComplianceFields) GetHdd() []int32 {
	if o == nil || IsNil(o.Hdd) {
		var ret []int32
		return ret
	}
	return o.Hdd
}

// GetHddOk returns a tuple with the Hdd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComplianceFields) GetHddOk() ([]int32, bool) {
	if o == nil || IsNil(o.Hdd) {
		return nil, false
	}
	return o.Hdd, true
}

// HasHdd returns a boolean if a field has been set.
func (o *ComplianceFields) HasHdd() bool {
	if o != nil && !IsNil(o.Hdd) {
		return true
	}

	return false
}

// SetHdd gets a reference to the given []int32 and assigns it to the Hdd field.
func (o *ComplianceFields) SetHdd(v []int32) {
	o.Hdd = v
}

func (o ComplianceFields) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ComplianceFields) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GpuModel) {
		toSerialize["gpu_model"] = o.GpuModel
	}
	if !IsNil(o.Cpu) {
		toSerialize["cpu"] = o.Cpu
	}
	if !IsNil(o.Ram) {
		toSerialize["ram"] = o.Ram
	}
	if !IsNil(o.Hdd) {
		toSerialize["hdd"] = o.Hdd
	}
	return toSerialize, nil
}

type NullableComplianceFields struct {
	value *ComplianceFields
	isSet bool
}

func (v NullableComplianceFields) Get() *ComplianceFields {
	return v.value
}

func (v *NullableComplianceFields) Set(val *ComplianceFields) {
	v.value = val
	v.isSet = true
}

func (v NullableComplianceFields) IsSet() bool {
	return v.isSet
}

func (v *NullableComplianceFields) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableComplianceFields(val *ComplianceFields) *NullableComplianceFields {
	return &NullableComplianceFields{value: val, isSet: true}
}

func (v NullableComplianceFields) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableComplianceFields) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


