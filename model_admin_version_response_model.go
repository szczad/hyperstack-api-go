/*
Infrahub-API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hyperstack

import (
	"encoding/json"
)

// checks if the AdminVersionResponseModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdminVersionResponseModel{}

// AdminVersionResponseModel struct for AdminVersionResponseModel
type AdminVersionResponseModel struct {
	Status *bool `json:"status,omitempty"`
	Message *string `json:"message,omitempty"`
	Version *string `json:"version,omitempty"`
}

// NewAdminVersionResponseModel instantiates a new AdminVersionResponseModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdminVersionResponseModel() *AdminVersionResponseModel {
	this := AdminVersionResponseModel{}
	return &this
}

// NewAdminVersionResponseModelWithDefaults instantiates a new AdminVersionResponseModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdminVersionResponseModelWithDefaults() *AdminVersionResponseModel {
	this := AdminVersionResponseModel{}
	return &this
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *AdminVersionResponseModel) GetStatus() bool {
	if o == nil || IsNil(o.Status) {
		var ret bool
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdminVersionResponseModel) GetStatusOk() (*bool, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *AdminVersionResponseModel) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given bool and assigns it to the Status field.
func (o *AdminVersionResponseModel) SetStatus(v bool) {
	o.Status = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *AdminVersionResponseModel) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdminVersionResponseModel) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *AdminVersionResponseModel) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *AdminVersionResponseModel) SetMessage(v string) {
	o.Message = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *AdminVersionResponseModel) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdminVersionResponseModel) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *AdminVersionResponseModel) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *AdminVersionResponseModel) SetVersion(v string) {
	o.Version = &v
}

func (o AdminVersionResponseModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdminVersionResponseModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	return toSerialize, nil
}

type NullableAdminVersionResponseModel struct {
	value *AdminVersionResponseModel
	isSet bool
}

func (v NullableAdminVersionResponseModel) Get() *AdminVersionResponseModel {
	return v.value
}

func (v *NullableAdminVersionResponseModel) Set(val *AdminVersionResponseModel) {
	v.value = val
	v.isSet = true
}

func (v NullableAdminVersionResponseModel) IsSet() bool {
	return v.isSet
}

func (v *NullableAdminVersionResponseModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdminVersionResponseModel(val *AdminVersionResponseModel) *NullableAdminVersionResponseModel {
	return &NullableAdminVersionResponseModel{value: val, isSet: true}
}

func (v NullableAdminVersionResponseModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdminVersionResponseModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


