/*
Infrahub-API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hyperstack

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateFirewallRulePayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateFirewallRulePayload{}

// CreateFirewallRulePayload struct for CreateFirewallRulePayload
type CreateFirewallRulePayload struct {
	Direction string `json:"direction"`
	Protocol string `json:"protocol"`
	PortRangeMin *int32 `json:"port_range_min,omitempty"`
	PortRangeMax *int32 `json:"port_range_max,omitempty"`
	Ethertype string `json:"ethertype"`
	RemoteIpPrefix string `json:"remote_ip_prefix"`
}

type _CreateFirewallRulePayload CreateFirewallRulePayload

// NewCreateFirewallRulePayload instantiates a new CreateFirewallRulePayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateFirewallRulePayload(direction string, protocol string, ethertype string, remoteIpPrefix string) *CreateFirewallRulePayload {
	this := CreateFirewallRulePayload{}
	this.Direction = direction
	this.Protocol = protocol
	this.Ethertype = ethertype
	this.RemoteIpPrefix = remoteIpPrefix
	return &this
}

// NewCreateFirewallRulePayloadWithDefaults instantiates a new CreateFirewallRulePayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateFirewallRulePayloadWithDefaults() *CreateFirewallRulePayload {
	this := CreateFirewallRulePayload{}
	return &this
}

// GetDirection returns the Direction field value
func (o *CreateFirewallRulePayload) GetDirection() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Direction
}

// GetDirectionOk returns a tuple with the Direction field value
// and a boolean to check if the value has been set.
func (o *CreateFirewallRulePayload) GetDirectionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Direction, true
}

// SetDirection sets field value
func (o *CreateFirewallRulePayload) SetDirection(v string) {
	o.Direction = v
}

// GetProtocol returns the Protocol field value
func (o *CreateFirewallRulePayload) GetProtocol() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Protocol
}

// GetProtocolOk returns a tuple with the Protocol field value
// and a boolean to check if the value has been set.
func (o *CreateFirewallRulePayload) GetProtocolOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Protocol, true
}

// SetProtocol sets field value
func (o *CreateFirewallRulePayload) SetProtocol(v string) {
	o.Protocol = v
}

// GetPortRangeMin returns the PortRangeMin field value if set, zero value otherwise.
func (o *CreateFirewallRulePayload) GetPortRangeMin() int32 {
	if o == nil || IsNil(o.PortRangeMin) {
		var ret int32
		return ret
	}
	return *o.PortRangeMin
}

// GetPortRangeMinOk returns a tuple with the PortRangeMin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateFirewallRulePayload) GetPortRangeMinOk() (*int32, bool) {
	if o == nil || IsNil(o.PortRangeMin) {
		return nil, false
	}
	return o.PortRangeMin, true
}

// HasPortRangeMin returns a boolean if a field has been set.
func (o *CreateFirewallRulePayload) HasPortRangeMin() bool {
	if o != nil && !IsNil(o.PortRangeMin) {
		return true
	}

	return false
}

// SetPortRangeMin gets a reference to the given int32 and assigns it to the PortRangeMin field.
func (o *CreateFirewallRulePayload) SetPortRangeMin(v int32) {
	o.PortRangeMin = &v
}

// GetPortRangeMax returns the PortRangeMax field value if set, zero value otherwise.
func (o *CreateFirewallRulePayload) GetPortRangeMax() int32 {
	if o == nil || IsNil(o.PortRangeMax) {
		var ret int32
		return ret
	}
	return *o.PortRangeMax
}

// GetPortRangeMaxOk returns a tuple with the PortRangeMax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateFirewallRulePayload) GetPortRangeMaxOk() (*int32, bool) {
	if o == nil || IsNil(o.PortRangeMax) {
		return nil, false
	}
	return o.PortRangeMax, true
}

// HasPortRangeMax returns a boolean if a field has been set.
func (o *CreateFirewallRulePayload) HasPortRangeMax() bool {
	if o != nil && !IsNil(o.PortRangeMax) {
		return true
	}

	return false
}

// SetPortRangeMax gets a reference to the given int32 and assigns it to the PortRangeMax field.
func (o *CreateFirewallRulePayload) SetPortRangeMax(v int32) {
	o.PortRangeMax = &v
}

// GetEthertype returns the Ethertype field value
func (o *CreateFirewallRulePayload) GetEthertype() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Ethertype
}

// GetEthertypeOk returns a tuple with the Ethertype field value
// and a boolean to check if the value has been set.
func (o *CreateFirewallRulePayload) GetEthertypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Ethertype, true
}

// SetEthertype sets field value
func (o *CreateFirewallRulePayload) SetEthertype(v string) {
	o.Ethertype = v
}

// GetRemoteIpPrefix returns the RemoteIpPrefix field value
func (o *CreateFirewallRulePayload) GetRemoteIpPrefix() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RemoteIpPrefix
}

// GetRemoteIpPrefixOk returns a tuple with the RemoteIpPrefix field value
// and a boolean to check if the value has been set.
func (o *CreateFirewallRulePayload) GetRemoteIpPrefixOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RemoteIpPrefix, true
}

// SetRemoteIpPrefix sets field value
func (o *CreateFirewallRulePayload) SetRemoteIpPrefix(v string) {
	o.RemoteIpPrefix = v
}

func (o CreateFirewallRulePayload) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateFirewallRulePayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["direction"] = o.Direction
	toSerialize["protocol"] = o.Protocol
	if !IsNil(o.PortRangeMin) {
		toSerialize["port_range_min"] = o.PortRangeMin
	}
	if !IsNil(o.PortRangeMax) {
		toSerialize["port_range_max"] = o.PortRangeMax
	}
	toSerialize["ethertype"] = o.Ethertype
	toSerialize["remote_ip_prefix"] = o.RemoteIpPrefix
	return toSerialize, nil
}

func (o *CreateFirewallRulePayload) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"direction",
		"protocol",
		"ethertype",
		"remote_ip_prefix",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateFirewallRulePayload := _CreateFirewallRulePayload{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateFirewallRulePayload)

	if err != nil {
		return err
	}

	*o = CreateFirewallRulePayload(varCreateFirewallRulePayload)

	return err
}

type NullableCreateFirewallRulePayload struct {
	value *CreateFirewallRulePayload
	isSet bool
}

func (v NullableCreateFirewallRulePayload) Get() *CreateFirewallRulePayload {
	return v.value
}

func (v *NullableCreateFirewallRulePayload) Set(val *CreateFirewallRulePayload) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateFirewallRulePayload) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateFirewallRulePayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateFirewallRulePayload(val *CreateFirewallRulePayload) *NullableCreateFirewallRulePayload {
	return &NullableCreateFirewallRulePayload{value: val, isSet: true}
}

func (v NullableCreateFirewallRulePayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateFirewallRulePayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


