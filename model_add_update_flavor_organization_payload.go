/*
Infrahub-API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package hyperstack

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AddUpdateFlavorOrganizationPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddUpdateFlavorOrganizationPayload{}

// AddUpdateFlavorOrganizationPayload struct for AddUpdateFlavorOrganizationPayload
type AddUpdateFlavorOrganizationPayload struct {
	Name string `json:"name"`
	Description *string `json:"description,omitempty"`
	OpenstackId string `json:"openstack_id"`
	RegionId int32 `json:"region_id"`
	Cpu int32 `json:"cpu"`
	Ram float32 `json:"ram"`
	Disk int32 `json:"disk"`
	Ephemeral *int32 `json:"ephemeral,omitempty"`
	GpuId int32 `json:"gpu_id"`
	GpuCount int32 `json:"gpu_count"`
	IsPublic bool `json:"is_public"`
	Organizations []int32 `json:"organizations"`
}

type _AddUpdateFlavorOrganizationPayload AddUpdateFlavorOrganizationPayload

// NewAddUpdateFlavorOrganizationPayload instantiates a new AddUpdateFlavorOrganizationPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddUpdateFlavorOrganizationPayload(name string, openstackId string, regionId int32, cpu int32, ram float32, disk int32, gpuId int32, gpuCount int32, isPublic bool, organizations []int32) *AddUpdateFlavorOrganizationPayload {
	this := AddUpdateFlavorOrganizationPayload{}
	this.Name = name
	this.OpenstackId = openstackId
	this.RegionId = regionId
	this.Cpu = cpu
	this.Ram = ram
	this.Disk = disk
	this.GpuId = gpuId
	this.GpuCount = gpuCount
	this.IsPublic = isPublic
	this.Organizations = organizations
	return &this
}

// NewAddUpdateFlavorOrganizationPayloadWithDefaults instantiates a new AddUpdateFlavorOrganizationPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddUpdateFlavorOrganizationPayloadWithDefaults() *AddUpdateFlavorOrganizationPayload {
	this := AddUpdateFlavorOrganizationPayload{}
	return &this
}

// GetName returns the Name field value
func (o *AddUpdateFlavorOrganizationPayload) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AddUpdateFlavorOrganizationPayload) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AddUpdateFlavorOrganizationPayload) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AddUpdateFlavorOrganizationPayload) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddUpdateFlavorOrganizationPayload) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AddUpdateFlavorOrganizationPayload) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AddUpdateFlavorOrganizationPayload) SetDescription(v string) {
	o.Description = &v
}

// GetOpenstackId returns the OpenstackId field value
func (o *AddUpdateFlavorOrganizationPayload) GetOpenstackId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OpenstackId
}

// GetOpenstackIdOk returns a tuple with the OpenstackId field value
// and a boolean to check if the value has been set.
func (o *AddUpdateFlavorOrganizationPayload) GetOpenstackIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OpenstackId, true
}

// SetOpenstackId sets field value
func (o *AddUpdateFlavorOrganizationPayload) SetOpenstackId(v string) {
	o.OpenstackId = v
}

// GetRegionId returns the RegionId field value
func (o *AddUpdateFlavorOrganizationPayload) GetRegionId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.RegionId
}

// GetRegionIdOk returns a tuple with the RegionId field value
// and a boolean to check if the value has been set.
func (o *AddUpdateFlavorOrganizationPayload) GetRegionIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RegionId, true
}

// SetRegionId sets field value
func (o *AddUpdateFlavorOrganizationPayload) SetRegionId(v int32) {
	o.RegionId = v
}

// GetCpu returns the Cpu field value
func (o *AddUpdateFlavorOrganizationPayload) GetCpu() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Cpu
}

// GetCpuOk returns a tuple with the Cpu field value
// and a boolean to check if the value has been set.
func (o *AddUpdateFlavorOrganizationPayload) GetCpuOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Cpu, true
}

// SetCpu sets field value
func (o *AddUpdateFlavorOrganizationPayload) SetCpu(v int32) {
	o.Cpu = v
}

// GetRam returns the Ram field value
func (o *AddUpdateFlavorOrganizationPayload) GetRam() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Ram
}

// GetRamOk returns a tuple with the Ram field value
// and a boolean to check if the value has been set.
func (o *AddUpdateFlavorOrganizationPayload) GetRamOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Ram, true
}

// SetRam sets field value
func (o *AddUpdateFlavorOrganizationPayload) SetRam(v float32) {
	o.Ram = v
}

// GetDisk returns the Disk field value
func (o *AddUpdateFlavorOrganizationPayload) GetDisk() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Disk
}

// GetDiskOk returns a tuple with the Disk field value
// and a boolean to check if the value has been set.
func (o *AddUpdateFlavorOrganizationPayload) GetDiskOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Disk, true
}

// SetDisk sets field value
func (o *AddUpdateFlavorOrganizationPayload) SetDisk(v int32) {
	o.Disk = v
}

// GetEphemeral returns the Ephemeral field value if set, zero value otherwise.
func (o *AddUpdateFlavorOrganizationPayload) GetEphemeral() int32 {
	if o == nil || IsNil(o.Ephemeral) {
		var ret int32
		return ret
	}
	return *o.Ephemeral
}

// GetEphemeralOk returns a tuple with the Ephemeral field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddUpdateFlavorOrganizationPayload) GetEphemeralOk() (*int32, bool) {
	if o == nil || IsNil(o.Ephemeral) {
		return nil, false
	}
	return o.Ephemeral, true
}

// HasEphemeral returns a boolean if a field has been set.
func (o *AddUpdateFlavorOrganizationPayload) HasEphemeral() bool {
	if o != nil && !IsNil(o.Ephemeral) {
		return true
	}

	return false
}

// SetEphemeral gets a reference to the given int32 and assigns it to the Ephemeral field.
func (o *AddUpdateFlavorOrganizationPayload) SetEphemeral(v int32) {
	o.Ephemeral = &v
}

// GetGpuId returns the GpuId field value
func (o *AddUpdateFlavorOrganizationPayload) GetGpuId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.GpuId
}

// GetGpuIdOk returns a tuple with the GpuId field value
// and a boolean to check if the value has been set.
func (o *AddUpdateFlavorOrganizationPayload) GetGpuIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GpuId, true
}

// SetGpuId sets field value
func (o *AddUpdateFlavorOrganizationPayload) SetGpuId(v int32) {
	o.GpuId = v
}

// GetGpuCount returns the GpuCount field value
func (o *AddUpdateFlavorOrganizationPayload) GetGpuCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.GpuCount
}

// GetGpuCountOk returns a tuple with the GpuCount field value
// and a boolean to check if the value has been set.
func (o *AddUpdateFlavorOrganizationPayload) GetGpuCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GpuCount, true
}

// SetGpuCount sets field value
func (o *AddUpdateFlavorOrganizationPayload) SetGpuCount(v int32) {
	o.GpuCount = v
}

// GetIsPublic returns the IsPublic field value
func (o *AddUpdateFlavorOrganizationPayload) GetIsPublic() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsPublic
}

// GetIsPublicOk returns a tuple with the IsPublic field value
// and a boolean to check if the value has been set.
func (o *AddUpdateFlavorOrganizationPayload) GetIsPublicOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsPublic, true
}

// SetIsPublic sets field value
func (o *AddUpdateFlavorOrganizationPayload) SetIsPublic(v bool) {
	o.IsPublic = v
}

// GetOrganizations returns the Organizations field value
func (o *AddUpdateFlavorOrganizationPayload) GetOrganizations() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}

	return o.Organizations
}

// GetOrganizationsOk returns a tuple with the Organizations field value
// and a boolean to check if the value has been set.
func (o *AddUpdateFlavorOrganizationPayload) GetOrganizationsOk() ([]int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Organizations, true
}

// SetOrganizations sets field value
func (o *AddUpdateFlavorOrganizationPayload) SetOrganizations(v []int32) {
	o.Organizations = v
}

func (o AddUpdateFlavorOrganizationPayload) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddUpdateFlavorOrganizationPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["openstack_id"] = o.OpenstackId
	toSerialize["region_id"] = o.RegionId
	toSerialize["cpu"] = o.Cpu
	toSerialize["ram"] = o.Ram
	toSerialize["disk"] = o.Disk
	if !IsNil(o.Ephemeral) {
		toSerialize["ephemeral"] = o.Ephemeral
	}
	toSerialize["gpu_id"] = o.GpuId
	toSerialize["gpu_count"] = o.GpuCount
	toSerialize["is_public"] = o.IsPublic
	toSerialize["organizations"] = o.Organizations
	return toSerialize, nil
}

func (o *AddUpdateFlavorOrganizationPayload) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"openstack_id",
		"region_id",
		"cpu",
		"ram",
		"disk",
		"gpu_id",
		"gpu_count",
		"is_public",
		"organizations",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAddUpdateFlavorOrganizationPayload := _AddUpdateFlavorOrganizationPayload{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAddUpdateFlavorOrganizationPayload)

	if err != nil {
		return err
	}

	*o = AddUpdateFlavorOrganizationPayload(varAddUpdateFlavorOrganizationPayload)

	return err
}

type NullableAddUpdateFlavorOrganizationPayload struct {
	value *AddUpdateFlavorOrganizationPayload
	isSet bool
}

func (v NullableAddUpdateFlavorOrganizationPayload) Get() *AddUpdateFlavorOrganizationPayload {
	return v.value
}

func (v *NullableAddUpdateFlavorOrganizationPayload) Set(val *AddUpdateFlavorOrganizationPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableAddUpdateFlavorOrganizationPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableAddUpdateFlavorOrganizationPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddUpdateFlavorOrganizationPayload(val *AddUpdateFlavorOrganizationPayload) *NullableAddUpdateFlavorOrganizationPayload {
	return &NullableAddUpdateFlavorOrganizationPayload{value: val, isSet: true}
}

func (v NullableAddUpdateFlavorOrganizationPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddUpdateFlavorOrganizationPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


